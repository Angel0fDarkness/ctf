#!/usr/bin/env python3
# muffinx_obsfucator
import base64;phdaQOevoN=exec;JvEvwxYuOp=base64.b64decode;phdaQOevoN(JvEvwxYuOp('LulEyCeIeU=exec;fwrVnVPKFn=base64.b64decode;LulEyCeIeU(fwrVnVPKFn('cHF6UUVDblRhUT1leGVjO0xZT0FjZVBxaUQ9YmFzZTY0LmI2NGRlY29kZTtwcXpRRUNuVGFRKExZT0FjZVBxaUQoJ1psVkhRMDFSU1VkQlp6MWxlR1ZqTzNoeFFtRjZUblJUWVcwOVltRnpaVFkwTG1JMk5HUmxZMjlrWlR0bVZVZERUVkZKUjBGbktIaHhRbUY2VG5SVFlXMG9KMlF6YUZOYVZrcFdWMVUxY1ZwVU1XeGxSMVpxVHpGb1ZHTXhhREZaVlhCS1VUSTBPVmx0Um5wYVZGa3dURzFKTWs1SFVteFpNamxyV2xSME0yVkdTbXhWYkZaYVZHMXdiRXRHYUZSak1XZ3hXVlZ3U2xFeU5HOUtNV3gxVVc1V1VsWnNTazVhVjNoM1VsWk9WVTFYZUd4U01WcHhWSHBDYjFkdFZsWlhhMVpVVWpOQ2NGcFdWbHBQVm14MFVtNXdZVlpHYTNkVVJ6RktUV3MxU0ZWdGVGcE5hbXh5VjJ4U01HRlhUa2hPVlVwWFVsaG5NbFl5ZEZOVGEzUkdZVVp3YkZaV2NFWlZNR1IzWVZkV1ZsZFhPVXROYkVZMVZqSndTMVV4U2paV2JGWldZa2RvV0ZsWGVGZFNWVEZZWlVkNFUwMVdjSGhXU0hCTFdWZE5lRlpZWkZOaVZFWnZWRlphZDJSV1ZuRlJhM0JRVm0xNE1GVnROWGRaVmxwSFlUTmtWVko2Umt0VVYzTXhVMFpXZEdWR2NFNWhiWGg1VmpKNFUwMUZNSGhqU0ZaWVlURmFjRmxyVlRGU01YQkhXa1U1VmxaWVVrbFdNalZQVm1zeFJsZHVVbHBXUlZwb1dXMTRTbVF4VGxoUFZYUk9WbXh3V2xaR1dsZGlNVnB6Vkd0YWFsSnJjRmhaVkVwdlUwWlNWVkpzVG1wV1ZFWlpXbFZrTkZVd01WZGpTR2hYVTBoQ1RGUnJaRXRTTVZaeVlrZG9VMDB5YUZaV1JsWlhXVlphUjJKSVJsVmlSWEJSVm0weE5FMUdWblJPV0dSYVZteHdTRmxVVG10V1ZrbzJVbXQwVlZZelRYaFZNRnBYWkVkV1IyTkZOV2hpV0dnMVZtcEtORlV3TVVkV2JsSlVZa1p3YUZWdGRHRmpWbXh5Vm10MFYySkhkRFJaVldRd1ZsVXhTVlZyYkdGV1YxRXdWbXhhVDFOSFJrbFViRnBzWVRCd1NWWnNVa3RUYlZaelZteG9VRlpZVWs5V2JYUjNUbFphV0UxVVVsTk5WbG93VlRKNGIySkdTalppUm1oYVlrZG9WRlpWV21GamJHUnlUMWR3VjFaRldscFhiRlpyVGtaVmQwMVdaR3BUUjJoWVZUQm9RMVJHWkZkWGJIQnNVbXMxTVZaSE1XOVZNVmw2WVVaV1YxSnNjSEpXVkVaU1pVZEZlbHBIUmxOV1JscFNWbTB3ZUU1Rk1VZFdibEpQVjBkU1lWWnRlSGRUUm14VlZHMTBWMVpyYnpKVmJYUXdWbFpaZWxSWWFGWk5SbkJZV2tWa1YxSXlUa1pPVjJocFYwZG5NVlp0Y0V0T1JsVjNUVlZrVmxkSGFGUlphMlJUVlRGc1ZWRlVSbWxOVm5CNFZWY3hSMWRHU25OWGJGcFdZbGhOTVZaclZYaFRWbFp5WWtaa1RtSnRhSGxXYkZKTFV6Rk9TRkpyV21wU2JIQnZXVlJHZDJWV1duSlpNMmhWVFZVMVNGWlhlRzlWUmxwWlZXczVWMkZyV2t4V01WcHJWMGRTU0ZKdGRFNVdiSEEyVm1wSk1WVXhXblJUYmtwVVlsVmFZVmxVUm5kTk1WcHlWMnhrYWxacmNIbFhhMXByVmpGYVJsZHNjRmhpUmxweVZHdGFWbVF3TVZkYVIzQlVVakpvV1ZaVVFtOVJNVlpIVm01R1UySkZOWEpWYlhNeFpXeFplVTFVUWxaTlJFSTFXVlZvYTFZeVNsbGhSbWhoVWtWd1ZGbDZSbXRqTVZwelZtMW9UbGRGU2xOV2JUQjNaVVUxUmsxVlpGZGliRXBRVmpCa1UxbFdXblJsU0dSVVVtMTRWbFpITVRCV01WcHlZbnBLVm1KWVVYZFdiRnBhWld4U1dXRkdXazVTYmtKWlYydFdhMVl4U1hsVWExcFBWakpvY0ZZd1pHNU5WbHAwWTBWMFQxSnNWak5VVmxacldWWk9SazVYYUZaaVZFWlVXVEJhVjJNeFduVmFSbWhUWWtWd1dsZHJWbTloTVZKelUyNU9hbE5IZUZoWmJGSkhVMFphV0UxVldteGlSbHA1V1RCYVlXRldaRVpOVkZKWVZteHdhRmRXV210V01WcDFWbXhXYVZORlNuZFdWekUwWkRGU1YxcEdhR3BTVjFKWVdXeGFZV1ZzVlhsbFJ6bFdVbXh3V2xaWGN6VlhiRnBHVjJwT1YwMXVhR2hWYWtaclpFVTVXR0ZGTldoTldFSlpWbXRhVjJJeVJYbFNiRnBPVTBkNFYxbHJXbUZYUm14eVdrWk9WVTFXU2xoV01qVnJWMFpKZDJORmJGcE5SMUl6VmxSR2ExSXhUbk5hUm1ob1RWWndiMWRyVWtkaE1VbDRXa2hXVm1KWWFGUldiRkpYVjFaa1YxcEVRbXROVmtwSVdUQldZVmRIU2xaWGJGSmFZVEpTVkZwV1dsWmxWMUpGVld4a1UyRXpRbGxYVkVKaFVURmtSMWRZY0doU2JXaFdWbXhrVTFSR1ZYZFhhemxxVFZkU2VsWlhNWE5XTVVsNllVWnNWMkV4Y0ZSVlZFWmFaVlpXZFZSc1ZtbGhNWEJXVjFaU1MxVXhaRmRXYms1V1lUSlNXVmxyWkZObFZtUnlZVVU1VjFZd1dUSlZiWFJ6VmxVeFYxTnNRbGRpV0U0MFZtcEdhMlJXWkhOYVJrNVRWbFpaTUZadGNFTlpWbFY1Vkd4a1ZtSnJOVlJaYTJSVFZrWldjMVp1V214U2JIQmFXVEJXYTFaVk1YSk9XR3hWWVRKb2RsZFdXa3RrUmxaMVVXeGFhVlpHV2tWV2JGSkhXVmRTUmsxV1pGVmlXRUpVV1d4b2IwNXNXbkZUYWxKVlRWWldNMVJXV21GWFIwcEhWMjFHVjJKSFVuWmFSM2hoWXpGa2RGSnJPV2xTV0VJMVZrWmFZV0l5UmxkVFdHUlBVa1ZLV0ZadGVFdFVSbFp4VW10d2JGSnNXakZXYlRGdlZURmtTR0ZHVWxkU2JWRXdWWHBLVTJNeFpIVlZhemxZVWpGS1ZWWkdWbE5STURWSFlraEthRkpYVWxoV2FrSlhUbXhhV0dONlZsZGlWWEJKVmxaU1ExWnJNVmRqUjJoV1RVZFNVRlZ0ZUZOa1IwcEhWRzFzVjJFelFrcFdiWGhUVTJzeFYxVllhR0ZUUlhCUFZUQmtORlpzV25KWGJVWlhUVlphTUZremNFZGhiRnAwWkVST1YySllRa1JXYWtaYVpVWk9jbUZHY0U1U2JrSXlWbTF3UzFNeFpGaFNhMXBXWWtkU2NGWXdWa3RVVmxwWlkwVjBWazFWYkRSWGEyaExWMGRLU0dGSE9WVldWMmhFVmtkNFlWWldSbk5hUm5CWFlrVlpNRmRYZEc5VU1WbDVVbTVLVkdKclNsZFpWM1JMVFRGYWNWSnNXbXhXVkVaR1ZtMTRhMkZIVm5KVFdIQlhZbFJCZUZkV1dtRlRSa3AxVTIxd1UxWXlhRmxXUmxaaFZqQTFSMWRZYUZoaWJWSlZWV3BDZDFJeFVuTldWRVpXVFd4YU1GcEZVbUZXTWtwSFUydG9WMkZyY0VkYVZWcFRWMWRLUjFSdGFFNWlWMmhZVm0xd1EyRXdOVWRhUldSWVltdHdXRmx0TVZOV01WWjBaVWRHV0ZKc2NGaFpWV1F3Vm14S2MyTkdjRlpXYkVwSVZqSjRZVkpyTlZaVmJHUlhWbXhaTUZacVFtdFdNVTVIVTI1T1lWSlVWbGhaYTJoRFUyeGFkR05GVGxwV01ERTFWbGQwWVZSc1duUlZiR2hhWVRGVmVGbHFSbE5XYkdSMFVtczFhVkl4U2xkV1Z6RTBXVmRLUjFOWWFGUmhNbWhZVlcweGIyVnNXbkZUYTNScVRWVTFlbFpIZUhkaFZrbDRVMnBLVjJKWWFHaFpNakZYVWpGV2RWVnJPVmROYm1oM1ZsZHdSMU50VVhoWGEyaHNVbTFTVDFWcVFsZE9WbFY1WlVkR2FHSkZjSHBXTW5oclZqSktkVkZyVWxWaE1YQjZWbXBHYTJOdFRraGtSVFZYVFZWdk1GWnRjRXRPUjFGNFdrVmtWRmRJUW05VmJGcGhWMVphY2xacmRHcGlSbGt5VlcweE1GWXdNVlpqUkVaWFlsaG9kbGxXV210U2JFNTFXa1pvVjAweFNsbFdNVnByVlRGWmVGcElUbWhTVkZaVlZXcEtiMVZXV2xoalJVNWFWbXMxV0ZZeWRHdGhSazVHVGxjNVdsZElRa1JVVkVaVFl6RmFjVkZzWkdobGExcEpWbXBLZDFReFpIUldia3BZWW0xNGFGWnNaRk5UUmxaeFVtNWtWRkl3Y0VoV1IzTXhWVEZLVjFacVZsZGlWRVV3VjFaa1NtVkdWbGxoUmxacFlYcFdWMWRXVWtka01rNVhWbGhrVjFaRldtRldiVEUwWld4YVdHUkhkRmROVlhBd1dsVm9jMWRIUlhoV1ZFWmFWak5PTkZWc1pFdFNNV1J6VjJ4a2JHRXhjRXBXYlRGM1V6RlplVlJ1VG1GU2JYaHhWVzB4YjFkR1VsVlNhM1JzVm14d1dWa3dWa3RpUmtweVlrUldWMUl6VW5KV2EyUkxVbXhrYzJGR1dtaE5WbkJOVmtaYVlWWXdOWE5UYmtwUVZqTkNiMXBYZUVwTlJsbDVaRWRHYUUxcldsaFZNalZYVlcxS1JrNVdhRnBpUmtwSVZtdGFjbVF4WkhWVWJYQk9WakZLTmxaclpEUlVNVkp6VjJ4a2FsSnNjRmxXYlhoaFpHeHNjVkp0UmxkTlYxSjRWako0VDJGSFZuSlhiSEJZVmpOU2NsWkVRVEZTTVZwelZteFNhRTFzU2xWV1JscGhVekF4VjJKR1dsZGhiRXBYV1Zod1IyVnNWWGxOUkZaWVVteHZNbFZzYUd0WlZrcEdVbXBTV21WcmNFeFZNVnBUWXpGYWRHRkZOVk5TYkc5NlZtMTRhbVF5VmtaT1ZXUmhVMFUxV1ZsVVNtOWpWbFowVFZaT2FVMVhlSGxXYkZKSFZUQXhXR1JFVGxkV00xRjNWakJhUzJNeVRrWmFSbkJPVW01Q01sWXhXbUZaVlRWelUyNU9VbUpHV25CVmJUVkRVMVprY2xkdFJsTk5iRXBKVlRKMGEyRkdTbkpPVm1oWFltNUNlVlJXV21GalZrcHpWR3hTYUdWcldsbFdiVEF4VkRKR1ZrMUliR2hTYkZwaFdWUktVMlJzV25KWGJrNXJVbFJXVjFaSE1YZFViRnAxVVZoa1dHRXhXbGhVVlZwU1pVWmtkVlZ0ZUZSU01taFlWa1pqTVZSck1WZGlSbVJZWVROQ2NsUlZVa2RXYkZsNVpVZDBWazFyY0VkV01XaDNWMFphTmxKWVpGVldWbkJvVlRCYVMyTldaSFJTYkU1cFZqSm9XbFl4WkRSaU1rbDVVbXRrV0dKSFVsbFpiRlpoWWpGU1dHUkhSbGhXYkZZMVdsVmtNRll5U2xaV2FsWlhWak5vVUZacVJtRlNiVTVKVjJ4V2FFMVlRbTlXVjNCSFkyMVdkRkpyWkZkaVJUVndXVlJDZDFsV1duSlhiVVpYVFZaR05WVnRkR3RXUjBweVkwWkNWMkV4Y0V4V2JGcFRWbXhhVlZKdGNHbFNNVXBaVmpKMFYwMUhSblJUYkZwUFZsWndWMVJYTlc5Tk1XeFhWMnQwVjFac2NIbFdiWGhyVlRKS1JtTkZiRmhoTVVwSVdWUkdXbVZHVm5WV2JHUnBVbXR3ZDFacVFtdGlNbEY0VjI1U1RsWkdTbkZVVlZKWFUwWlplR0ZJVGxWTlYxSkhXVEJWTlZZeVJuSlhiV2hoVmpOb2VWcEVSbXRrVmxKeldrWk9UbEp1UVRGV01WSkRZV3MxVjFkWWJGUmliRnBUV1d0a2IyRkdWblJsU0dSV1VteHdNRnBWYUd0V1JscHpVMnBDWVZKV2NGQldSM2hMVWpGa2NtUkdaR2hOVlhCSlYxZHdTMVJ0VmxkVGJHeG9VbXMxV1ZWcVJrdFdiR1JYV2tSU1dsWXdXa2hXYlRWVFZHeGFWVlp1VGxaaVZFWlVWRlZhVTFZeFdsVlNiV3hUWWtkM2VsZFVRbGRrTVZsNFYycGFVMkZyTlZoV2ExWkhUVEZ3VjFwRlpGUldNRFZJVmxjeGMyRldaRWhhZWtaWFRWWktSRlp0Y3pGVFJscHlZVVpTYUUxc1NuaFdWekI0WWpGa1IxZHVUbGhpYlZKWldXdGFjMDVHWkZWVWJYUnBVbXR3ZWxrd1dtOVdhekZ4Vm10NFYxWkZXbWhVYlRGTFUxWktjMXBIYkZOaE0wSktWbXRhVjFsV1dYZE9XRTVWWW1zMWFGVnFUbE5XUm14VlVtNWFhMDFYVWxoV2JURkhWbXN4Y2xkdWNGZGlSMmg2VjFaYVQxSXhaSE5hUmxaWFlsWktNbGRzWkRSV01rMTRZMFZhWVZKdGFGUlVWbHAzVXpGWmVXUkhSbFpOVmxZelZGWm9WMkZHU2tkalJteFhZVEZhVEZZd1duTmpWazV5VDFaU1UyRjZWalZYVjNSaFV6SkdSazFZVm1oVFJuQllXV3hvUTFWR2JIRlJXR1JzVW14d1dsZHJaRWRXUmtwVlZtNW9WMUp0VVhkWmVrRXhVakZrYzJGRk9WZFdWRloyVm0weE1HUnJNWE5pU0VwWVlsVmFXVmxyV25kTlJscFhWV3RPV2xacmJEWlpWV1J2Vm1zeFNGVnJlRlpOVm5CVVdrVmtTMUpyTlZkYVIyaE9UVVZaTWxadGNFZGhNREZJVW01S1QxWnRVbFZaYTJSdlZrWnNjbHBIT1dwTlZsWXpWakkxYTFZeFNuTlhibWhXVFc1Q1ZGbHJaRXRUUjFaSllVWmFWMDB5YUZGWFZtUTBVMjFSZVZScldtbFNiRnBQVm0xNGQxZFdaRmRXYlVaWVlsWmFNRlZ0ZEZkV1IwcEhZMGM1VlZZemFFeFViWGhyVjFkT1JtUkdVbWxXYTFrd1ZtMHdNVll4Vm5SVGJHaHNVbXhLYUZadWNFWk5SbFp4VW0xMFYwMVhVakJhUlZVMVZUQXhWbU5FV2xkV1JXOTNXV3BLUjFZeFVuSlhhemxZVWxWd1YxWnRNVFJrTVZKSFkwVldVMkpyTlhGWmEyUXpUV3hhZEdWSGRGZE5SRVpJV1RCYWQxZEhTa2RYYmxwWVZteHdZVnBWV2s5WFYwcElaVVpTVkZKVmNHOVdNVnByVFVac1YxZHJaR2hOTWxKb1ZXeG9VMVpXVm5OVmJrNVlVbXh3TUZSV1l6VldNREZGVVdwV1dHRnJOWHBXYWtwTFVqSk9SMVJ0UmxOU1dFSk5WMVJKZUZVeFNYaFdibEpvVWpOb2NGWnRkSGRaVmxwMFRVaGtiRkpVVmtoWmExcHJWakpLU0ZWc2JGcGlSMmhVV1dwR1lXTldSblZhUm1oVFlraENXbGRyVm10TlJscDBVMnRrVjJGc1dtRldiRnBMVmtaYWNWSnJkR3RTYkVwNFZsZDRhMVV4V25WUldIQlhZV3RLVjFwVldtRmpNVloxVlcxb1UyRjZWblpYYkdRMFZtMVJlRmRzYkdwU1ZUVldWRmQwVjA1R1draE9WazVYVFd0d1NGa3dXbXRYYlVwWlZXdDRXazFHY0ZkYVJFWmhZMjFTUjFWdGJGTk5NbWhhVm1wS01GVXhWWGxTV0dST1ZteHdVRlpzWkRSWlZteFZVMjA1VmxKdGVGbGFWVll3VjBaSmQxZHJjRmhoTVhBeldWVlZlR1JIUmtaV2JHUlhVbFp3ZVZaWGNFZGhNVTVIVjI1S2FWSnRhSEJXYWtwdlpERmFkR05GT1dsTlJGWjZWMnRhVjFWdFNraFZia0pWVmpOTmVGVXhXbFpsVjFKSlZHeGFhVlpXV1RGWGJGWnFUbFpaZVZKdVNrOVhSbkJXVm10V1lWWXhjRVZTYm1SVVZteEtNRmt3VlRGaFIxWnpWMnRzVjAxV2NGaFpha1pHWlZaS2MxcEdWbWhOV0VKV1YxWm9kMVl4YkZkWGJsSk9WbXR3VDFWdE5VTlNiRlowWlVVNVYxSnJiRE5aTUZaM1ZqRktObEpxVGxkV1JWcHlWVEJrUjFKV1VuTmhSbVJPVFZWdmVWWnNXbE5TTVZWNFdrVmtWR0pyTlc5VmFrNXZWbFpXY1ZKcmRGZE5WbkJaV1RCV01GUXhTWGhYYm5CYVZrVTFjbFpxU2tkak1VNTFVbXhhYUdFd2IzcFdWRW8wVmpGa1NGUlljR2hTTW1oVVdXdGtNMDFzWkZkV2JFNVZUVlpzTkZVeWVHOVdiVXAxVVcxR1lWWXpVak5XVlZwWFpFVXhWMXBHVWxkaE1XOTNWMWQwWVZVeFZYaFhiR3hTWWtWS1dGUldXbmRoUm14VlVWUkdWRkpzV2xwWlZWcGhZVVV4ZEdGSVpGZFdSVXBYVkZaa1QxWXhXblZVYldoVFpXMTRlVlpHV210T1IxWlhZa1phVjJGNmJGaFZiWGh6VFRGWmVXVklUbHBXYkhCWldWVm9TMVl5UlhoalJYUmhWbTFTV0ZVeFpFOVNNazVJWVVkb1RsTkZTbGRXYWtaVFVUSkZlRlJZYUZWaE1YQlJWbTE0ZDFkR2JITmFSemxZVW14S1ZsVXlNREZpUmxwelkwaHdWMDF1YUV4WlZFRjRZMjFPU1dKSFJsTldia0pWVjFaV2ExWXlVa2RXYms1cFVtMVNjRlpyVmxaa01WbDRWMjFHVjAxV2JEUlhhMmhUWVRGSmVXRkdhRlZXVjJoRVZqRmFZV014Y0VWUmJXaE9WbXh3TmxadGVHOWpNa1pIVTJ0a1ZHSkhhRmRaYkZKSFZVWlNjbGR0UmxOaVIxSXhWMnRhYjFVeFdrWlhiR2hYWVRKT05GbHFSbFpsVmtweFYyeGtWMUpWY0ZoWGJHUXdVekZXUjJKR1ZsTmhlbXh5VlcxNGQyVnNXWGxsUjBab1ZqQldNMWt3YUd0V01WcEdVMnhvVm1WcldsQlpla3BMVWpGd1NGSnNUbE5oTTBJMVZtdGFZVlpyTVZkVWJHUnBVMFZ3YjFWc1VuTmlNV3h5Vm01a1dGWnRlRmRaVldRd1YwZEtWbFpxVmxkU2JFcElWakp6ZUZkR1ZuSmhSbVJPVWpGS1dWWlVSbUZrTVVsNFZtNU9WV0Y2Vm5CWmJHUnFaVlphY1ZKc1RsSk5WbXcxVlRGb2MxWlhSWGxoUmxaYVZrVnZNRlpVUm5OV1ZrNXhWVzFzVGxadVFqUldhMk4zVGxaU2NrMVdaR3BTVjFKWldWUktiMVZHYkZoak0yaHFZWHBXVjFkclpFZFdNVmw1WVVWV1dGWnNjR2hXUkVaTFl6RlNkVk5yT1ZkaWEwcFpWMWQ0WVZKdFVYaGFTRXBXWVRKU1YxUldWVEZUVmxWNVpFaE9WMVl3Y0ZwVlYzaFRWakF4U0ZWdVdsVldSVnB5VmpCa1UxTkZPVmRUYXpWWFlUTkNZVlpzWTNoT1IwbDVVMnRrVldFeWFGZFphMXBoVmpGc1dHUklXazVTYmtKWldsVm9TMkV3TVZkalJFSlZUVmRTTTFaVVFYaFRWa1p5WkVaa1YySldSak5YV0hCTFVqRkplRnBHYkdwU01taFVWV3hTVjFkR1drZFdiWFJXVFd4YWVsbHJVbUZXUjBZMllrWlNXbUpHV21oVk1uaFhWMFV4V1ZSc1pGTmhNMEpZVjFSQ1YwMUdaRWRYYms1cVUwVndWbGxVU2xOVk1YQldWMnhPYW1KVldrbFphMXBUVlRGYVIxZHFVbGRpUjFFd1dWUktTbVZXVmxsaFIyeFVVbGhDZGxaWGVGWk5WbHB6VjI1R1VtSlZXbGxXYlRWRFZqRnNWbHBFUWxkTlZuQjVXV3RTVjFsV1dsaGhSRTVYVFc1T05GVnFSbXRXVmtaelkwVTFVMDFWY0U1V2JGSkhXVlpKZVZSdVVsUmhNbWh2VlcweFUxUXhVbGhOVjNSUFlrWndlbFpYZEU5aFJURnlUVlJXVjFKdGFIcFdhMXByVTBkV1NGSnRSbGRsYTFWM1ZtdFdZV1F4V1hoalJWWlNZbGhTVDFadGRISmxWbHBZVFVSR1ZVMVhVa2xWTW5SdlZtMUtTRlZzWkZwaVIyaDJXa2Q0V21WVk1WWmtSbVJYWVROQ05sWnFTalJaVjBaWFdrVmtWR0V5YUZsV2FrNURWRVphUlZKdFJtcGhla1pZV1d0YVlXRldTbkpqUmtKWVZqTlNhRnBITVZKbFJtUnpXa1p3VGsxdGFIZFdSbHBoWkRGT1YxZHJhR3hTYXpWaFZteFNSMlZHV25SbFJtUlhUVVJHU1ZaV1VrTldiVXBaWVVod1YyRnJXak5WYkZwWFpFZFNSazVXWkZkU2JIQk1WbXBHYTAxSFNYaFZXR3hUWW1zMVZWbHJaRzlpTVZWM1drWk9XbFp0ZUZaVk1uTXhWR3hhZEdSRVVsaGhNVnB5VmpCYVNtVkdaSEpqUm1ob1RWaENWVlpzVWtKbFIxSllVbXRXV0dKSGFGaFZiRlozVjFaa1dHTkZkRlZOVlRWSVZrYzFTMkZXU25KalJ6bFZWbnBXZGxwSGVHRmtSMDVHVDFkc1RsSkZTVEJXYlhodllURnNWMVJyV2s5WFJWcFdWbXBPVG1WR1ZuRlNiazVYWWxWYVIxWkhNVzlXTWtZMlZtdG9WMVpGYjNkYVJFWnJZekZrZFZWc1dsZFNWWEJ2Vmxkd1QySXlSa2RXV0dSaFVsaFNWVlp0ZUV0TlJteHlWbFJHYUZZd1ZqTlphazUzVmpBeFdGVllaRnBXTTAxNFZqQmFVMk15UmtkVWJXeFRUVzFvTmxac1VrTlpWMUY0VjJ0a1YySnJXbFZaVjNoTFl6RnNjbHBFVW14U2JGb3dXbFZWTldGSFNrWmlSRTVhVFVaYWVsWnNWWGhXTWs1SFlVWndWMVp1UW1oWGJHTjRVakZLVjFWdVRsaGhlbFpVVkZaV2RrMXNXWGhoU0dSVVRWWkdORlV5TlZOVk1rVjVaVVpPV21KSFVUQldiRnBYWXpGYWRWcEdVazVXTVVwWlZtcEplRTFHVVhoVFdHaFRZV3hLV0ZWcVRsTmtiR3hYVjJzNVUyRjZWbHBWYlhoaFlWWkplRk5xU2xoaE1VcElXWHBLVDJNeVNrVlhiR1JwVWpGS1dWWkdWbUZrTVdSeldraE9WMkpVYkdGV2JYaHpUa1pWZUdGSVRtbFNhelZLVlZjeFIxZHNXWHBWYldoWFlURndlVnBFUm5kU2JWSkhWV3hrYUUxWVFURldNV1F3WVRKSmVGZFlaRTVUUjNob1ZGUk9RMWRHV25KV2EzUnFZa2QzTWxVeWN6RmlSbHB6VTI1c1YwMXFSblpXYTFwTFZtMU9TVnBHWkZkbGJGbDZWMWh3UzFVeFdYaFhia3BoVW14YWNGWXdWa3RsUmxwWVpVYzVWazFXY0hwWk1GWmhWMGRLZEZWc2JGWmlXR2d6VkZWYWQxWnNXbkpQVm1ST1lURndOVmRVUWxkT1JteFhVMnhrYWxJeWFGZFpiR2h2WTJ4cmVXVkZPV3BpVmxwSVZsZDRUMVl5U25KVGJFcFhZV3RhY2xScldscGtNREZXWVVaU2FFMXRhRlpYVjNSaFpERmFWMkpJVGxaaWF6VllWRlphUzFac1ZsaGxSM1JvVFd0d1IxUnNhRzlXYkZvMlZteENWMUpGV21oWk1qRlBVbTFLUjJOSGFFNWlWMmhTVmpGYWEwNUdUWGhhUldoVFlUSjRhRlZ0TlVOaU1WSllZek5rYkZKc2NGbGFWV1F3VlRBeFdGVnJiRmRpV0ZKNlYxWmFTMk14WkhOVmJGWlhaV3hhTWxaSE1UUmhNV1JJVkd0YVlWSnNjRTlaV0hCWFUyeGFWVk5xUW1sTlZscElWakkxVDFkSFNsVmlSbWhhVmpOTmVGcEhlRk5YUjFaSVVtMXdhVk5GU2t0V2EyTjRaREZTZEZKcVdsZGhNbWhaV1d0YVlXUnNWbFZUYTJSWFRWWktlVll5ZUZOaFJUQjNVMjFvVjJKVVFqUldWM040VWpKT1JtRkZOVmRXTVVwNVZsZHdRMlF4VG5OWGEyaE9WMFUxVmxsclZuZGxWbXQzVldzNVdGSnNiRFpXVnpWSFZsZEtSMk5GZUZkTlJuQk1XWHBLUjFOSFZrZFZiRTVwWVRCd1YxWnRlR3RrTVUxM1RsVm9WMkpyTlhCVk1GWmhWVEZzY2xaVVJtcFdiRnA0VlZjMWExWkdXbk5TYWxKWFRXNW9jbGxWV2t0ak1rcEZWMnh3VjFacmNFMVdiWEJMVW0xV1YxWnVWbXBTYmtKeldWUk9RMVJHWkhOWGJYUlZUVlUxV0ZWdE5WTmhWa3B6VTJ4U1YySkhhRVJXUlZwYVpVWmtkRkp0YUU1U1JscEtWbXhhYjJJeFdsaFNXR3hvVTBWS1YxUlZXbFpsUm10NFYyeGthazFZUWtsVU1XUXdWR3haZW1GRVZsZE5WMmd6Vm1wS1IyTXhaRmxhUm1ocFVqTm9iMVp0ZUd0aU1rWkhZa1phWVZKWVVsbFZha1poVTJ4cmQxZHVaR2hTTUZZMFdUQmFWMWRHV2taVGJrcFdaV3RhVUZWdGN6VldNWEJIV2tkc1YwMXRhRnBXYTFwVFV6SktkRlpzWkdGU2JWSmhWRlJLYjJOV1VsaGpNMmhQVm14d1NWcEZaRWRoUmtweVRsVmtWazFxVmtSV2JYTjRVakZrY21WR1drNWliV2cyVm0xd1IyUXhTbGRXYmxKclVsUldXRlpyV21GVE1WbDRXa1JDYVUxV1JqVlZiWGhoVkd4a1IxTnNXbGRoTVhCb1ZteGFjMlJGTVZWVmJYaFhZbGhSZWxadGVGTlZNa3BIVTFoa2FsSlhhR0ZVVlZwM1pHeGFjVkp0UmxkTmF6VklXVEJhYTFSc1dYZE9TSEJZWWtaYWFGZFdXbHBsUmxKMVZteFNhVkpVVmxsWGJHTjRUa2RXUjFkdVVteFNhelZVVkZWU1IxTkdXblJqUjBaWFVqQndTVlpYTlV0V2JVcFpWVzFvVlZaV2NIcFdiWGhyWXpGU2RHRkhiRk5pUm10NFZtcEtNR0l4V1hoWGJrcE9WbTFvYjFVd2FFTldNV3h5V2taT1ZGSnNiRE5YYTFwclZrWmFkRlZxUWxwV1YxSjZWbXBCZDJWV2NEWlRiR1JPVm10d1JWWnRjRUpOVms1SFZXNUthRkpzU205VVZ6RnZWV3hhY1ZGc1pGcFdNR3cwVmpJMVIxWlhTbFZpUlRsVlZteHdNMVZxUm10amJVWkdUMWRvYUdWcldqVlhWM1JUVlRGWmVGZHFXbGRoTVVwaFZtMTRkMVZHVm5SbFJUbHFZbFUxU0Zrd1dtdGhWbHB5Vm1wT1YwMXVVbkpVYTFwT1pVWlNjbUZHVW1oTmJtaFhWMWQ0YTA1R1VYaFhibEpyVTBkU1QxUldaRk5YVm5CR1draGtWVTFXY0hwWk1GcHpWbTFLV1dGSVdscGhNWEJRVldwS1QxSXlSa2RYYldob1RXcG9NMVl5ZUd0T1IwMTVWR3hrVTJKck5WWlpiR2hEVmtaU1ZtRkZUbFJOVm5CWVYydFNRMkZyTVhKWGEyaFhUVmRvTTFsVldrdFNhelZYV2taV1YxWXhTbFZYYkdRMFl6QTFjMVJ1U2xCV2F6VndWbXhhZDFNeFdsZFpNMmhxVFZad1NGVXllR0ZoYkVwWlZXeHNWMkpZYUROWk1uaFRZMnh3UjFOdGVGTmlSWEExVjFaV2EyTXhXa2RUYkZaWFltMW9XRlpxVG05amJHeHhVMnhLYkZJd2NFcFZNakZ2VlRGYVZWWnNXbGRpV0VKRVYxWmFhMVl5VGtkWGJXaFRUVEZLV1ZaWE1UQmpNRFZYWTBaYWFGTkhVbGxaYkZaaFpWWnJkMVZyT1ZoaGVrWkpWbGQwTkZack1WZGpSV2hhVFdwR1RGVXdaRWRTTVhCR1RsVTFhVll4UlhsV2JURTBWVEZGZVZKWWJGVlhSM2hXVmpCa05GWnNiRlZTYm1ScFRWWldNMVp0ZERCaGJFcHpWbXBPVjJKWVVYZFdiR1JMVTBkV1IyRkdhR2hOVlhCVlYxWlNRbVZHV1hoVWJrcHBVbTVDYjFSWE1XOVZWbVJYV2tSU1ZFMVhVbGxWYlhSeldWWktkVkZ0T1ZWV2VrWjJWV3hhWVdOc1pIUmtSazVPVmpGS1NsWnRNVEJqTVd4WFUyNU9XR0pHU2xaV2JuQlhaR3hTZEdWSGRGaFNNRFZIV2tWa2IyRkhWblJsUm1oWVZrVktWRlpxU2tkU2F6RkpXa1pTYVZKV2NGZFdiVEI0VldzeFIxcEdaRmhpU0VKelZXMTRkMlZXWkhKWGJUbFdUV3R3V2xkcVRtdFdNVXB6WTBkb1YyRnJXbGRhVmxwTFYxWndSMXBIYkdsVFJVcHZWbXRhWVZsV1dYZE9WV1JxVWxad1dWbFljRmRqTVZwMFpVaGtUbFpzY0ZsYVZWWXdZVVphYzJKRVZscFdWbkJvVmpCYVlWSnNaSE5SYkhCcFZrVmFUVmRZY0VkVk1rMTVVMnRvYVZKck5WaFphMmhEVFd4YWRFMVlaRlZOYTJ3elZGWm9UMkZXU25SaFJUbFhUVVpWZUZreFdsTlhSMDQyVW14T1RsZEZTbGhYVmxaWFZESkdSMWR1U21sbGEzQmhXVlJLYjJSc1dYbGxSMFpyVW14YVZsVlhNVWRWTVVwWFkwWkdWMVpGU25KVmVrWlBWakZXZFZWdGJGTldSbHAzVjFaU1EyUnRWbk5YV0doaFVrVktiMWxZY0ZkWFJsVjVaVWM1VmsxcmNFbFpWV2hQVm1zeFIyTkVUbGROUm5CWVdURmFUMk5XVm5SbFIyeFRUVEpuTUZac1kzaE9SbEY1VW01T1ZGZEhVbkZWYkdoRFZqRmFjVlJzVG14aVIzaFhWako0ZDJKSFNsWlhhMXBYVWpOb2FGWkhlRXBsUms1eFYyeG9XRk5GU2sxV2ExSkhVekpTUjFOdVNtbFNhM0J3Vm1wT2IxWnNXbGhsUm1SclRWVXhORmRyV210WFIwcFpWV3hDVm1GcldraFVhMXBoVTBkU1NFOVhhRmRoZWxaSVZrZDRiMUV4V2xkWGFscFhZVEZLYUZWclZtRmxiR3Q1WlVoT1QySkdjSHBXUjNoclZHeEtkVkZ0UmxkTmJtaFlXV3BLUm1WR1pISmFSbEpZVWpOb2VsWlVRbTlSTVd4WFZXeGFXR0pWV25KWmEyUXdUVEZrY2xacVFsZFNiSEI1VmpJMWMxZHRSWGxWYmxwWFlXdEdNMXBXV25abGJVNUhXa1prVTFaWVFqVldNV2gzVXpGU2RGWnNaRlZpUjNob1ZXMTRkMk5HYkZWUmJtUnJUVlp3V1ZSc2FHdGhhekZYWTBod1dtRXhjSEpYVmxwTFVqRk9kVk5zVmxkaVJsWTBWbFJHWVdNeVRuUlNhMXBRVmpKb2NGVnNhRU5YYkdSWFZtMDVhRTFYVWpCVmJHaHpWbFphUmxkc2FGcGhNbEpVVlRCYVdtUXhjRWRhUmxKWFlsWktObFpyWkRSVU1WSjBVMjVTWVdWcmNGaFVWbVJUVFRGV1ZWSnNXbXhXYkVwNVdWVmFVMkZGTVhSaFJrcFhZbGhvYUZkV1pFcGxSbVIxVW14V2FWWkhlRkJYVjNSaFpESldWMXBJU21oU1ZHeHZXVmh3UjJWV1VuTldiWFJhVm14d1dWbFZWbE5YYkZwelkwVjRWV0pVUmt4Vk1WcGhZekZrYzFSdGFHeGlSbTh3Vm1wR1UxRXhXWGROVldSWVlrZG9WMWxVU2xOalZsWjBUVmM1V0ZKdGVIcFpWV00xVlRGS2MyTkVRbHBOUmxsM1ZtdFZlR014VG5KaFJtUk9ZbXhLYjFacVFtdFNiVkY1Vkd0YVRsWnNjRTlWYlhoM1lqRmFjbFZyWkdwTmF6RTBWakkxUjFWdFNsaGxSbEpWVmxkb1JGWXdXbUZXVms1WldrVTVWMkpJUWpWV1JsWnZZVEZaZVZOdVRtcFNiRnBoVm1wT1UxUkdjRmhsUms1cVRWZFNlVnBGV2xOVk1ERkpVV3QwVjJFeVRqUmFSRVpXWlVaa1dXSkhhRk5TVkZaYVZtMXdUMVV5VGxkVmJrNWhVbFJzV1ZWdGRIZGxiR3hXV2tSU1YxSnJjREZWVjNoWFZqRlplbEZyZUZWaE1sSllXWHBLUzFOV1NuTlViV3hUVmtaYU5GWnNaSGRSTWxGNFZHNU9WMkpIYUhKVk1GVXhZakZXZEdWSVRrOWlSM2hYVmxkME1GZEhTa2RpZWtwV1lsUldNMVl5TVZkamJVNUdaRWRHVjFadVFsbFhhMXBoVWpKU1NGTnJaRlppUlRWWVZqQldTMVJXV25GU2JVWmFWakJXTTFSc1ZtOVdiVXB6VTJ4U1dtSllhRXhaTUZwV1pERmFWVkp0Y0ZOaVJYQllWbXBLTUUxSFJYZE5WbWhzVTBkNFdWWXdhRU5YUmxweFVteHdhMDFYVW5wWmEyUkhWakZaZVdGSE9WZGlXRUpJVlRJeFYxZEdXbkppUjNCVFltdEtVRlpYTVRSa01ERnpXa1pXVW1KWVVsVlVWbFV4VWpGUmVGZHRSbGROYTNCWldWVmFiMVpXV2taalNGWmhWak5vYUZac1drZGtSMUpJWTBVMWFHVnJWWGhXYkZKSFlqSkZlRmR1VWxSaWEzQlZXVzEwUzFZeGJIUk9WVTVzWWtaYU1GcFZhRTlXTURGWlVXdGFWMVo2UlhkV1IzaGhWbFphY21OR2FGZE5NVW95Vm10U1MxSXhXbkpOVm1SaFVteEtjRmxzV2t0aFJtUlhWV3QwVldGNlJsaFdNalZQV1ZaS1dGVnNiRlpoYTFwb1ZUSjRXbVZYVmtaUFZscE9Va1ZaZUZkV1ZsTlpWbVJIVjJ0YVZHSkhhR0ZaVjNSM1ZVWlZkMWRyT1dwaVZYQklWVEl4YjFSdFNuUmhSRXBYWWxSR00xWkVTa3BrTURGSllVWmtXRkl4U205V1ZFSldUVmRPVjFWc2FHcGxhMXBVVkZaa05GWXhiRlpXYXpsb1VteHdlVmx1Y0V0WGJVVjVZVWhhVjAxdWFHaGFSVnBYVmxaR2RGSnNUbE5XYmtKU1ZteFNRMkV4VFhoVWJHUldZbXhLY1ZWdGN6RlhSbEpZVFZjMWJHSkdiRFJYYTFKRFlVZEdObFpzYkZaTmFsWlFWbGN4UzFJeFRuUlNiRlpYVWxWd1RWWnJXbUZaVjA1MFVtdGtWV0pJUWxoWmEyUXpUVVphY1ZOVVJsVk5WbG93VlRKMGEyRldTa2RYYkdSVlZqTkNXRlpyV21GalZrcHlaRVprVG1GNlZraFdhMlEwVlRGU2MxTlliR2hTVjNoWVdWUktUMDVHVmpaU2JVWnJVbXhhZVZsVlpEUlZNREYxWVVac1YySllhSFpWVkVGNFl6RmtkVlJzV21obGJYaFZWMWQ0VjJNd01IaGlTRVpWWWxoU2IxWnRkSGRUUmxsNVpVWk9WMkpWV25sWmJuQkRXVlpaZW1GSWJHRlNSVnBvV2tWVk5WZEhUa2RVYXpWVVVsVndUVlp0ZUdGaE1ERklWRmhzVTJFeVVsbFdNR2hEWWpGV2NsWnVaRnBXYkhBeFdUQldhMkpIU2toa2VrcFdUVzVOTVZaVVNrdFdiR1J5WTBaYVYyVnJXalpXYlhSaFV6RmFkRlJyV210U2JXaFlXV3RvUTJWV1draGtSM1JXVFdzeE5GWkhOVXRoUmtsNVpVWldWbUpHU2xoYVJFWmhVakZrZEZKc1VrNWlSVmt3VjFkMGIxTXhaSFJXYms1WVlrWktXRmxYZEV0aFJsbDRWMjVrVjJKVldrbFZiVEZ2VlRBeFNWRnNjRmhpUmxwMldrUkdhMlJHU25WVGJHaHBVbXR3YUZaR1ZtdFZNVkpIVmxoa1YxWkdXbGhVVmxwM1RVWnNWbGR0ZEZWaGVrWXdWMnRTWVZZeVNrZFRhMUphVmtWd1QxcFdXbE5YVjBwSFZXeG9VMDB5YURSV2JGSkRWakZOZVZSclpGZGliRnB4VlRCVk1WWkdiSEphUkZKWVVtMVNlVlpYZUU5aFJURnlZMFZrV2sxR1ducFdNakZHWlZkR1IxRnNjRmRpUmxrd1ZsZHdSMVF5VWxkalJXUnFVakpvVDFsWWNFTk9SbHAwVFZSU2FFMVZiRFJYYTFadlZqSkZlV1ZHYkZwaE1sSlVWbXRhVTFkRk5WaFBWVGxwVWpGS1dsZFVRbGRoTVZweVRWaEtUMVpYZUZkVVZ6VlRaR3hhVmxkdFJtcE5WMUl3VkRGYWEyRkhSalpXYWtwWFVtMVJNRlpxU2s5ak1rNUdZa1pXYVZkRlNsQlhWbEpMVFRKV2MxZHVUbHBsYTFwVFZGZDBZVmRHVlhsalIwWm9WbXMxU1ZsVlpFZFdNa3BWVW14T1ZWWldjRE5WTUdSWFVtMVNSMVZzVGs1VFJVcE1WbTEwYW1WSFRYaFZibEpVWW10d1ZWbFhjekZYVmxweFZHeE9hbFpzU25wWGExVTFWMFpLY21OSWNGcFdWMUV3Vm10YVNtVkdUbk5YYkdSWFRUQktUVlpIZEd0V01rMTVVMnRzVTJKR1NuQldNRlpMVld4YWRHVkhPVkpoZWtaWVdXdGFWMVpYUlhkT1ZtUldZa1pLU0ZZeFduZFdiSEJHV2taa1RsSkZXbGxXYWtvd1lqRlpkMDFWWkdwVFNFSm9WV3hhVjA1R1duRlNiVVpxVFZaS01GbFZWVEZWTWtwSVQxUldWMkZyV2xSVmFrWmhaRVphY21GR1dtaE5iRXBYVm1wQ2EwNUdaRWRpU0ZKc1VsaFNWMVJXWkRSbGJHUnlXWHBXVjAxV2NEQmFSVkpUVmpGS05sRllhRnBXYlZKTVZXMXpNVll5VGtkalIyaE9WbTVDV2xZeFdsZFpWbVIwVm01U1UyRXhXbFpaYTFwM1ZERldjVkpyZEU5aVIxSmFXVEJXTUZaVk1WWmpSRUpXWWxoU2VsWlhNVXRYUjFaSFZteGFhVkpzYjNwV1dIQkhZVEZaZUZwSVVtdFNWR3hVVkZaV2RtUXhXbGhOUkVaV1RXdGFXRlpIZEdGVU1XUkdWMnhrV21FeVVsUmFSM2gzVWxaS2RWUnRjR2xXVm5CSVZtdGtORlV4V1hkTlZXUnFVbTVDV1ZscldtRmtiR1JYV2tWa1ZGSnJOWHBaVldRMFZrWk9SbE50YUZoV2JWRjNXa1JCZDJWSFJYcGFSMFpUVjBaS1ZsWnRNVEJaVjFaWFlraEtZVko2YkZoVVZWSkRUbFprY1ZSdVpGZE5WbkJIVlRJMVMxZHRWbkpqUlRsaFZteHdVRll4V25kU01XUjBZa2RvVGxORlNYcFdiWGhxVFZkUmVWUlliRmRoTWxKd1ZXMHhVMkZHVm5KWGEzUnFZa2Q0ZVZZeU5XdFdSbHAwWlVoc1dsWldWVEZaVlZwaFZsWktjMkZHV2s1aGJGcDVWbXBKZUZKdFZsZFZiRlpUWWtkU2NGVnFSa3RUVmxweFVXMTBWMDFWTlZoWGEyaFRZVVpKZVdWR2FGVldSWEIxVkZkNFdtVkdjRWxhUms1T1ZteFpNVlpyWkRCaU1WcElVbGhzYUZKcldsaFpiR2h2WVVac2NWSnRSbXBXYkVvd1ZERlZNV0ZXU1hwaFJuQlhVbXh3ZGxaRVNrZGphekZaVTIxc1UxSnJjRmxXYlRWM1ZqRktSMkpHWkZoaE0xSlFXV3hXZDFOc2JGWlhibVJYVFd0d1dGVnNhR3RYUjBWNVZHcFNWbUZyY0ZSVk1GcFBZMjFLUjFadGJGZE5NbWhSVmpGamVFMUdUWGROU0doaFVtMW9jbFZxVGtOVlJscHhVVlJHV0Zac1dqQmFWV00xWVZaS2NrNVZiRmRXTTJoWVZtMHhSMk50U2paUmJVWlhUVEpvTmxkVVJtRlVNbEpJVkd0a1VtSkhVbGxWYkZaWFRrWlplRmRzVGxWTlZWWTBWbTEwWVZSc1duUmhTRTVXWVd0S2FGWXdXbE5XTVdSMFVteFNVMkpIZDNwV2Fra3hWREpGZUZOc1ZsTmlSMmhZV1d4b2IxVkdiRlpXV0doVFRWZFNlRlV5ZUc5V01VcFhZMFpvV0dKR1duSldWRVpLWlVaV2MySkhiRk5pVmtwM1YxZDBWMlF4V2tkYVJtaHNVak5TY0ZSV1duZFhSbXhWVkcwNVYxWXdjRlpXYlRWRFYyMUZlRlpZYUZkTmJtaDZXVEo0WVdNeGNFaGhSazVwVWpOamVWWXhXbGRWTVZGNFYyNUtUbFpYYUZkWmJUVkRXVlp3V0dSSVpGWlNiRm93VkZaV2ExWkdXbkpYYWtKYVlURndWRlpVUm1GWFZrWnlaVVprVGxadVFtOVhWbEpDVFZaT1IxWnNiR2hTYkZwdlZGY3hiMlF4V2xWUmJGcE9WakExU0ZaWGVHOVVNVnBXVGxoS1ZWWnRVVEJhVmxwelZteGFjazlXWkZOaVIzZDZWbXBLTkdNeGJGZFhiR2hvVTBWd1dGbFVSbmRUTVhCWFdrWmtWRll3TlVoWk1GVXhWVEpLU1ZGWWJGZE5Wa3BFV1ZSR1RtVkdVbkpYYkVKWFlraENXVmRYZUd0aU1XUkhWV3hXVkdKVVZuTldiWGgzVjFad1JscEVRbWhoZWtaNVZGWlNWMVpyTVZoaFNGcFhZbFJHVEZreWVFOWtWa1p6VjJzMVUySklRazVXYkZKTFRrZE5lRmRZYUdwU1ZscFhXV3hvVTJOR1duTlhibHByVFZkU1dWcEZZelZXVlRGeVYyNXdWazF1YUhaWlZWcFBVMFpXZEZKc2NGZFNXRUl5VmxkMFlWWnRWa2RqUlZwaFVtMW9WRlJXV25kVE1WbDVaRWRHVmsxV1ZqTlVWbWhYWVVaS1IyTkdiRmRoYXpWRVZrVmFkMUpXVG5KUFZsSlRZWHBXTlZkWGRHRlRNa1pHVFZoV2FGTkdjRmhaYkdoRFZVWnNjVkZZYUdwTmEzQklXVlZWTVZkR1NsVldibWhYVW0xUmQxbDZRVEZXTWtWNldrZG9VMVpVVm5aV2JURXdaR3N4YzJKSVNtaFNlbXhaV1d0YWQwMUdXbGRWYTA1YVZtdHZNbFZ0ZEc5WlZrcFlWV3Q0VmsxV2NGUmFSV1JMVW1zMVdHSkhhRTVTZW1zeVZtMXdSMkV3TVVoU2JrcFBWbTFvVmxsclpHOVdSbXh5V2tjNWFrMVdWak5XTWpWcllWVXhXR1ZJY0ZoaE1VcFVXV3RrUzFOSFVrVlViR1JwVmtWRmVGZFdaRFJUYlZGNVZHdGFhVkpzV2s5V2FrRjRUa1phYzFkdFJsZGlWbHBZVmxjMVYxbFdTbk5UYXpsWFlsaFNlbFJVUm1GalZrNXhWVzFvVGxadGR6RldWRW93V1ZaYVNGTnJhRlpoZW14aFZtdFZNVkV4Y0VWU2JVWnJVakZLU0ZkclduZFdNa1Y0WTBSV1dHRXhXbGhaZWtaV1pWWktjVmRzWkdsaE1IQlpWMWQwYTJJeFdrZGlSRnBUWW1zMWNWUldXbmRsVm5CR1draE9WV0pHY0hwV01WSkxWakZaZW1GSVJsVmlSbkJQV2tSQmVGWnRSa2hrUjNob1RWaENXVll4V2xOVE1WVjVWbTVPYVZKR2NGVlpXSEJ6Vmtac2MxWnRSbFJpUmxwWlZGWm9UMVl4U25KalJtUmFUVVpaZDFZd1dtRmpNazVKVTJ4V2FFMXNTbFJYYkZaaFZUSk9kRkpyYUdsU2JFcFVWbXRhWVU1R1duTmFSRkpvVFd0c05WWldhRzloVms1R1kwYzVWbUpHVlhoV2JGcGhZMVpHZEZKc2FGZGlhMHBZVjFaV2ExSXhXbkpOVmxwcFVrWmFhRlpzWkc5Tk1WbDVUVlZrYW1KSFVucFdWM2gzVkd4SmVGTnJNVmRXUlZwb1ZXcEtUMlJHVG5KaFIyaFRZbFpLVUZaR1kzaGhNRFZ6VjI1T1ZtRXdOVzlVVjNONFRsWmFSMkZJVGxkV01GWTBXVEJqTlZack1VZFhhM2hhVFVad1dGcEdaRTlUVmxKelZHMXNVMDB5YUZwV2Frb3dWVEZWZVZKWWJGUmhNWEJ4Vld4a05GbFdiRlZUYlRsV1VtMTRXRlpzYUc5V01ERldUbFJHV0dFeGNETlpWVlY0WTJzeFNXRkdaR2xYUjJoNVZsZHdSMkV4VGtkWGJrcHBVbTFvY0ZWcVJrdFdWbHBIV1hwR2FVMUVWbnBYYTFwdllXeEtXVlZ1U2xWV00wMTRWVEZhVm1WWFVraFBWbHBUWWtoQ05sWnFTWGRPVmxsNVVtNUtUMWRHY0ZaV2FrNXZaV3haZDFaWWFGaFdiRW93V1RCVk1XRkZNWFZaTTJSWFlsaG9jVlJXV2tabFZrcHpXa1pTYUdKSVFuZFdWRUpyWWpGc1YxZHVVazVXYTNCUFZXMDFRMU5XY0ZaYVJXUlhVbXRzTTFrd1ZuZFdNVW8yVW01d1YxSjZSa3haTW5oUFkxWlNjMkZHWkU1TlZYQTBWbXRrTkZsV2JGZGFSV1JVWW1zMWIxVnFUbTlXVmxaMFRsVk9WMVpzY0ZsWk1GWXdWREZKZUZkdWNGcFdSVFZ5Vm1wS1MxWlhTa2xTYkZwb1lUQnZlbFpVU2pSV01XUklWV3RzVldKWGFGUlphMlF6VFd4a1YxWnNUbFJOVjFKSlZUSTFVMVZHV2taT1YwWmFZa2RvVTFwRVJtRmpiSEJHV2tVNWFWTkZTa2xYVmxaaFlUSkdWMXBGYUdoU2VteFlXV3RhZDJGR1pGZGFSVnBzVm10d2VsbFZXbE5oVmtsNFUyeG9XRlpzU2t4V1ZFWldaVVprYzFac1VtbFdSM2hSVmxjeE5HUXhUa2RhUmxaVllsUnNXRlp0ZEhkTlZsWllaVWhPVjFac2NIcFdNbmhEVjJ4YVYyTkZlRnBOYmsxNFZteGFWMk14Vm5KT1ZrNVhVbXh2TVZadGVGTlRiVlpIVjFob1dHSnJOVmhaYlhoaFZURnNjMXBFVWxkV2JGcDZWbTAxYTFaRk1WaFZiR2hYVFdwRmQxWkVSa3BsUmtweFZXeGtVMDB4U2pKWFZscGhWREZLY2s1V2JGTmlSbkJ3VldwR1MwMXNaSEpWYTJScVRXczFNRlZ0ZEdGV1YwcEhVMnhvVlZaV2NETldNbmhyWXpGYWRFOVhhRTVXYmtKSlZsUkdiMk15U2tkVWEyeFNZbFZhVmxac1duZGhSbkJJWlVoS2EwMVlRa2RhUlZwVFZqSkZlR05FVmxoV00xSnlXV3BHV21Rd01VbGlSMFpPVFc1b1dWWnRjRTlWTWs1ellrUmFWR0Y2Vm5OV2JYTXhWMnhzVmxkdFJtaFdNRll6V1RCb2ExWXhXalpXYWs1YVpXdGFhRmw2U2t0U01YQklVbXhPVTJFelFqVldhMXBoVm1zeFYxUnNaR2xUUlhCdlZXeFNjMkl4YkhKV2JtUllZa2Q0VjFsVlpEQlhSMHBXVm1wV1dsWldXbFJXYWtaTFpFWldjbUZHWkU1U01VcFpWbFJHWVdReFNYaFhiazVWWVhwV2NGbHNaR3BsVmxweFVteE9VazFXYkROVWJGWnZWbGRGZVdGR1ZscFdSVzh3VmxSR2MxWldUbkZWYld4T1ZtNUNORlpyWTNkT1ZsSnlUVlprVjJGck5WbFpWRXB2VlVac1dHTXphR3BoZWxaWFYydGFkMVl4V1hsaFJWWllWbXh3YUZaRVJrdGpNVkoxVTIxd1UySnJTbGxYVjNoaFVtMVJlRnBJU2xaaE1sSldWRlpWTVZOV1ZYbGtTRTVYVmpCd1dsVlhlRk5XTWtaeVkwaGFWVlpGV25KV01HUlRVMFU1VjFOck5WZFdSbHBoVm14amVFNUhTWGxUYTJSVllUSm9WMWxyV21GV01XeFlaRWhhVGxKdVFsbGFWV2hMWVRBeFYyTkVRbFZOVjFJelZsUkJlRk5XUm5Ka1JtUlhZbFpHTTFkWWNFdFNNVWw0V2tac2FsSXlhRlJWYkdoRFYyeGtXRTFJWkU5V1ZFSTBXV3RvVTJFeFNrWlRiR2hXWVd0S1lWUlhlR3RqYkdSMFQxWmtUbUV6UW1GWFZsWnJZakZaZUZkdVRtcFNNbWhoVm10V2QxTkdXWGRYYXpscVRWaENTRll5TVc5VWJVcEdZMFpXVjJKWWFGUlZla3BLWkRBMVZscEdhR2hOYkVwb1ZrWlNTMkl4V25OV2JsSlBWbFUxV1ZadGVFdFhSbHAwWTNwV2FGSnJjSGxaTUdoelZsZEtSMU5zVWxkaE1WWTBWVzF6TVZkV1RuTlhhelZvWVRGd1dsWnRNSGhPUmxsNVZXeGtVMkpzU25CVmJYaExWa1phYzJGRlRsVlNiR3cwVmpJeFIyRkZNVVZXYTJ4WFZtMW9kbFpzWkVabFYwWkpVV3hhVGxKc1ZqUlhWRVpoVmpKTmVHTkZhRkJXTTFKUFZtcE9iMDVXWkZkV2JHUlZUVlp3U0ZZeGFHdFhSMHBJWlVkb1YySkhVblpaTW5oaFkyeGtjbU5IZUZkTlZuQkxWMVJDWVdReFVuTlRiazVxVWtWd1dWWnJWa3RqYkZZMlVtczVWMDFWY0RGVk1qRnpWVEF4ZEdGR2JGZFNiRXBNV1cweFYyTXhaSE5XYkVwcFYwWktlRlpHWkhwbFJUVlhWMnRvYTFJd1dtOVZiWE14VWpGVmVVNVZUbGRoZWtaSVZqSjBORlpyTVhWaFNIQlhZV3RhTTFWc1dsZGtSMUpJWWtaT1dGSlZjRXhXYWtaclRVZEplRlZZYkZOaVJuQlBWbXhrVTFaV2JIUk5WazVhVm0xNFZsVXljekZVYkZwelkwaHdXR0V4V25KV01GcEtaVVprY21OR1pFNWliV2g1Vm14U1FtVkhVbGhTYTFaWVlrZG9XRlZzVm5kWFZtUllZMFYwVlUxVk5VaFdSelZMWVZaS2NtTkhPV0ZXTTFKb1drZDRZV1JIVGtaUFYyeE9Va1ZKTUZacVNqQlpWbXhYVkd0YVQxZEZXbFpXYWs1T1pVWldjVkp1WkZkaVZWcEhWa2N4YjFZeVJqWldhMmhYVmtWd05sUldXbXRqTVdSMVZXeGFWMUpWY0c5V1YzUlhXVlphUjFaWVpHRlNXRkpWVm0xNFMwMUdhM2RYYXpsWVVtdHNOVmRxVG5kV01ERllWVmhrV21GcldrZGFWVnBYWXpKR1IxUnRiRk5OYldnMlZteFNRMkV4VlhoWGJrNVhZbXRhVlZsWGVFdGpNV3h5V2tSQ1RrMVdjREJaTUZwUFlVZEtSbUpFVGxwTlJsb3pWbTE0V21Wc1VuRlZiSEJYVm01Q2FGZHNZM2hTTVVwWFZXNU9XR0Y2VmxSVVZsWjJUV3haZUdGSVpGUk5WVFV3Vm0xNGEyRldTa2RqU0VKV1lrZG9WRmw2Um1GalZsSnpWR3MxVGxadVFrdFhWRUpYWVRKR2NrMVdhRlppYmtKWldWUkdkMkZHV2xWVGEzUlVVakJhU1ZWdGVIZGhWa3B5WTBWc1YySlVSVEJXYWtwVFUwWldjbGRzYUdsV00yaFFWMVpvZDFZeFpFZFhhMlJZWWxSc1YxUldXbmRTTVZKWFlVVTVXRkl3V25sVk1uaHJWakpLZFZGcmFHRlNNMmhvV1RKNGQxSnJPVmRhUms1cFZrZHplRlpyWkRSWlZsVjRXa1ZrVkZkSVFtOVZiR1JUVjFaYWRHVklaR3BpUmtwNVYydGFTMkpHU25OVGJteGFWbGRTZWxacldrdFdWbHAxWVVaa1YwMHlhSGxYVjNCTFZXMVdTRk5yYkZSaVYyaFVWbXhTVjFac1duUmpSVTVhVm0xU1dGa3dXbUZoUmtsNlZXeG9WbUpZVW5wVWJGcDNWbTFHU1ZwR2FHaGxhMXBKVm1wSk1WbFdaSEpOVldoV1lUTm9WMVJXV25kVFJtdDVUVlYwVkZJd1draFhhMVV4VkcxS1dGVlVTbGRpV0doVVZWUktSbVZXVWxsaVJsWllVak5vVjFkV1VrZGtNa2w0Vmxoa1YyRXpVbkZWYlhoWFRURmFkR1JFUWxkU01IQkpXbFZhYjFkSFJYaFRiRkphVmtWR05GWnRjekZXYlVwSFkwZG9UbUpYYUZKV01WcHJUa1pOZUZwRmFGTmhNbmhvVlcwMVEySXhVbGhOVnpsVFZteHdWbFZ0TVRCVk1ERllWV3RzVjJKWVVucFhWbHBMWXpGT2MxVnNWbGRsYkZveVZrY3hOR0V4V2xkU2JrNWhVako0VDFsWWNGZFRiRnBWVTJwQ2FVMVdXa2hXTW5oclYwZEtWV0pHYUZwV00wMTRXa2Q0VTFkSFZraFNiWEJwVTBWS1MxWnJZM2hrTVZKMFVsaHNhMlZyU2xoWmEyUk9aVVpXVlZOclpGZE5WVFY0VmpJeGMxVXlTa2xSYldoWFlsUkNORlpYYzNoU01rNUdZVWQ0VTAxR2NGWldWM0JEWkRGT2MxZHJhRTVYUlRWV1dXdGFkMlZXYTNkVmF6bFlVbXhzTmxaWE5XRldiRnBHVjJ4Q1YwMUdjRXhaZWtwSFUwZFdSMVZzVGs1V1dFSllWbTE0YTJReFRYZE9WV2hYWW1zMWIxUlVTbE5YUm14elZXNU9hbFpzV25oVlZ6VnJWa2RLUjFkc2JHRlNWMmhRV1ZWYVMyTXlTa1ZYYkhCWFZtdHdVVlp0TVhwbFJrNUhWbTVXYWxKdVFuTlpWRTVEVkVaa2MxZHRSbXBOUkZZd1ZUSjBZV0V4U1hwaFJtaFZWa1ZhUzFwWGVHRmpiVVpKV2taT1RtRjZSVEJXTW5SdlZERnNWMU51VG1wU2JFcGhXVlJLVTJSc1pGZFhiazVxVFZaYWVWZHJXbXRoVmtwellqTmtXR0V4V2xoWFZtUkhWbXN4V1ZOck9WZGlWa3BYVm0wd2VHSXhXa2RYYmtwWFYwZG9jVlJXWkZObFJsWllaVWRHVjAxc1dubFdNbkJMVmpKS1dWVnVTbGRTUlZwb1ZXcEtTbVZ0U2taUFZtUnBVbGhDWVZac1pIZFJiVkYzVFZaa1dHSkdjRmxaV0hCellqRnNjMVpVUmxOTldFSkhWako0YTJGRk1WWmpSRVpXVmpOb2VsWnFTa3RXVmtwVlVXeGFWMUpXY0c5WFZFWmhWREpPZEZWcmFHdFNhelZ3VlRCV1MxTldXblJqUlhST1Vtc3hORlpYZEd0V1YwVjRZMFpzV2xkSVFucFhWbHB6WTJ4a2MyTkhkRTVXTTJnMVZqSjBWMDFHV1hsVGExcFBWa1ZLVmxSV1duZGhSbHBJWXpOb1UwMVhVbmhWTW5oaFZHMUtjbE5yVmxoWFNFSkRXa1JLVjFJeFNuVlViR1JvWld4YVZWZHNaRFJaVmxKelYyNU9WbUV6VW5OWldIQkRUa1paZUdGSE9WaFNNSEI1Vkd4YWMxZHRSWGhYYldoWFRVWndjbGt5ZUhkVFZsSjBZVVprYVZORlNUSldiRkpMVFVkSmVGZHVUbGhpYTNCUVZqQmFkMkZHV25OWGJtUlhVbXhzTTFac2FHOVdNa3BYVjJ0c1ZtSllhSEpaYTJSR1pVZE9SbGRzWkU1V2JrSlpWakZhWVZWdFZsZFhia3BZWWxoU1ZGWnRkSGRpTVZwWVpVYzVVazFyTVRSV01qVlBWMGRGZWxWdVNsVldiVkV3V2xaYVlXUkZOVlpQVmxwT1ZtMTNlbFpxU2pSak1XeFhWMnhvYUZJeWFGaFpWM1JoVXpGd1YxcEdaRlJXTURWSVdUQmtiMkZGTVVsUmJGcFhUVlpLUkZsVVJrNWxSbEp5VjJ4Q1YySklRbGxYVjNocllqRmtSMVZzVmxSaVZGWnpWbTE0ZDFkV2NFWmFSRUpvWVhwR2VWUldVbGRXYXpGWVlVaEtWMkpVUmt4Wk1uaFBaRlpHYzFkdGJHbGhNRzh5Vm0wd2VFNUhUWGhYV0docVVsWmFWMWxyV2t0alJsWnpZVVZPVkdKSFVsbGFSV00xVmxVeGNsZHNaRlZXYldoWVZsY3hTMlJHVm5SU2JIQlhVbFp3YjFkc1pEUldNazE0WTBWYVlWSnRhRlJVVmxwM1UwWmtWVkZ0UmxWTlZsWXpWRlpvVjJGR1NrZGpSbXhYWVdzMVJGWkZXbmRTVms1eVQxWlNVMkY2VmpWV2FrbDRZekZWZUZkdVRtcFRSbkJZV1d4b1ExVkdiSEZTYXpWc1VteHdNVlV5TVVkV1JrcFZWbTVvVjFKc2NGZFVWbHBhWlVaa2MyRkZPVmRXVkZaMlZtMHhNR1F4WkZkalJscFhZbFZhV1ZsclduZE5SbHBYVld0T1dsWnJiRFpaVldSdlZtc3hTRlZyZUZaTlZuQlVXa1ZrUzFKck5WZFViV2hPVFVWWk1sWnRjRWRoTURGSVVtNUtUMVp0VWxWWmEyUnZWa1pzY2xwSE9XcE5WbFl6VmpJMWEyRlZNVmhsU0hCWVlURktWRmxyWkV0U01WcHhWV3hrYVZkSGFGRlhWbVEwVTIxUmVWUnJXbWxTYkZwUFZtMDFRMWRXWkZkV2JVWllZbFphTUZWdGRGZFdSMHBIWTBjNVZWWXphRXhVYlhoclYxZE9SbVJHVW1sV2Exa3dWbTB3TVZZeFZuUlRiR2hzVW14S2FGWnVjRVpOUmxaeFVtMTBWMDFYVWpCYVJWVTFWVEF4Vm1ORVdsZFdSVzkzV1dwS1IxWXhVbkpYYXpsWVVsVndWMVp0TVRSa01WSkhZMFZXVTJKck5YRlphMXAzVFZaYVNHVkZPVmROUkVaSVdUQmFkMWRIU2tkWGJscFlWbTFTU0ZVd1drOWpNa1pJWlVaU1ZGSlZjRzlXTVZwclRVWk5lRmRyWkdoTk1sSm9WV3hvVTFaV1ZuTlZiazVYVFZad01GUldZelZXTURGRlVXcFdXR0ZyTlhwV2FrcExVakpPUjFSdFJsTlNXRUpOVjFSSmVGVXhTWGhXYmxKb1VqTm9jRlp0ZEhkWlZscDBUVWhrYkZKVVZraFphMXByVmpKS1NGVnNiRnBpUjJoVVdXcEdZV05XUm5WYVJtaFRZa2hDV2xkclZtdE5SbHAwVTJ0a1YyRnNXbUZXYkZwTFZrWmFjVkpyZEd0U2JFcDRWbGQ0YTFVeFduVlJXSEJYWVd0S1YxcFZXbUZqTVZaMVZXMW9VMkY2Vm5aWGJHUTBWbTFSZUZkc2JHcFNWVFZXVkZkMFYwNUdXa2hPVms1WFRXdHdTRmt3V210WGJVcFpWV3Q0V2sxR2NGaFpla1ozVWxaV2MxUnRiRk5OTW1oYVZtcEtNRlV4VlhsU1dHeFVZa1p3V1ZsWGRFdFpWbXhWVTIwNVZsSnNjSGxXTWpGSFZqQXhWazVVUmxoaE1YQXpXVlZWZUZZeVRrVlhiR1JYVFRKb2VWWlhjRWRoTVU1SFYyNUtXR0pZUWxSWldIQlhWbFphUjFsNlJtbE5SRlo2VmpKNFYxVXlTa2hWYkdSVlZqTk5lRlV4V2xabFYxSklUMVphVTJKV1NraFdha2wzVGxaWmVWSnVTazlYUm5CWFdsZDBZVmRHYTNsbFNHUlVWbXhLTUZrd1ZURmhSVEYxV1ROb1YwMVdTa1JaYWtaR1pWWktjMXBHVW1sU01taDZWbGQ0WVdReGJGZFhibEpPVm10d1QxVnRlRmRPVm5CV1ZtcENWMUpyYkROWk1GWjNWakZLTmxKdWNGZFNla1pNV1RKNFQyTldVbk5oUm1ST1RWVndXbFl4YUhkU01VMTRXa1ZrVkdKck5XOVZhazV2VmtaWmQxWnJkRmRXYkhCWldUQldNRlF4U1hoWGJuQlhZa2RvZGxacVNrdFNhelZaVW14YWFHRXdiM3BXVjNCSFl6Sk9jMWR1VG1GU01taFVXV3RrTTAxc1pGZFdiRTVVVFZkU2VsWXljR0ZWTWtwMVVXMUdZVll6VW1oV1ZWcGhaRWRXUjFwSGRGZGhNVzkzVjFkMFlWUXhXWGROU0d4b1VsZG9XRlJXV25kaFJteFZVVlJHVTAxV1NqRldSM2hUWVVVeGRHRklaRmRXUlVwWFZGWmFZVll4WkhWVWJHaG9UVEZLZVZaR1dtdE9SMVpYV2tac2FsSnRVbTlaYTFwelRURlplV1ZJVGxwV2JIQllWakp3VDFZeFdrWlhhM1JoVm0xU1dGVXhaRTlTTVdSeVRsWmthVk5GU2xkV2FrWlRVVEpGZUZSWWFGUmliRXBWV1ZSR2QxZEdiSE5hUnpsWVVteEtWbFV5TURWV1ZrcHpZMFpzWVZKWFVYZFpWM040WTJzeFZWWnNXazVXTW1nMlYxWmtORlF4U25OVWJsWlNZa1p3Y0ZWcVJrWmtNVnBZVFZSU2FrMVdiRFJaTUZaWFZtMUtXVlZ1UWxkaVJuQXlXa1JHYTFkSFVraFBWbFpPVm01Q1NWWnFTalJoTVZwSVUyNVNWbUpWV21GV2ExWmhZVVp3V0dWR1pHcE5XRUpIVjJ0YWIxVXdNVmRqUlhSWFlXdHNORlZxU2t0VFJrcDFVMnhTYUdFeGNGaFhiR1F3V1ZaV1IyRXpiR3BsYTBwelZXMDFRMU5HWkhKYVNFNVdUV3R3ZVZVeWVGTldNa3BWVVdwU1YxWkZjRkJWYWtwTFUxWlNjMkZIYkZOV1JscFdWbXRhWVZZeGJGZFhiR1JwVW14d2IxVnVjSE5YUmxwMFpVaGFUbUpHV2pCWmVrNXZWMFpKZDJORmJGZFNNMEpVVm0xNFlWSnRUa1poUmxwb1lURndWVmRyV210U01VcDBWbXRrVkdGNlZuQlZiR2hEVkd4YWNWTnFVbHBXYkd3MFZteG9jMVpYUlhsaFJsWmFWa1ZhTTFrd1dsZGpNV1IwVW0xc1RsWnVRalJXYTJOM1RsWlNkRk5yYUd4U2JYaFdWbTB4YjFWR2JGaGpNMmhYWVhwV1dGZHJXbXRXTWxaelYydFdXRlpzY0doVmVrWnJVMFphY2xkc2FHbFRSVXBaVjFkNFlWSnRVWGhYYkZaVVlXeEtWVlJXVlRGVFZsVjVaRWhPVjFZd2NFaFZNbmh2VmpKS1dWVnFUbFZXUlZweVZqQmtVMU5IVGtaUFZtUk9Va1phWVZac1kzaE9SMGw1VTJ0a1ZHSkhlRk5aYTFwTFZqRnNXR1JJV2s1U2JrSlpXbFZvVDJGc1duSk9WRVpZWVRKU00xWlVRWGhUVmtaeVkwWmtVMUpXY0ZsV2JYQkxVakZKZUZwR2JHcFNNbWhVVld4b1ExZEdaRmRWYTNSV1RXeGFlbGxyVW1GV1IwVjZVVzVPVjJGclJYaFZNbmhYVjBVeFdWUnNXazVXYlhjeVYxWldWMkV4WkVkWGJrNXFVMFZ3VmxsVVJuZFZSbXcyVW1zNWFtSlZXa2xaYTFwVFZURmFSMWRzWkZkaVZFVXdWMVphVG1WV1ZsbGhSMnhVVWxoQ1dWZFhNWHBOVmxwSFYyNUdVbUpWV2xsV2JUVkRWakZzVmxwRlpHaFNhMnd6V1RCYWMxbFdXbGhoUkU1WFlsaE9ORlpxUm10ak1WWnpZMFUxVTAxVmNFNVdiRkpEVm1zMVYxZFlhRmhpYkVwdlZXMHhVMVF4VWxoTlYzUlBWbXh3TUZSV1VrTmhSVEZ5VFZSV1YxSnRhSFpXYkdSTFVqSk9SMXBHY0dsWFJrcE5WMVJDWVZZeVVsaFVhMnhWWWxob1ZGbHNhRzlYVmxsNVpFWk9WazFXY0VsVk1uUmhZV3hLV0dWSFJscFdSWEIyVmxWYVlXTnNaSFJTYkdST1ZsUlZlRll5ZEdGa01rWkdUVlprYWxKR2NGaFdhazV2WTJ4V2NWSnRkRlJTYkhCNVZqSXhkMVV5UmpaV2JGWlhVbTFOZUZscVFURmpNWEJIWVVkd1UxZEdTbmxXUm1SNlRWWk9WMVpZYkd0U01GcHZWbTEwZDFkR1dYbE5SRlpYVFd0YWVWUnNhR0ZXVmxsNllVaHdWMDFHVmpSV01WcFRaRWRPUms1V1pGZFNiSEJhVm0weE5HRnJNVmRTV0d4VFlrZFNWVmxyWkc5ak1WWnpWMjVrV2xac2NEQlVWbHBMVkd4S2RWRnJiR0ZXVjJoeVZrUktSMDVzU25KaVJsWnBVbXhyZDFadE1YcGxSMUpYVld4c2FsSnRVbTlaVkVaM1lqRmtXV05GWkdoTmF6RTBWVEkxVDFsV1NYZFhiRkpWVm5wV2RscEVSbUZrUlRGVlZXeFNUbFpVVmtsV2JURTBZVEZhV0ZOc1ZtbFRSVFZYV1d4b2IxUkdXWGhYYkU1WFRWWndlRlpYZUhkV01rcElUMGhzVjFaNlJYZFdWRVpyWXpGa2MxcEhjRk5oTUhCdlZtMTRZVmR0VVhoV2JrcFlZbTFTVkZsc1ZURlRWbkJXVjIxMFYwMXJWalpWVm1oM1ZqQXhXRlZZWkZkaGEzQlBXbFZhVDJNeVJrZFViV3hUVFcxb05sWnNVa05aVjFGNFYydGtWMkpyV2xWWlYzaExZekZzY2xwRVVteFNiRm93V2xWVk5XRkhTa1ppUkU1YVRVWmFlbFpzVlhoV01rNUhZVVp3VjFadVFtaFhiR040VWpGS1YxUnVUbUZTTW1oUFdXdFdkazFzV1hoaFNHUlVUVlUxTUZadGRHdFdNa3B6VjJ4T1dtSkhVVEJXYTFwM1YwVXhWVlZzVGs1V01VcFpWbXBKZUUxR1VYaFRia3BQVjBoQ1YxUlhOVk5rYkd4WFYyczVVMkY2VmxwVlYzaFhWakpXYzFkclZsaGhNVXBJV1hwS1QyTXhaSFZXYkZacFVsUldXVlpHVm1Ga01XUnpXa2hPVjJKSFVuSlVWbHBYVGtaVmVHRklUbWxTYXpWS1ZWY3hSMWRzV1hwVmFrNVZWa1ZhZVZwRVJuZFNiVkpIVkcxc1YxZEZTa2xXYlRCM1pVZEplRmRZWkU1VFIzaHZWV3hvYjFkR1duRlViRTVxWWtkM01sVXljekZpUmtwelUyNXdWMDF1YUdoWlZtUkdaREpPU1ZwR1pGZE5NbWg1VmtkMFlWTXlUWGxUYTJSaFVqQmFWRlZ0ZEhkbFZtUllaRVprYTAxVk5WaFphMmhMWVVaS1ZXSkhPVmRpUmtwSVZqQmFWbVZWTlZoa1JtaHBWbFpaTVZacldsTlNNVmw1VTJ0b1ZtRXlhRmhVVldSVFYwWlZlRmR0ZEd0U01GcEpXV3RhYTFSck1YUlpNMnhYWWxob1ZGVnFSbHBsUmxwWllrWldhRTF0YUZaWFZsSkxZakZXVjFkdVRsaGlWVnB3VkZaYWQyVkdXa2hOUkZaVllsVndTRmt3YUhOWFIwVjVZVVpDV2xZelRqUlpNakZMVWxaV2MxcEdaR3hpUm5CR1ZqRmFZVmxXVFhkT1dGSlVZVEpTV1ZscmFFTlhSbXh6VjJ0YWEwMVhVbmxYYTFKVFYyeGFjazVWYkZaTmJsSjZWbXhrUzFkSFZrWlBWbHBwVjBaSmVsWkdVa2RoTVdSSVZXdGtZVkl6UWs5V2JHaERWMnhhV0UxVVVtbE5hM0JJVmtkMGEyRnNTalppUjBaYVlUSlNVMVJWV25kWFIxWkpWRzF3VjJFelFqWldhMk40WkRGVmQwMVZiRkpoTTBKWVZXdFdZV0ZHV25GVGEyUlRUVmRTV2xrd1pHOVZNVXBaVVd4b1YySlVSVEJWYWtGM1pVZEtTVlZ0ZEZOU1ZYQlpWbGR3UTFkck1YTmFTRXBZWWxSc1dGUlhkSGRYYkd4V1drYzVWMDFXY0hwWk1HUnZWMnhhUm1ORmFGZE5SbkJRV1hwR2QxSXhaSFJoUlRWcFVsaENWbFp0TVRSVk1VMTVVMWhrVDFaWFVsbFpWRXBUV1ZaU1ZWTnRPVmRpUmxvd1ZHeFdUMWRHV25OVGJHaFhZbGhOTVZsVldrdGpiVTVKWWtaV2FWSnJjRlZXYlhSV1pVWktjazVXYkZSaVJuQlBXVmQwWVZaV1draE5XSEJzVW10d1dWVXlkR0ZoTVVsNllVWm9WVlpGV2t0YVYzaGhZMjFHU1ZwR1RrNWhla1V3VmpKMGIxUXhiRmRUYms1cVVteEtZVmxVU2xOa2JHUlhWMjVPYWsxV1dubFhhMXByWVZaS2MySXpaRmhoTVZwWVYxWmtSMVpyTVZsVGF6bFhZbFpLVjFadE1IaGlNVnBIVjI1S1YxZEhhSEZVVm1SVFpVWldXR1ZIUmxkTmJGcDVWakp3UzFZeVNsbFZia3BYVWtWYWFGVnFTa3BsYlVwR1QxWmthVkpZUW1GV2JHUjNWREpKZUZOWWFHRlNiVkpaV1d4b1UxVkdWblJqZWtac1lrWldOVnBGWXpWaFJscHlUbFZrVldKR2NGaFdha3BMVWpKT1JtVkhSbE5TVm5BMlYxUktORmxYVWxkVmJrNVZZa2RTVDFWdE5VTlpWbGw1WlVaa1YwMXNSalJXYkdodlZrWmtTR1ZJVGxaTlIyaEVWbXBHVTFZeFpIUlNiR1JUWWxoUmVsWXlkRmROUmxWNVUyeGFhbEpYVWxoWmJGSkhaR3hhY1ZGWVpHeFdNRnBIV2xWYWExWXdNSGhUYm14WVYwaENURlpITVZkU01WWjFWR3hvYVZKdVFuZFhWbEpEWkRKUmVGZHNhR3hTTTFKUVZXMTBkMlZzYkhKWGJYUmFWbXR3U0ZVeU5VdFhiVVY0WTBST1ZrMVdjSHBaTWpGSFVtczVXR0ZHWkZkU1ZtdzBWbXhhYWsxWFJYaGFTRkpUVjBkNFZsWnJWbUZaVmxKWFdrWk9WRkpzYkROWGExcHJWa1phZEZWcVFscFdWMUo2Vm1wQmQyVldjRFpUYkdST1ZqRkplbFpZY0V0VmJWWlhWVzVLYUZKc1NtOVVWekZ2Vld4YWNWRnNaRnBXTUd3MFZqSTFSMVpYU2xWaVJUbGFZVEpSTUZZeFdsTldNa1pHVDFkb2FHVnJXalZYVjNSVFZERlplRmRxV2xkaE1VcGhWbTE0ZDFSR1VuUk5WWFJUWWtkU2Vsa3dXbXRoVmxweVZtcE9WMDF1VW5KVWExcE9aVVpTY21GR1VtaE5ibWhYVjFkNGEwNUdVWGhXYmxKclUwZFNUMVJXWkZOWFZuQkdXa2hrVlUxV2NIbFpNRnB6Vm0xS1dXRklXbHBoTVhCUVZXcEtUMUl4Vm5OWGJXaG9UV3BvTTFZeWVHdE9SMDE1Vkd4a1ZHSnJjRmxaYTFaTFYwWlpkMVpyV214U2JWSllWbGR6TlZWck1WZFhhMlJWVm14d2RsbHJXa3BrTVdSellVWldWMkpJUW05V1ZFSmhWMjFSZUZwSVZsVmlXRkpVVm10V1lWZFdXblJOVkZKVlRXdGFSMVJXVm10WFIwWnlZMFpzVjJFeFdtaFdha1ozVm14d1IxUnNUazVXYTNCaFYxZDBZV0V5UmxoVGExcHFVbXhLV1ZacVRtOWpiR3h4VW0xR1YwMXJWalpaVlZwWFlWWmFSMWR1WkZoV00xSlhWRlphYTJNeVNrbFRiR1JwVWpGS2RsWlhNVFJqTURWellrWmFWMkZyU2xoWmJGWlhUbFphV0U1WVpGaGlWbHA1VmpKNFExWXlTbGxoUm1oaFVteHdTRnBGWkV0U01WSnpXa1UxVG1KWGFFcFdiWEJIV1Zac1dGSllaRTlXVjFKV1dXMXpNVlpXYkZWVGJUbHFVbXhXTTFac1VrZFdNVnB6WTBod1YwMXVVWGRaVkVGNFYwZFdTV0pHYUZoVFJVcFpWbTF3UjFkdFVYaGFTRTVwVWpCYVdGWnFTbTlpTVdSWFZtMTBWRTFYVWtsV2JYUnpZV3hLZFZGdE9WcFdSVFZEV2xkNGExWldSblJrUmxKT1ZsUldTRlpFUm1Gak1WVjVVMnhvYUZKdGFGWldhMVozWkZad1YxZHRkRmROVjNRMldWVmtkMVJ0UmpaU1ZFWlhWa1ZhZGxsNlNrZGpNVkp5VjJ4U2FXRXdjRmhYVnpBeFVUSldjMk5HV2xoaWF6VllWRlpvUTFKc1dsaE5WRUpvVm14d1dGbHFUbXRYUmxsNlZXNWFWMUpGY0VoV2JYTjRWMVphYzFOdGJHbFdhM0J2VmpGYVUxTXhVbkpOVm1Sb1RUSm9hRlZzWkZOWFZsWnhVbTFHVkdKR2JEVmFWV1F3Vm1zeFJWSnFSbHBXVmtwb1ZtcEdZVkpzWkhOaFJtUlhVbGhDVVZaVVFtRlVNazV6V2toU2FWSnJOVmhaYTJoRFRXeGFkRTFZWkZWTmEydzBWa1pvYjFZeVNuSmpSMmhXVFVaVmVGa3hXbE5XTVZwVlVteGtUbFp1UWxwV1IzaFhWREpHUjFkdVNtcFNiWGhvVm14YVlXRkdXWGxsUjBaclVteGFWbFZYZUdGVWJVcDBZVVV4VjFaRlNuSlZla1pQVmpGV2RWUnNXbWxTTVVwWlYxWlNUMUZ0Vm5OWFdHaGhVa1ZLYjFsWWNGZFhSbFY1WlVjNVZrMXJjRWxaVldoUFZtc3hSMk5FVGxkaE1YQllXVEZhVDJOV1ZuUmxSMnhUVFRKbk1GWnNZM2hPUmxGNVVtNU9WRmRIVW5GVmJHUTBWbXhTVjFkdVpGVlNiSEJZVmpKNFlXSkdXbk5UYWtaWVlURndWRlpIZUdGamJVcEZWR3hrYUdFeU9IZFhWbEpIVjIxV1YxUnVTbGhpUmtwd1ZXcEdTMVZHWkZkVmF6bFNZbFpHTkZZeU5WTmhNVXAwVlcxR1YySllVbWhhVmxwM1VteGFkVlJzV2s1aE1XdDVWbTB3TVZFeFdYbFRhMmhvVW14S1lWcFhkR0ZsYkd3MlVtMUdhbUpXU2tsWmExVXhWakpLUjJFemJGZGlSMUV3V1Zkek1WWXhVbGxhUlRWWFZqSm9lVmRzWkRCWlZsbDRZa1pXVkdKRk5YTlphMlF6VFd4V2RHTjZWbGROYTNCSVZqSndSMVpzV2paU2JuQlhWa1ZhWVZwWE1VZFNiSEJIWVVaa2FWTkZTalZXYTJRd1lURlZlVlJZYUdGVFJYQnZWV3BLTkZaV1ZuTlZiR1JyVFZad1NGZFljRWRWYXpGelVtcFNXbUV5YUV4V01qRlhZekZrZFZKc1pHaGhNSEJ2Vm1wR1lXUXhXblJTYTJoVFlsZG9WRlJWYUVOWGJHUnpWbTA1YTAxWFVqQlZiVFZMWVd4S1JrNVhSbFZXVjFKVVZrVmFWbVF4V2xWV2JHaFhZVE5CZDFkV1ZtRmhNVkp5VFZoU1lWSkdXbGhVVmxwM1kxWndWbHBGTld4V2JFcGFXV3RhVTFkR1NYcGhTR2hYVmtWS1dGVjZTazlTTVZwMVZtMXdWRkpVVm5wV1Z6QjRUa1prUjFwSVNsWmlSVFZ2VkZkMGQxWXhXWGxqUlU1WVlsVldOVmxWV2tOWGJGcHpWbXBTWVZKc2NFaGFSbHAzVWpKT1NHRkZOV2hsYTBrd1ZtcEdVMUl5UlhoVFdHaGhVbGRvV0ZsVVNqUlhWbXh6V2tjNWFsSnNjSGhXUnpBMVZESktTRlZzYkZwTlJsbDNXVlJCZUdOck5WWmlSbHBPWW14S2IxZFdXbUZUTVZsNFdraFNVRlp0VW05WldIQlhUV3hhV1dORlpGZE5helY2V1RCV2MxWlhTbGxSYXpsWFlrWktXRll3V21Gak1XdzJVbXhLVG1FeGNGbFdWRW8wWWpKS1IxTnNaR3BTTUZwWVdXeFNSMVV4VWxaWGJGcHNWakZhUjFwRldsTlZNREZKVVd0MFYyRXlVVEJXVkVaYVpVWmtkVk50Y0ZOU1ZGWmFWbTF3VDFVeFpFZGlSRnBUWVROU1dWVnRkSGRsYkd4V1drUlNWazFYVWtkVk1uaFhWakZaZWxGcmVGVmhNbEpZV1hwR1lWZFhSa2RhUjJ4VFZrWmFORlpzWkhkUk1sRjRVMWhvYVZORmNGaFphMlJUWWpGV2RHVklUazlpUjNoWFZtMXdRMVl5U2xaV2FsWlhWbnBXTTFZeU1WZGpiVTVHWkVkR1UxSldjRmxYYTFwaFVqSlNTRk5yWkZWaVdHaHdWakJrYjFOV1duRlNiVVphVmpCV00xUnNWbTlXYlVweVRsWm9XbUV4Y0doV1JFWlhaRmRPUjFwR1ZsZGlTRUpYVmxSSk1XUXhVbkpOVm1ScFVrWktXRlJYY0ZkVlJsbDNXa1YwVTJKSFVucFpWVnB2WVVVeGMxTnFXbGhXYkhCb1YxWmtUbVZHVW5WVGJXaFRZa2hDV1ZkV2FIZFdNREZ6V2toT1YySlZXbGRVVm1SVFVqRlNWMWR0Um1sU2Eyd3pWako0YjFsV1dYcFZiV2hXWWtad2NsWnFSbUZrUmtwelZtczFhVkp1UWtsV01uUlhWakZWZUdKR1pGUmlSM2hUV1cxek1WZEdiSEpYYm1SVlVtNUNSbFZ0TlU5aGJVcElaSHBLVjJKWWFISldha0Y0VWpKT1IyTkdhR2xTYkhBeVZqRmFhMUl4VGtkVWJrNW9Vak5vVlZVd1ZrdGhSbVJYV2tSQ2EwMUVRalJaVkU1cldWWktXVlZzVmxaaVJrcDZWako0VjJSRk1WaFBWbVJPVWtWSk1WWXljRTlqTVdSSFYyNVNWV0ZzU21GYVYzUjNWREZ3VjFkck9WaFdNSEJKV1RCYVUxVXhXbGxSYWs1WFlrZE5lRnBFU2s1bFZscHlXa2RzVTJKV1NtOVdWM1JoVXpKT2MySklUbGRpVlZwUFZXMHhOR1ZXYkZaV1ZGWm9VbXh3VmxWdGNFZFdiRm8yVm01S1YwMXFSa2RhVmxwVFZsWktjMk5GTlZkTlZYQktWbTF3UTJFeFdYaFViR1JoVTBaS2IxVnFTalJYUmxKVlUyMDFUbUpHYkRSWGEyaHJWa1V4YzFKcVZsZFNNMUoyVm10a1JtVlhSa2RTYkdST1VteHdiMWRYY0VkWlYwNVhWVzVTVUZaVVZuQlZhazV2VjJ4YVIxZHRPVlZOYTFwNVZGWm9TMkZXU2tkWGJVWlZWbGRTZGxWclduTldNV1J5WkVab1UwMVdjRWhXYWtvMFpERlplVk5zWkZOWFIxSlpXVlJLVWsxR1pGZFhhemxVVW1zMWVWbHJXbGRoVmxsNllVWkNWMVo2UlhkYVJFRjNaVVp3UjJGSGRGTmlWa3A0VmtaYVYyUXhaRmRXYmxKc1VucHNjRlZ0ZEhkWGJGWllaVVpPVjJKVldubFpibkJEV1ZaWmVtRkdaR0ZXVm5Cb1dYcEdVMlJIVGtkVWF6VlVVbFZ3VEZadGRGTlNNVmw0VjFoc1UyRXlVbGxXTUdoRFlqRldjbFp1WkZoU2JYaFdWVEo0VDJKSFNraGtla3BXWWxoTk1WWnFTa3RTTVdSeFVteGFWMlZyV2paV2JGSkxWakpTU0ZacldtRlNiV2hZV1d0b1EyVldXa2hrUjNSV1RXc3hORmRyYUV0aFJrbDVaVVpXVm1KR1NsaGFSRVpoVWpGa2RGSnNVazVpUlZrd1YxZDBiMU14WkhSV2JrNVlZa2RvV0ZsWGRFdGhSbGw0VjI1a1YySkdjREZYYTFwaFZHeGFXR1I2UmxoaVJscDJXa1JHWVdOck1WZGFSbWhwVW10d2FGWkdWbXRWTVZKSFZsaGtWMVpHV2xoWmExcDNUVVpzVmxkdGRGVmhla1l3VjJ0U1YxWXlTbGxoUjJoWFZucEdVMXBXV2s5a1ZrNTBaRVpPYVZKWVFqSldNbmhxWlVaVmVGcEdaRmhpYkVwUFZtdGFTMWxXV25SbFIwWllVbXhzTlZSV1VrTmhSa3B6WWtST1drMUdjSFpXYWtaYVpXeFdkVk5zWkZkTk1taFlWMnhhYTFJeFNsZFdiazVoVW1zMWNGWnNVbEprTVZwMFpFWmtXbFl4UmpSWGExWmhWR3hhYzJOR1dscGlSMUoyVm10YWMxZFhUa2RYYXpWVFlrWnJlVlpXWkhwT1YwWkdUVlphVDFaRlNsaFpiR2h2WVVaYWRFMVZkR3BpUlRVeFZWZDRZV0ZYU25KVGFscFlZa1phYUZsNlJscGxSMDVHVm14YWFWZEdTbmRXYlhoaFpHMVJlRnBHYUd0U2VteFdWRmQwWVZZeFVsZGhSbVJXWWxWd01GWlhNVWRYYkZwR1kwVTVWVlpzY0hsYVZWcDNVbXh3UjJGR1RrNVdia0pNVm0xd1NtVkhTWGxTYkdSWVYwaENiMVZyV25kWFZscHhWR3RPVlZKdVFrWlZNbk0xVmtaS2NrNVliRnBXVm5CRVZqQmFTMVl5VGtsWGJHUnBWMFZLVVZkWGNFSmxSMDE1VTJ0a2FGSlVWbGxWYkZKWFpVWmFSMXBFUW1wTlJGWllXVlJPYTJGR1NsWk9WemxYWWxoU01sUlhlSE5qYlVaSVQxWm9hVkp1UVhkV2JGcFRVVEZzVjFOcVdsTmhNbWhvVld4a1UxUkdWWGhYYkU1clVqQndSMVJzWkhOaFJURklUMVJhVjJGclduSlVWV1JIWTJzMVYyRkdWbWxTTW1oVlYxZDBhMkl5VFhoV1dHUllZbTFTY0ZSV1pEUmxiR1J5Vld4T2FWSXdjRWxhVldodlZtc3hjVlp1U2xwV00yaExXa1JLVDFKc2NFZGpSMmhPVm01Q1dsWXhXbGRaVm1SMFZtNVNVMkV4Y0hKVmJYaDNZakZTV0dWRmRFOWlSMUphV1RCV01GWkhTbGRYYTJoWFlsUldXRlpYTVV0WFIxWkhWVzFHVjJWclZYZFdWM0JIWVRGWmVGcElVbXRTVkd4VVdWaHdWMDVzV2xWVGFrSnBUV3RhV0ZaSGRHRlVNV1JHVTJ4YVYySkdjRE5XUlZwM1VsWktkVlJ0Y0dsU00yTjVWbTB4TkdFeFdYZE5WV1JxVW01Q1dWbHJXbUZrYkdSWFYyeHdiRkpyTlZwWmEyUTBWa1pPUmxOdGFGaFdiVkYzVjFaYVlWSXlSWHBhUjBaVFYwWktWbFpYZUZOak1XUkhWMjVTVGxaNmJGaFVWVkpEVGxaa2NWUnVUbGROYTNCYVZsYzFTMWR0Vm5KalJUbGhWbXh3VUZZeFpFZFNNV1IwWWtkb1RsTkZTWHBXYlhoclRrZEZkMDVWWkZSaWF6VndWVzB4VTJGR1ZuSlhhM1JYVm0xNGVWWnROV3RXUmxwMFpVaHNXbFpXVlRGV2FrWkxZekpPUjJGR1drNWhiRnA1Vm1wSmVGSnRWa2RhU0ZacVVteHdjRlZxUmt0VFZscHhVVzEwVjAxVk5WaFhhMmhUVlRKS1dXRkhPVnBXUlVveVdsVmFZVmRYVGtaYVJsWk9ZWHBXTlZaSGRHOWlNV3hYVTI1U1ZtSnJTbGRaYkZKWFVrWmFWVkp0Um10U1ZFWllWa2N4ZDFVeVNsbGhSRnBYWVd0dk1GWkVSbFprTURGWFYyeG9hVkpzY0doV2JYaHJZakpTYzFkdVRsaGlWVnBRV1d0V2QyVldVbGRYYlRsb1ZtdHNNMVJyVWtOV01WcHpVMnQ0Vm1GcldrdGFWVnBYWkZaYWRHRkdUbGhTTW1oVlZtdGFhMDVHVFhoVmEyUmhVMFUxV1ZsclpGTldNVkpZWTNwR1ZGWnNWalZhUldNMVZteEtkRlZyWkZkTmFrRXhWbXBLUjJOck5WbFhiRlpYVFRKb05sWnFRbFpsUm1SWFZXNVNhbEpVVm05VVZ6VnFaVVpaZUZWclRtbE5WVlkxVlcxNGExWkhSbk5qU0VKV1RVZFNkbGRXV21Ga1JURlhVMnMxVTJKclNrcFdSbHBYWVRKRmVGTllaR3BTV0VKWVZXNXdSMlZzV2toTlZYUnFZa1UxZUZaSGVHOVdNREI0VTI1b1YxSXphSEpXUkVaclVqRk9kVlJ0YUZOTk1taFdWbGN3TVZFeVVuTmFSbWhzVWpOU1VGVnFSbUZsYkd4eVlVVmtWMUl3Y0RCV1Z6VkhWbTFHY2xOcVRsWk5WbkJUV2xWa1IxSnNjRWhoUms1cFVqTmplVll4V2xkVk1VMTRXa2hPV0dGc2NGUlpiVFZEV1Zad1dHUklaRlJOV0VKWVYydFZOVlpHV25KWGFrSmFZVEZ3VUZsclpFdFhWbkEyVVd4a1RsWnVRbTlYVmxKQ1RWWk9SMVp1VmxaaVJUVndXV3RXZDJReFdsVlJiRnBPVmpBMVNGWlhlRzlVTVZwV1RsaEtWVlp0VVRCYVZscHJWMWRPUjFwSGFHbFNiWGQ2Vm1wS05HTXhiRmRYYkdob1VqSm9ZVlpzWkZOVVJsbDNXa1prVkZZd05VaFpNR1J2WVVVeFNWRnNXbGROVmtwRVdWUkdUbVZHVW5KWGJFSlhZbGhvVlZkWGVHdGlNV1JIVld4V1ZHSlViRlpWYlhoM1YxWndSbHBFUW1oaGVrWjVWRlpTVTFZeFNYcGhSMmhYWWxSR1RGa3llRTlrVmtaelYyMXNhV0V3YnpKV2JUQjRUa2ROZUZkWWFHcFNWbHBYV1d4b1UyTkdXbk5YYmxwclRWZFNXVnBGWXpWV1ZURnlWMnhrVlZac2NISldhMlJMWkVaV2RGSnNjRmRTV0VKUVZrWmFZVmxYVFhoalJWcGhVbTFvVkZSV1duZFRNVnB4VTJwU2FFMVdWak5VVm1oWFlVWktSMk5HYUZkaE1WcG9WakJhWVZaV1RuSlBWbEpUWVhwV05WWnFTWGhqTVZWNFYyNU9hbE5HY0ZoWmJHaERWVVpzY1ZKck5XeFNiSEF4VlRJeFIxWkdTbFZXYm1oWFVteHdWMVJXV2xwbFJtUnpZVVU1VjFaVVZuWldiVEV3WkRGa1YyTkdXbGRpVlZwWldXdGFkMDFHV2xkVmEwNVhZWHBHTVZsVlZqUldhekZJVld0NFZrMVdjRlJhUldSTFVtczFXR0pHWkZkU1ZWa3dWbTE0VTFOck1WaFVXR3hWWW14S1ZsbFVSbmRWVmxWM1drYzVhbEpzV2pCVWJGWlBWMFphYzJOSWNGZGlWRVpJVmpCYVlXUkdWbk5pUmxaWFZqSm9NbFp0Y0VkWlYwNTBWR3RzYVZKc2NIQlZha0YzWlVaa1YxcEVVbHBXYkhCWVZUSTFSMVZ0U2tkalNFNWFWa1UxUkZZeFdtdGpiRnAwVW14T1RtSkZjRXBXVnpFd1lURmFkRk5zYkZKaVIxSldWbTV3UjFaR1VsZFhiVVpYVm10d01GUXhaSGRVYkZwWlVXeHdWMVo2UlRCWmFrcExVakZTY2xwSGNGTmxiWGhvVjFkMGExVnJNVWRqUm1oc1UwVTFjVlp0Y3pGTlZtUnlXa2hrVmsxRVJrcFZWM1IzVmpGS1JsZHVXbFpoYTNCSVZXcEdhMWRYVGtoaFJrNVRWMFZLYjFadE1ERmtNVWw1Vm01T2FWSkdjRlZaVkU1RFl6RmFjVkZVUmxSaVJscFpWRlpvVDFack1YTlhha0poVmxaS1ZGWXdXbUZqTWs1SlUyeFdhRTFzU2xWWGExWmhVekpTVjFadVVtbFNiRXBVVm10YVlVMHhXbkpYYlhCT1ZtdFdOVlpXYUc5aFZrNUdZMGRHWVZZemFHaFpNVnBoWTFaR2RGSnNhRmRpYTBwWVYxWldhMUl5UmtkVFdHUnFVbTE0YUZac1pHOU5NVmw1VFZWa2FtSlZOVVpXUjNoM1ZHeEplRk5yTVZkV2VrSTBWWHBHUzJNeFpIVlZiV2hUWWxaS1VGWkdZM2hpTVZKWFYyNU9ZVkpGU205VVYzTjRUbFphUjJGSVRsZFNiVkpKV2xWb1IxWnJNVWRYYTNoYVRVWndXRnBHWkU5VFZsSnpWRzFzVTAweWFGcFdha293VlRGVmVWSlliRlJpUm5CWldWZDBTMWxXYkZWVGJUbFdVbXh3ZVZZeU1VZFdNREZXVGxSR1dHRXhjRE5aVlZWNFZqSk9SVmRzWkZkTk1taDVWbGR3UjJFeFRrZFhia3BwVW0xb2NGVnNVbGRXVmxwSFdYcEdhVTFFVm5wWGExcHZZV3hLV0ZWc1pGVldNMDE0VlRGYVZtVlhVa2hTYldoWFlUTkNXVlpxU1hkT1ZsbDVVbTVLVDFkR2NGWldhazV2Wld4WmQxWllhRmhXYkVvd1dUQlZNVll4V2tkWGJHeFhZbGhvY1ZSV1drWmxWa3B6V2taU2FHSklRbmRXVkVKcllqRnNWMWR1VWs1V2EzQlBWVzE0VjA1V2NGWldha0pYVW10c00xa3dWbmRXTVVvMlVtNXdWMUo2Umt4Wk1uaFBZMVpTYzJGR1pFNU5WWEJhVmpGb2QxSXhUWGhhUldSVVltczFiMVZxVG05V1JsbDNWbXQwVjFac2NGbFpNRll3VkRGSmVGZHVjRmRpUjJoMlZtcEtTMUpyTlZsU2JGcG9ZVEJ2ZWxaWGNFZGpNazV6VjI1T1lWSXlhRlJaYTJRelRXeGtWMVpzWkU1U2JIQXdWV3hvYzFadFNuVlJiVVpoVmpOU2FGWlZXbUZrUjFaSFdrZDBWMkV4YjNkWFYzUmhWREZaZDAxSWJHaFNWMmhZVkZaYWQyRkdiRlZSVkVaVVVteGFNVlpITVhkVk1VcDFVV3hDVjFaNlZqTldha1pUVmpGa2MxWnNVbWxpYTBwUVZrWmFZV013TlVkWFdHeFBWbFJzV1ZWcVFuZFNNVmw1WlVjNVdGSXdWalZXVnpWM1YyeGFjMk5IYUZwbGExcFFXVEl4UjFJeFpITmFSMmhzWWtac05WWnFTalJXTVd4WFZsaG9ZVkpXY0U5V2JYaDNZekZXY1ZGdFJsaFNia0paV2tWa1IxVXhXblJWYkdoWFlsUkdTRlpzVlhoak1XUnlXa2RHVTFac2NGVldNVnBoVXpGa1YxSnVWbFZpUjFKd1ZXMDFRMVJXWkhKVmEyUnFUV3MxZWxsclVtRldNa3BaVVd4b1ZWWldjRE5XTW5ocll6RmFkRTlXY0ZkTlJuQktWbFJLTkdJeVNrZFVhMnhTWWxWYVlWWnFUbE5OTVZKVlVtNUthMDFZUWtkYVJWcFRWVEZhU0dWSFJsZFdla0kwV1dwR1dtUXdNVWxpUjBaT1RXNW9XbFp0TUhoVU1EVkhZa1JhVkdGNlZuTldiWE14VjJ4c2NscElaRmRTYTNCWFdUQm9hMVl4V2paV2FrNWFaV3R3V0ZWcVNrdFNNWEJJVW14T1UyRXpRalZXTVdRMFZqRnNWazFWWkdsVFJYQnZWV3hTYzJJeFduTlZhMlJPVm14YVdWUnNaREJYUjBwV1ZtcFdWMUpzU2toV01uTjRWMFpXY21GR1pFNVNNVXBaVmxSR1lXRXlVa2hTYTJocFVtMVNUMVJYTVdwbFZscHhVbTEwYTAxVk1UVldWbWh6VmxkRmVXRkdWbHBXUlhCMlZsWmFXbVF4V25SU2JXeE9WbTVDTkZaclkzZE9WbEowVTJ0b2JGSnRlRlpXYlRGdlZVWnNXR016YUdwaVZYQkdWbTE0ZDFSc1NYbGhSVlpZVm14d2FGVjZRVEZrUms1eVlrZG9VMkpyU2xsWFYzaGhVbTFSZUZkc1ZsUmhiRXBWVkZaVk1WTldWWGxrU0U1WFZqQndTRlV5ZUc5V01rcFpWV3BPVlZaRlduSldNR1JUVWpGd1NHTkZOVmRYUlVwaFZteGplRTVIU1hsVGEyUlZZVEpTY1ZWdGVFdFdNV3hZWkVoYVRsSnVRbGxhVldoUFlXeGFjazVVUmxoaE1sSXpWbFJCZUZOV1JuSmhSbWhYVFRGS1dWWnRjRXRTTVVsNFdrWnNhbEl5YUZSVmJHaERWMFprVjFWcmRGWk5iRnA2V1d0U1lWWkhSWHBSYms1WFlXdEZlRlV5ZUZkWFJURlpWR3hhVG1KR2IzZFhiRlpUVlRGa1IxZHVUbXBUUlhCV1dWUktVMVpHYkRaU2JYUnFZbFZhU1ZscldsTlZNVnBIVjJwT1YyRXhjR2hYVmxwT1pWWldXV0ZIYkZSU1dFSlpWMWN4ZWsxV1drZFhia1pTWWxWYVdWWnROVU5XTVZwMFRsZDBWMkY2UmxkWmExSlhXVlphV0dGRVRsZGlXRTQwVm1wR2EyTXhWbk5qUlRWVFRWVndUbFpzWTNkbFJrMTRVMjVPV0dKc1NtOVZiVEZUVkRGU1dFMVhPVlZXYkhCNlYydFNRMkZGTVhKTlZGWlhVbTFvZGxac1pFdFNNazVIV2tad2FWZEdTazFYVkVKaFZqSlNXRlJyYkZWaVdGSllXV3RhZDFOV1duSlpNMmhyVFd0YWVsVXllSE5XYlVwSFkwZG9WbUpHY0ROVVZFWmFaREZrZEZKdGRGTk5WbkJJVm10a05HRXlSa2hTV0hCU1lYcEdXVmxVUm1GaFJtUlhWMnQwYWsxWVFrcFZNbmhUWVVVd2VXRkdXbGRXTTJob1drUkdWMUl4Y0VkaFIzaFRZbFpLVUZaWGNFTmtNVTVYVmxoc2JGSXdXbGhWYWtKM1ZteHNjbGR0ZEZkV2JIQkhWVEo0YjFsV1NYcGhSa0phVFZad1NGcEdXbE5qYXpsWFdrZG9UazFGY0V4V2FrWnJUVWRKZUZWWWJGTmlSbkJQVmpCYVlWVXhiSFJOVms1YVZtMTRWbFV5Y3pGVWJGcDBaRVJTV0dFeFduSldNRnBLWlVaa2NtTkdaRTVoYTFveVYxWmFZVmR0Vm5SU2ExWllZa2RvV0ZSVVFrdFVWbVJ5Vld0MFZVMVZOVWhXUnpWTFlVWktjbE5zYkZaaVJuQXpXa2Q0WVdSSFRrWlBWMnhPVWtWYU5sZFhkR0ZpTVZKeldrVmFUMWRGV2xaV2FrNVRaV3hTYzFkdVNtdE5hMXBIVmtjeGIxWXlSWGxQU0d4WVZqTlNkbGxxUm10ak1XUjFWV3hhVjFKVmNHOVdWelYzVWpGT1IyTkZXbUZTV0ZKVlZtMTRTMDFHYkhKV1ZFWm9WakJXTTFscVRuZFdNREZZVlZoa1dsWXpUWGhXTUZwVFl6SkdSMVJ0YkZOTmJXZzJWbXhTUTFsWFVYbFRXR2hwVTBVMWFGVnJXa3RqTVd4eVdrUlNiRkpzVmpWVWJHUXdZVWRLUm1KRVRscE5SbHA2Vm14VmVGZEhSa1poUm5CWFZtNUNhRmRzWTNoU01VcFhWRzVPYWxKdFVuTlpWRVoyVFd4WmVHRklaRlJOVlRVd1ZtMTRiMVpYUlhsbFJrNWFZa2RSTUZaclduZFhSVEZWVldzNVUySldTbGxXYWtsNFRVWlJlRk51U2s5WFNFSlhWRmMxVTJSc2JGZFhhemxUWVhwV1dGWnRlR3RoVmtwMVVXc3hXR0V4U2toWmVrcFBZekpLUlZkc1pHbFNNVXBaVmtaV1lXUXhaSE5hU0U1WFlrZFNjbFJXV2xkT1JsVjRZVWhPYVZKck5VcFZWekZIVjJ4WmVsVnJlRmRoTVhCNVdrUkdkMUp0VWtkVmJFNVhVak5vYUZac1kzZGxSMGw0VjFoa1RsTkhlR2hVVkVvMFYwWnNjMkZHVG1waVIzY3lWVEp6TVdKR1NuTlRibkJYVFc1b2FGbFdaRVprTWs1SldrWmtWMDB5YUhsV1IzUmhVekpOZVZOclpHRlNNRnBVVlcxMGQxWnNaRmhrUm1SclRWVTFXRmxyYUV0aFJrcFZZa1pvVm1KWWFETldNRnBXWlZVMVdHUkdhR2xXVmxrd1ZtcEpNV1F4V25SVGEyaFdZVEpvV0ZSVlpGTlhSbFY0VjIxMGFrMVlRa2hXUjNNeFlWZEtXRmt6YkZkaVdHaFVWV3BHV21WR1dsbGlSbFpvVFcxb1ZsZFdVa2RrTWs1SFZtNU9XR0pWV25CVVZscDNaVVphU0UxRVZsZFNWRVpZVmpJMWMxZEhSWGxoUmtKYVZqTk9ORmt5TVV0U1ZscHpZVVpvVkZKVmJ6SldiR2gzVXpGWmVGcEZhRlpoTW5ob1ZXMTRZV014YkZWU2JtUlBZa1p3ZUZVeWNGTmhSVEZYWTBod1ZrMXFWbEJaVlZwTFpGWkdkVkZzWkdoTlZuQnZWbTF3UjFsV1pFWk5WbFpTWWtVMWNGWnNaRE5OVmxweVdrUlNXbFpzU25wWGExWnJWa2RLUjFkc1dsZGhhelYyV1ZWYVUxWnNaSE5hUm1oVFZrVmFXbFpFUm1GaE1WVjNUVlZXVjJKR2NGaFVWelZEVXpGU1YxZHRSbE5OV0VKSFdWVmtORlV4V25WUmJXaFhZbFJDTkZaWGMzaFNNazVHWVVVMVYxWXhTbmxXVjNCRFpERk9jMWRyYUU1WFJUVldXV3hXZDJWV1ZYbGpSVGxZVW14c05sWlhOVWRXVjBwSVZXeENWMDFHY0V4WmVrcEhVMGRXUjFWc1RtbGhNRzk1Vm1wR2EwNUhSWGRPVldoWFltczFjRlV3Vm1GV1ZteDBUVlpPYWxac1duaFZWelZyVmtaYWMxSnFVbHBXVmxweVdWVmFTMk15U2tWWGJIQlhWbXR3VFZacVNqUlpWVFZ6VTI1V2FsSnVRbk5aVkU1RFZFWmtjMWR0ZEZWTlZUVllWVzAxVTJGV1NuSk9XRTVhWWtkb2RWUlZXbHBsUm1SMFVtMW9UbEpHV2twV2JHTXhWVEZWZVZOdVRsUmlhMHBYVkZWYVZtVkdhM2RYYkU1WVVsUldWMVpITVRCVWJGbDZZVVJXVjAxWGFETldha3BIWXpGa1dWcEdhR2xTTTJodlZtMTRhMkl5UmtkaVJscGhVbGhTV1ZWcVJtRlRiR3QzVjI1a2FGSXdWalpWVm1oM1YwWmFSbE51U2xabGExcFFWVzF6TlZZeVNrZFViV3hYVFcxb1dsWnJXbE5UTWtwMFZteGtZVkp0VW1GVVZFcHZZMVpTV0dNemFFOVdiRlkwV1ZWb1QyRkhTa1pPVldSV1RXcFdSRlp0TVV0a1ZrWjFZMFphYVZkSGFEWldiWEJIWkRGS1YxWnVVbXRTTW5oWVZtMHdOVTB4V1hoYVJFSnBUVlpHTlZWdGVHRlViR1JIVjJ4T1dtSlVSbFJYVmxwelZsWk9jazVWTlZkaVdGRXdWakowVjJFeFpFZFRXR2hZWVROQ1dGUlhOVzlWUmxwVlVWaG9hMVl3V2taV01uaHZWakF3ZDFOclZsZGlSa3BNVmtSR1QxSXhVblZUYkdocFZqTm9WVlp0TVRSa01sSnpWMjVTYWxKVWJIQlVWVkpIWld4YWRFNVZkRnBXYXpWSFZHeG9SMVpXV1hwVmJuQlZZVEZ3YUZZd1ZURldiRkowWVVaa2FFMHdTbUZXTW5oWFZqRnNWMXBJVGxoaWJFcFhWbXRXUzFZeFVsaE9WemxWVW14V00xZHJWakJXUmxwelUyNXdWMVl6YUhKV2FrcEdaV3hHV1dOR1pFNVdNVVl6Vm0xd1MxUnRWa2RVYms1b1VtczFjRlZxU205bGJGcFZVVzFHYTAxcmJEUlphMmhQV1ZaS1IxTnVUbHBoTVhCWVZHdGFZV1JIVmtaUFYyaHBVbGQzZWxkVVFsZGhNV1IwVWxob1dHSkhhR0ZXYkZwM1dWWndXRTFWWkZOV2F6VjZXVlZrYzJGV1draGtSRnBYVFZkT05GUlZWWGhTTVdSeVlVWk9hR0pJUW05V1Z6QjRZakZrUjJKSVRtaFNlbXh2VlcxNGQxZEdXWGxOVldSb1VsUkdlVll5ZUhOV2F6RjFZVWhLVjJKVVJrZGFWbHBYWXpGU2MxcEdaRk5YUlVsNVZtdGtNRmxXYkZkVFdHaG9UVE5DYjFWdGVHRldSbXgwWkVWMFdHSkdjRWhXTW5oclZsVXhjbGRyYUZaTmFsWk1Wa1JHWVZJeFRuTldiRlpYVm14V05GZFVTalJXYlZaV1RWWmtZVkp0VW5CVmJYaDJaVVphVjFremFHcE5WbFkxVm0wMVUySkdTa2RUYkd4WFlsaG9NMWt5ZUZOamJIQkhWRzEwVTJFelFYaFdiR040WXpGYVIxTnNWbGRpYlZKWVZXMHhUbVZHVmxWVGJFcHNVakJ3U2xVeWVIZGlSMHBIWTBob1YySllRa1JYVmxwclZqSk9SMWR0YUZOTlJuQjJWbGR3UTJReFpGZGpSbHBvVTBkU1dWbHNWbUZsVm10M1ZXczVXR0Y2UmtsV1YzUTBWbXN4UjFaVVJsZE5WbkJNV2tWa1IxSXhjRVpPVlRWcFZqRkZlRlp0Y0VkWlYwWjBWbXRvVlZkSGVGWldNR1EwVmxaWmQxcEVVbXBXYkZZelZtMTBNR0ZzU25OWGFrWmFUVWRvVUZscldrdGtSMVpIWVVab2FFMVZjRlZYVmxKTFV6RmFjMXBJUmxKaVNFSnZWRmN4YjFWV1pGZFhiRnBzVWpGS1dGVnROVmRaVmtwMVVXMDVWVll6VGpOYVZWcHJWbFpLZEdSR1RrNVdNVXBLVm0weE1HTXhaRWhUYkdob1UwVktXRmxYY3pGa2JGSjBaVWQwV0ZJd05VZGFSV1F3VkcxR05sWnJjRmRXUlc5M1dXcEdWMUl4Y0VaWGJHaHBWa2Q0V1ZkV1pIcE5WMUp6Vm1wYVUySkhVbkZaYTJoRFUyeGFTRTFZWkZWaVJuQldWbTE0YjFZeVNraFVXR2hXVmtWd1NGWnFSazlqTWtaSVpVWk9WMkpyU205V2JUQjNaVVpXY2sxVlpGZFhSM2h6Vld4b1UxWldWbkZSYm1SVVlrWndTVnBWV2s5V01ERlhZMGhzV2sxR1NsQldNRnBhWld4V2MyRkdjR3hoTVhCTlZtcENZVk15VFhsU2EyaHNVbXMxV1ZWc1ZuZFdiRnB6V2toa1ZFMUVWa2xXYlRWUFZqRmtTR0ZHYUZwaE1WVjRXVEZhVjJOV1JuVmFSazVPVmpOb05WWnRNVFJoTWtaSFUyNU9hVkpHY0dGV2JGcGFaREZhZEUxVldteFdiRm94V1RCYWQySkhSWHBSYTNoWVlrWndjbFpFUms5V01VcDFWVzFzVTJGNlZsbFdSbEpMWWpGT1IxZFlhRmhpVlZwdlZGVlNWMU5HV2toT1ZUbFhVakJXTlZsVmFFTldhekZIVmxob1drMUdjRlJXYWtaclkyMVNTR1JGTlZkTk1tY3hWbXBHYjJReFdYaFdXR2hZVjBkU1dWbHJaRFJoUmxwelYyMUdUazFXY0ZaVmJYUjNZa1paZUZkcmNGcE5SbkJvVmtkNFlXTXlUa2RXYkdoWFVsVndlVlpZY0VkVU1VcHlUMVprYUZKVWJGaFpWRVozVjBaYVIxcEljRTVXVkVJMFZtMXdZVlV5U2taT1ZUbFdZbFJHVkZwWGVHdGpiR1IwWkVkb1YyRXpRbGhYVkVKaFlqRmFWMWRZY0ZaaGF6VldWbXhhZDJGR2EzbGxSMFpyVW10d2VsVXlNVzlVYXpGV1kwVjRWMkpIVGpSYVYzTjRWMFpLYzFwR2FHbFNNMmhZVjFjeGVrMVdiRmRpU0VwWVlsVmFWbFZ0TVRSbFJsWjBaVWRHYVZJd2NFZFpNRnB6VmxVeFYxZFlaRmRTTTJoTFdsZDRjbVZ0UmtkYVJtUk9UVlZ3TlZZeGFIZFRNVkowVm14a1ZXSkhlSEJWYWs1RFZsWldjMVp1Wkd0TlZuQlpWR3hvYTJGck1YTlhhMmhhWVRGd2NsZFdXa3RTTVU1MVUyeHdhVkpzY0c5V1JsWmhZekpPZEZKcldsQldNbWhZVm10V1dtVkdXbGRaZWtab1RWZFNNRlZzYUhOV1ZscEdWMjFHVlZadFVsUlZNRnBhWkRGd1IxcEdVbGRpVmtsM1YxWldhMk14V1hkTlNHeGhaV3R3V0ZSV1pGTk5NVlkyVTJ4S2JGWnNTbmxaVlZwVFlVVXhkR0ZHU2xkaGEwcFlWMVprU21WR1pIVlNiRlpwVmtkNFVGZFhkR3RPUm1SWFZXeGthRkpVYkc5WldIQkhaVlpzY2xWc1pGaGhla1pKV1ZWV1UxZHNXbk5qUlhoVllsUkdURlV4WkVkU01rNUhXa2RzVjJFeFdYcFdha293WVcxV1IxTlliRlpoTW1oVldWUktORlpzYkhOYVJGSlZUVmQ0TUZwRlZqQlVhekZZVld4c1lWSlhVak5XUkVaYVpEQTFWMkpHV21sWFIyZ3lWMWQwWVZReFNYbFVhMmhRVm01Q2NGVnFSa1prTVdSeldrUlNhazFyTlZoV1J6VlhXVlpKZWxGc1VsVldWMmhFVlRKNFlWSldTblJTYkdST1lURndTVlpxUm05a01rWkhVMnRhYWxKdFVtRldhMVozVmtad1dHVklUazlpUlRWNVdUQmtNRlJzV25OaU0yaFhWbTFPTkZsNlJsWmxWbHAxVlcxNFUxWXhTbHBXYlRFMFpESk9jMVZ1U21GU2F6VnhWRlpWTVdWV2JGWmFTRTVYVW10d1ZsWnROV3RXTVVwelYyMW9WbVZyY0ZOYVZXUkxVMVpPYzJOSGVHbFNia0pXVm0weGQxRXhiRmRhUm1ScVVteHdiMVZxUW1GWFJsSlhWbTVPVDFadVFsZFpWV2hyVmpKR05sSnNhRmROYm1oVVZqSnplRk5HVm5KbFJscHBWa1ZhVFZaWE1UUlpWMUpJVW10a1lWSlVWazlaYkdSU1RWWmFjVkp0Um1oaVZscEpWa1pvYzFaV1pFaGhSbHBhWVRGd00xWnFSbk5rUjFKR1pFZHdVMkpHY0RaV01uUlRWVEZWZVZOcmFHeFNiV2haV1ZSR1MxWkdXbkphUlhSVFlsVTFSMWxyV25kaFJURjBZVVpHVjJKWVVtaFhWbHBhWlVaU2RWWnRSbE5pYTBwMlZrWmFZV1F3TlhOWGJHaHNVak5TVkZSV1pGTlRWbHAwWkVkR2FHSkZjSGxVYkZwVFZsWmFObFp1V2xWaVdHaHlWakJrVDFKdFVraGhSMmhzWWxob1dWWXhVa05WTVZsNVVtdGFUbE5IVWxWWmExWmhWbXhhZEUxV1NrNVNiVkpZVmpKNGQySkdTbk5qU0d4WVlURndkbFpVU2t0WFZtOTZXa1prVTJKSVFtOVdiWEJIVm0xV1YxTnNiR0ZTYlZKd1dXdG9RMkZHV2tkWGJVWlhUVVJXU0Zrd1ZtRlhSMFkyVm01T1YySllhRE5VVmxwaFYwZFdSbVJIYUZkaVIzY3hWMVpXWVZsV1pFZFhhMXBZWWtWS1lWbHNVa2RVUm13MlVteE9hazFyY0VsWmExcFBWakpLU1ZGcVNsZGlWRVl6VmtSS1NtUXdNVmxVYld4VFlsZG9VRlpxUWxaTlYwNVhWV3hvYTFORk5WQldiVEV3VFRGc1ZsWnJPV2hTYkhCNVdXNXdTMWR0UlhsaFNGcFhUVzVvYUZwRldsZFdWa1owVW14T2JHRXhjRXBXTW5SWFlURk5lRlJzWkZaaWJFcHdWV3hTVjJOR2JGVlJibHBzWWtac05GZHJVa05oUjBZMlZteHNWMUl6YUhaV1ZFcExVMGRHU1ZSc1drNVNia0Y2VjFkd1IyTXlUWGhqUlZaV1lsaG9jRlZxVG05T1JscFZVMVJHYUUxclducFZNV2hyWVd4S1dHVkdXbFZXYlZKMlZUQmFjMVpzWkhOalIzaHBWbFp3UjFaVVNqUmtNVmw1Vm01S1dHRnNjRmxXTUdoRFZFWlZlVTFXWkZoU2JFcDVXV3RhUzJGV1dYcGhSbFpZWWtkT05GUnJWVEZTTVhCSFdrWm9hVmRHU2xGV1YzQkhVekF4UjFadVVrOVdhelZ2Vm0xek1WSXhVbk5oUlU1WFZteHZNbFp0ZEZOWlZrcEdWMjV3V2sxdWFIcFViWGhoWkVkT1IxcEZOVk5pYTBwb1ZtcEtORll5U1hoaVJtaFRZVEpvVlZsclpHOWpNVlYzWVVWT1dsWnRlRmxhUlZZd1ZqRktkR1JFVGxoaE1WbDNWbXRhUzFaWFNrZGFSbVJwVmtWYU1sWnRjRUprTWxaWFlqTndhVkp0VWxoVVZFWkxaVlprV1dORmRGVmlWbHBZVmtkNGMxbFdTbk5qU0VKYVZrVktNMXBFUm1GWFJUVlpXa2R3VGxaWVFqWlhWM1JoWVRGc1YxTnJaRlJpYTNCaFdWUkdZVTB4VlhoWGJrNXFZbFZhUjFReFpHOVdNVnBHVjJ0c1YxWkZhM2haVkVaclpFWktXV0pHVmxkU1ZuQlpWMWQwYTFVeFRrZFhXR1JoVW0xU1ZGbHNWVEZUUmxwSVpVVTVWV0pWY0RCWGJuQkxWakpLUjFOcmFGZGhhMXBYV2xaYVUyTnRSa2RWYldoT1lsZG9VMVp0Y0VOV01XeFlVMWhvV0dKcldsWlpiRkp6VmxaU1YxZHRSbXhXYlZKNVdWVlZOV0ZIUmpaU2JHUlZZa1p3Y2xacVJtRk9iRnB5Vld4d1YySklRazFXYWtKclZqRktjMXBJVG1wU2JWSndWbTEwVjAweFduTlZhM1JQVW1zeE5GWkhkRzlXUjBWNVpVWmFXbUV4Y0V4V01GcGhaRWRTU1ZwRk5VNVdNVXBhVjJ0V1lXRXlSbkpOVmxwcVVtMTRWMWxzYUc5a2JHeHlWMnM1VTAxck5VbFpWV1JIVmpBd2QxTnJWbGhoTVhCb1ZrY3hWMUl4Vm5WV2JGSm9aVzE0VUZadGNFZFRNV1JYV2tab2ExSXdXbkpVVmxwaFpXeFplVTVXVGxkaVZYQjVWVEl4UjFkdFJYaGpSRTVYWVRGd1dGa3hXa3RqYkhCSFdrWk9UbEp1UWt4V01WcFhXVlpaZUZkWWJGZGlhM0JaV1Zod1YxZEdVbGhPVnpscVZtNUNWMVl5ZEdGaVJscHlZMGhzV0dFeGNGaFpWbVJMVjBkR1JrNVdaRmRpUlhCTlZteFNSMVJ0VmtoVWEyUmhVbTFTY0ZWc1VsZGxSbHBZWTBWT2EwMVZOVmhXVm1odlZqSktTRlZ0T1ZaaVdHaDZWRzE0YzFac1ZuSmtSbWhwVW0wNGVWWlhNREZrTVdSMFZtNUthbEpZVW1oV2JURlRWVVpWZUZkclpHdFNNSEJJVmtjeE5HRldaRWhaTTJSWFlXdGFhRmRXWkVaa01EVldZVVphYVdKRmNGVlhWekUwVXpKT1IxWllaRmRXUlZweFZXMTRTMWRXVW5OV2F6bG9UVVJHV1ZwVmFITlhSbVJKVVd4b1dsWXphR0ZhUkVacll6SktTRkpzWkZkTmJXaDJWakZhVjJFeFRYaGFSV2hYWVRKNGNWVnROVU5pTVd4VlZHdEtiR0pIVWxaVlZ6RXdWa1V4Vms1VlpGVk5WbkI2VmxSS1MxZEhSa2RoUmxaWFVsaENNVmRzV21GaE1WbDRZVE53YUZJelFrOVpXSEJHVFZaYVZWSnRPV3BOYTFwNlZrZDBZVlpIU25KVGJHUmFZbFJXUkZwWGVIZFdiR1IxVkd4a1RsZEZTa2RXYkdONFRVZEdWMWRzWkdsTk1sSlpWbXBPVTJSc1drVlRhMlJYWVhwR1dsWnRlRXRoVjBwWFUyMW9XRlpzU2t4V1IzTjRWakpGZW1GSFJsTldNVXBhVmxkd1IxbFdUbk5YV0d4T1ZucHNiMVp0ZUhOT2JHeFdWVzFHV0ZKc2JEWlZWM1JUVmpGYVJtTkdRbFpOUm5CUVdUSXhSMUl4Um5OYVJtUnBVMFZKZVZadE1IaGtNVkY1VTFoa1RsZEZOVmhaYlhSM1lVWlZkMVpVUm1wV2JFcFpXa1ZvVDFSck1WZGpSbXhWWWtaYVVGbFZXbUZqYlVvMlUyeHdhRTFXY0c5V2FrbzBXVmRTUjFac1ZsSmlWVnBVVkZSS2IxUldXbFZSYlhSVVRWVTFXRlpYTlU5V2JVcElWV3hvV2xaRk5VTmFWM2hhWlVad1JWRnNaRTVoZWtVd1ZsUktOR0l4VlhsVGEyaG9VMFUxVjFsclpHOVNSbHB5VjJ4a2FsWnJOWGhXVnpFMFlWWktjMWRVUWxkaVZFVXdWa1JLUjJNeFRsbGFSM0JUVmpGS2FGZFdVa2RaVm1SSFlrWmFXR0pJUW5OWmJGWmhVakZ3UmxkdFJtaFNWRVo2VlRKd1lWZEdaRWxSYTJoWFVrVmFhRmw2Um1Ga1ZscHpVMjFzVjAweWFGWldiVEYzVkRKSmVGTllhR0ZTYlZKWldXeG9VMVZHVm5SamVrWnNZa1pXTlZwRll6VmhSbHB5VGxWa1ZXSkdjRmhXYWtwTFVqSk9SbVZIUmxOU1ZuQTJWMVJLTkdNd05YTlhibEpwVWpKNFZGWnNhRU5XTVZweFVteE9WVTFWVmpSV1YzUnJWMGRGZVdWR1pGcGlSbHBvVmpCYVUxWXhaSFZhUjNocFVteHdXbGRzVm1Ga01rcEhWMjVLVDFaRldsaFdhazV2WTJ4YVZWSnRSbXRXYTFwNVZsZDRZV0pIUlhkalJFcFhWak5DU0ZaVVNsTlNNVkoxVkd4b2FWZEdTbFZXUmxKTFlqSlJlRmR1VW14U2JWSnlWRmQ0UzJWc1dYbGxSbVJYVmpCV05Ga3dhRU5XVmxwWVZGUkdWVlpGV25wWk1uaFhZekZ3UjFkck5WZFdNMk40VmpKNFYySXlVWGhYYmtwT1ZtMVNXVmxyV2t0WlZsSldXa1pPVlZKc1dqQlVWbFl3VlRKS1IyTkVRbHBXVm5CeVZrZHplR1JHY0VWV2JHUk9WbTVDZUZkc1ZtdFViVlpYVld4c2FWSnNTbGxWYWs1dlpVWmFWVkZzWkZSTmF6VklWbTAxVjJGc1RrWk9XRTVXWWxSRk1GWXdXbXRqYkZaelZHMW9UbUV6UWxoV2FrcDNVVEZrZEZKWWJHaFNhMHBoVm0xNFYwNUdjRWRYYTJSclZtNUNTRmt3Wkc5VWJVWTJVV3BTVjAxV1NraFpWRVpLWlVad1JtRkdaR2hOYm1oYVYxZDRhMkl5VGtkWGJrWlZZbFJzVUZsclpGTlhWbXQzVm1wQ2FFMUVSbmxVYkZaelZtc3hkVlZ1V2xkV1ZuQnlWVzE0YTJSRk9WZGFSMmhvWld4WmVWWnJXbXRPUjAxNFdrVmFUbFp0ZUZaWmJHaERWREZzVlZOcVRrNVdiVkpXVlZjd05WVnJNWEpYYkdoV1RXNUNhRmxXV2s5VFIwWklVbXhrYVZaRldsUldSbFpoWkRGT1JrMVdXbUZTTTFKVVZGVm9RMU14V25KWk0yaHFUVlpLTUZVeU5VdFdSMFp5VGxac1YyRnJOVlJaTVZwVFl6RndSazlXYUZOaE0wSTJWMVpXYTA1R1drZFRibFpTWWtaYVdGWnFUa05VUmxKeVdrWmthazFyY0VwVmJYaExZVlpLVlZadWFGZFdNMEpFV2tSR1NtVkhTa2xUYkdScFVqRktkbFpYTVRSak1EVnpZa1phVjJGclNsaFpiRlpYVGxaYVdFNVlaRmhpVmxwNVZqSjRRMVl5U2xsaFJtaGhVbXh3U0ZwRlpFdFNNVkp6V2tVMVRtSlhhRXBXYlhCSFdWWnNXRkpZWkU5V1YxSldXVzF6TVZaV2JGVlRiVGxxVW14V00xWnNVa2RoYkVwelUyeHNWV0pHV2xCWlZFRjRWMGRXU1dKR1pHbFdSbHBSVm14U1IxZHRVWGhhU0U1cFVqQmFXRlp0ZUhabGJGcHpWV3RrVkdKV1dsbFdiWFJ6WVd4S2MyTkZPVmRpV0dnelZteGFhMVpXUm5Sa1JsSk9WbGhCZDFaVVNqQlpWbGw1VTJ4b2FGSnRhRlpXYTFaM1pHeGFSbGR0UmxoU01VcEpXa1ZrZDFSdFJqWlNWRUpYWVRKUk1GZFdXbUZrUms1MVUyeFNhV0V3Y0ZoWFZ6QXhVVEpXYzFkdVVteFRSVFZZVkZab1ExSnNXbGhOVkVKb1ZtdHdXRmt3V210V01VcHpWMjVHVlZac2NGUlZha1poVjFkS1NHTkhlR2hsYkZwYVZtdGFZVmxYVVhsV2JrNVlWMGQ0YzFWc1pGTlhSbEpYWVVWT1ZGWnRlSGxYYTJoUFZqQXhjbU5GWkZwTlJscDZWbXBHWVdNeVRrZFJiSEJvWVROQ1dWWlhjRWRXTWsxNVVtdGFUMVp0VWxsVmFrcHZaR3hhZEUxRVJtdE5WV3cwVlRKMGEyRldTbk5qUm14YVYwaENlbGw2Umxkak1rWkhWR3hPVjJKV1NqVldiVEF4WVRKR1YxTnVUbXBTYldoWFZGZHdWMk5zV1hsTlZWcHNVbTFTTVZrd1dtRmhWa2w0VTJ0c1YyRnJTbkpXYWtaTFpFWlNjbHBHVm1sU1ZGWlFWMWN3ZUdKck1YTlhXR2hoVTBkU1UxUldXbGRPVmxwSVpFYzVWMUl3VmpWWlZWcEhWakF4UjFkdGFGcGhhMXBvV1RGYVUyUkZPVlpPVjJ4VFRUSm9ZVlpyV21GaU1WRjVVbTVLVGxkRmNIQlZhMXBoV1ZaU1ZscEhPVk5TYlhoWVZqSjBNRlF5U2xaalJYQmFWbFp3TTFacVNrdFdNVXBaV2tab2FFMXJOREJXVjNCTFZURk9SMVJ1U21sU2JGcHdWbXBPYjFWR1pGaE5WRUpVVFVSQ05GZHJXbTloTVVsNlVXeENWMkZyUlhoV01WcFhaRWRXU0U5WGJGTmhlbFpKVjFSQ2FrNVdaSFJUYTJoV1ZrVkthRlpxVG05bGJHdDRWMnM1YTFadVFrbFpNRnBQVkd4T1JsTnJkRmRoTVVwSVdXcEdTbVZXU25KYVJtaFlVMFZLZGxaWGRGZGtNV3hYVjI1V2FsSlhVbk5aYTJRelRXeFZlV1JJWkdsU2JHd3pWR3hXZDFac1dqWlNibkJYVmtWd1dGcEZaRmRTVmxaellVWmthVk5GU2pWV2EyUXdXVlpSZVZSWWFGVmlhM0J2VldwS05GWldWbk5WYkdSWFlrWndNRnBWWkVkV1JURnpVbXBTV21FeWFFeFdha3BMWTJzMVYxVnNaR2hoTUhCdlZtcEdZV1F4V25OWGJsWmhVbXh3VDFac1pETk5WbVJ6Vm0wNWEwMVdjSGxVVmxwclYwZEtSMU50UmxWV1YxSlVWa1ZhVjJSRk1WWmtSazVwVW01QmQxZFdWbUZoTVZKeVRWaFNhRkpVUmxoWmEyUlNaREZzVlZOck5XeFdiRXBhV1ZWYVYyRldTblZSYkdoWVZucEZkMVY2U2s5U01WcDFWbTF3VkZKVVZucFdWekI0VGtaa1IxcElTbFppUlRWWVZXcENkMUl4YTNkV2JrNVlZbFZXTlZsVldrTldNa1Y0WTBkb1YyRnJXbEJhUmxwM1VqSk9TR0ZGTlZkaWEwVjVWbTE0YTA1SFJYaFRXR2hoVWxkb1dGbFVSbmRqVmxaMFkzcEdWMUpzU2xsVWJHTTFWREpLU0ZWc2JGcE5SbHB5Vm0xemVHTnJOVlppUmxwT1lteEtNbFpzVm1GWlZscDBWR3RrVkdKSFVsaFZiR2hEVlZaa2NsVnJaRlZpVmxwSVZtMDFSMVZ0U2toaFNFSldZV3RhVEZZeFdtdFhSMUpIV2taU1RsWnRkM3BXUmxwdlV6SkdjMU5yV2xSaVIyaGhWbXRXWVdGR2JGWlhiR1JZVWpGS1JsVlhlRk5XTWtWNlVXcFdWMUl6YUhKWmVrWmFaVVp3UmxwR1VtbGlhMHBhVm0xd1QySXhaRWRXYWxwVVlUTkNjMVZ0ZUhkWGJHdDNWMnM1VjAxc1dqQmFWVlY0VmpGS2MxZHVTbFZXUlVZMFZtcEdZV1JXVG5SU2JGSlRWa1phTkZacldtRldhekZYVjFob1dHSkhhRkJXYkZVeFlqRmFkR1JJWkZoV2JrSlhWbTB4UjFkSFNrZGpSRUpYVm14S1JGWnRjM2hrVjBaR1pVWmFUbEl4U2sxV1ZFWmhWVEpOZUZadVRtRlNiVkp2VkZSQ1IwNXNXbkZTYlhST1VqQmFlVlJzV210V1IwcElZVVpTV21FeVVuWlpla1pXWkRGa2RWcEhiRTVXTTJnMlZqSjBVMVV5U2toVGEyaHNVMGRvVjFSWGNGZGpiR3hZWlVWd2EwMXJOVWRaYTFwWFZHeFplV0ZGYkZoV2JGcG9Wakl4VjJSR1NuSldiRkpwVTBWS1dWZHNaREJaVlRWeldrWnNhbEpZVWxWWmJGcGhWMVphU0dSSVRsWmlWWEJaV2xWYVUxbFdXalpTVkVKVllURndjbFpxUm10a1IxSkdUMVpPVGxaWE9UTldiR04zVFZaVmVWSnNaRlZoTVhCUVZqQldTMVpzV25WalJtUlRVbTVDUmxWdE5VOWhiVXBJWkhwS1YySlVSak5XYWtGNFVqSk9SMk5HYUdsU2JIQXlWakZhYTFJeFRrZFViazVvVWpOb1ZWVXdWa3RoUm1SWFdrUkNhMDFFUWpSWlZFNXJXVlpLV1ZWc1ZsWmlSa3A2VmpKNFYyUkZNVmhQVm1ST1VrVkpNVll5Y0U5ak1WbDVVMnhzVm1KcmNHRmFWM1IzVkRGd1ZsZHNUbXBOVjFKNlZqSXhjMkZGTVVsUmFrNVhZa2RSTUZsVVFURlNNVTUxVkcxc1UySldTbTlXVjNSaFV6RmFWMkpJU2xkaWJWSlZWbTB4TkdWV2JGWldWRlpvVW14d1ZsVnRlRzlXYXpGeFZtNUtWMDFxUmtkYVZscFRWbFpLYzFwSGJGTk5WWEJLVm0xd1EyRXhXWGhVYkdSaFUwWktiMVZxU2pSWFJsSlZVMjAxVG1KR2JEUlhhMmhyVldzeFYxWnFWbGRTTTFKMlZtdGtSbVZIVGtsUmJGcHBVbTVDYjFkWGNFZFpWMDVYVlc1U1VGWlVWbkJWYlRWRFRsWlplV1JIT1ZWTmExcDVWRlpvUzJGV1NrZFhiVVpWVmxkU2RsVnJXbk5XTVdSeVpFVTVhVlpZUWtoV2EyUTBXVlpWZVZKcVdsZGliV2haVm10V1MxZEdVbFpYYlVaWVVteGFlVmRyWkhkVk1rcFlZVVpzV0ZZemFIWlpha1pMVWpGa2RWVnRjRk5YUmtwV1ZrWmtORk14VGtkWFdHeHJVakJhV1ZWcVFsZE5NV3QzVmxob1YyRjZSa2hXTWpGdlZqRktSbGR1Y0ZwbGExcG9XVEZhUjJSSFNrZFVhelZVVWxWd1dsWnRlRk5UYlZGM1RsWmtXR0pyY0U5Vk1HUlRWMFpzZEdWSVpGZFdiWGhaV2tWV01HSkhTa2RUYm5CWFRXNVJkMVpyV2twa01rNUdZMFprVTAweWFGVldiWEJIV1ZkT2RGUnJWbFZpUjJoWVZGUkdTMWRXWkZsalJXUlVUVmRTU0ZVeU5VOWhSa2w2WVVaU1YwMUdXa3hXYkZwaFYwZE9SbVJGT1ZOTlZuQTJWbTE0YjJJeFdYbFRhMXBQVjBWYVYxbFhkRXROTVZaeFVtNU9hbUpHY0hwWGEyUnZWVEpLU0dSNlNsaFdiRnBZVkZWYVlXUkdTbGxpUmxwcFltdEthRmRzWkRCa01VMTRZMFZXVTJKSFVuSldiWFJoVFVac2NsZHJPV2xTTUhCYVYyNXdRMVl3TVZkalIyaGFWa1ZGZUZVd1dsZGtWbFp6Vkcxc2FWSllRak5XYkZKRFZtc3hXRlJyWkZaaVIyaFFWbXhWTVdOc1VsZGFSRkpzVm0xU1dsa3dXbXRoUjBwSFlrUk9WMDF1YUhwWFZscGhWMGRHU0dGR2NGZFdNVXBOVm1wQ2ExWXhUbGhVYTJScVVqSm9iMVJVUWtkT2JGbDRWV3RPYUUxVk1UUldSM1JoVlVaYWRHVkdVbHBpUjFKMlZqQmFVMVpXVG5ST1YzaFhZbFpLV1ZZeFVrOWlNa1p5VFZoS1RsWkdXbGRVVm1SdlpXeHNXR1ZGT1ZOaVJUVXhWVmQ0WVdGWFNuSlRhbHBZWWtaYWFGbDZSbHBsUjA1R1ZteGFhVmRHU25kV2JYaGhaRzFSZUZwR2FHdFNlbXhXVkZkMFlWWXhVbGRoUm1SV1lsVndNRlpYTVVkWGJGcEdZMFU1VlZac2NGaFpla1ozVW14d1IyRkdUazVXYmtKTVZtMXdTMDVHVVhoV1dHUk9WMFphYjFWclduZFhWbHB4Vkd0T1UxSnNjRlpWTW5NMVZrWktjazVZYkZkTmFrWjZWbFJHWVdNeVRrbFhiR1JwVjBWS1VWZFhjRWRVYlZaSFYyNVdWR0pWV2xWVmJGSlhaVVphUjFwRVFtcE5SRlpJVmpKNGIxUXhXbFpPVnpsWFlsaFNNbFJYZUhOamJVWklUMVpvYVZKdVFYZFdiRnBUVVRGc1YxTnFXbE5oTW1ob1ZXeGtVMVJHVlhoWGJFNXJVakJ3UjFSc1pITldNVnBHVW1wU1YySkdTa3RVVm1ST1pWWlNkVlZzVm1oTldFSlNWbFJDYTJJeVRrZFdibEpQVmxVMVdWWnRlSGRsYkZwMFRWVmtXRkpzY0RCV1YzaHpWbFphV0dGSVdsZGhhMXBvV1RJeFQxTlhTa2RYYld4VFRVUkNORll4V210T1JteFhWMnhrVkdKcldsTlphMXAzWXpGc1ZWUnJUbGhXYlZKNVZtMHhSMVV3TVhOVGEyeFdZbGhTY2xadE1VdFhWa1p6V2taV1YyVnJXbFZXUmxwaFdWWmFWMU51VWxCV00wSlBWbXhvUTFkc1dsaE5WRkpwVFd0d1NGVXllSE5WYlVwSFUyeGtXbFl6VWpKVVZWcDNWMGRXUjFkdGVGTmlTRUkyVm10amVHUXhWWGROVld4U1lUSm9XVlpxVGxOWFJscHhVMnRrVTAxWFVscFpNR1J2VlRGa1IxTnNhRmhXYkVwTVZsUktWMk15U2tWWGJFNW9aVzE0V1ZkWGRHRlpWVEZYVm14b1RsZEZOVmRVVmxwelRteHNWbFp0ZEZoU2JIQjZXVEJvUzFaWFJYbFZiRkpoVWxad1RGcEdXbGRrUjBwSFZXeE9WMUpzYjNwV2JYUmhZV3N4VjFKWWJGWlhSMmh3VlRCV2QxbFdjRmhsUjBacVZteHdlRlZYTVVkWFJscDFVV3hrV2xaWFVraFpWVnBLWkRKT1IySkhSbGRXTW1kNlZtcEplRkl5VG5SVWExWlZZa2hDVDFWcVJrdFVWbHBWVVd4YVQxWnRVbGhWTWpWVFlVWktkRlZyT1ZWV2VrWnlWR3hhV21WR1pIUmpSM2hUVFVSRk1WWnJXbTlqTVZwSFdrVm9iRk5GV2xkVVZWcGhWRVpyZDFkc1pHdFdNRFZLVmtjeE5GVXlTbGxoUm14WFRXNVNWRlpVU2tabFZrNXpWMnhvYUdFd2NHaFhWbEpMWWpGV1IySkdaRmRYUjJoeVZtMTBZVTFXWkhKWGJtUm9VbFJHZVZSVmFHOVhSbHBHVjI1S1ZtRnJXbkpWTUZwaFkyMUtSMkZIYkZkTmJXZ3pWbTB4ZDFReVNYZE9XRTVoVW0xb2NWVnNhRk5qYkZKWVkzcEdWRlpzVmpWYVJXTTFWbXhLZEZWclpGZE5ha0V4Vm1wS1IyTnJOVmxYYkZaWFRUSm9ObFpxUWxabFJtUlhWVzVTYWxKVVZtOVVWelZxWlVaWmVGVnJUbWxOVlZZMVZXMTRhMVpIUm5OalNFSldUVWRTZGxkV1dtRmtSVEZYVTJzMVUySnJTa3BXUmxwWFlUSkZlRk5ZWkdwU1dFSllWVzV3UjJWc1draE5WWFJxWWtVMWVGWkhlRzlXTURCNFUyeHNXRmRJUWtoVmVrWnJVakZPZFZSdGFGTk5NbWhXVmxjd01WRXlTWGhhU0U1aFUwZFNVMVJYZUV0WFJscEhZVWM1VjFZd2NIbFpNRnBEVmxaYWRGVnNVbGROUm5CNldUSjRhMlJXY0VkWGJXeFRZbXRHTTFadGVHcE5Wa1Y0V2toU1ZHRXlVbkZWYlhoTFZqRnNXR1JIUmxSU2JIQjVWMnRXYTFaR1dYZFhhMmhYWWxob2NsbHJaRVpsUjA1R1QxWmthR0V5T0hkWFZtTjRWakZKZUZOc2JHbFNhelZ2VkZkNFMxWXhaRmhOU0docFRWWktXRlp0ZUZkV1IwcEdUbFpXVlZadGFFUldNRnBoWkVkV1JrOVhhR2xTVjNkNlYxUkNWMkV4WkhSU1dHaFlZa2RvWVZac1duZFpWbkJZVFZWa1UySldTa2hXTWpGdlZHMUtSbUo2U2xkTlYyZ3pWV3BHVW1WR1pIVlViR1JwWWtad1ZGZFhlR3RPUmxwSFYyNUdWV0pVYkZSVVZtUlRWMFpaZVUxVVFsVk5WWEI1Vkd4b2QxWnJNWFZWYmxwYVZteHdVRlZ0Y3pGWFZrWnpWbXhrYkdKR2NFWldNblJUVWpKTmVWUnVUbWxTUm5CWVdXeG9RMWRHVWxaWGJtUllZa2RTZWxadE1EVlhiRmwzVjJ0c1ZrMXVhSFpaYTFwUFUxWkdkRkpzY0ZkTk1VbDZWa1pTUjJOdFVYaGpSVnByVW14S1ZGWnJaRFJaVmxwWVRVaG9hVTFXYkROVVZXaHpXVlV3ZVdWR2JGZGlWRVpRVkd0YWMwNXNUbkpPVjNoWFlYcFdZVmRYZEd0a01WcEhVMnhhYWxOSFVsaFdibkJYVFRGc05sTnNaRk5OYTNCSVYydGtSMVV4U25KalNHeFlWak5vV0ZkV1ZYaFNNa3BKVTIxb1UxWkhlSFpXYlhoVFVqQXhWMVpzYUU5V00xSlpXV3hXVjA1V1drZFZhMlJZWVhwR1dWWlhkRzlXTURGSVZXeG9WazFXY0hKYVJXUkhVMGRLUjFwRk5VNWlWMDQxVm0xd1IyRXlVWGhVV0d4V1YwZDRWbGxVU205V1ZteFZVMjA1Vmxac2JETldiVEZIWVZVeFYyTklhRmRTZWtFeFZrY3hTMU5IVmtkaVJsWlhZbGRvVVZkV1pIcGxSMDUwVTJ0V1YySklRazlWYWtwdlVsWmtWMWR0UmxSTlJGWXdWVEowYzJGR1NuVlJiR2hhWWtad1IxcEVSbXRqYkd0NllVWk9UbUpGY0VwV1ZFb3dZekZhV0ZOc2FHeFNWR3hoV1d4b1UxUkdVbFZTYlhSWVVqRktTVmt3VlRWV01ERkZWbXh3VjFaNlJUQlpha3BMVWpGT2MySkdTbWxTYTNCWVYxWmtNR1JyTVVkalJtaHNVbXh3YzFWdGVIZGxiRnBJVFZoa1ZrMUVSa3BWVjNSM1ZqRktSbGR1UmxWV2JIQllWbXBHWVZkWFNrZFdiV3hwVm10d1YxWnJXbUZaVms1MFZWaG9XRmRIZUhOVmFrNVRWMFpTV0dSSVpGTk5WbFkxV2xWa01GWlhTbFpXYWxwV1ZtMW9jbFpxU2t0WFZsWnpZVVpvVjJKSVFrbFhWRWw0VlRGS2RGTnJaRlZpVjJoeldXdGFkMDB4V25STlZGSnBUVlpXTlZaR2FHOWhWazVHVGxab1dsWkZOVlJaTUZwVFZqRmtjMXBGT1dsU2JIQTJWakZvZDFZeFdrWk5WVlpUWVRKNGFGVXdhRU5UUmxwMFRWVmFiRlpzV2pGWk1GcDNZa2RGZUdOR1JsZGlWRVV3Vm1wS1UxWXhTblZWYld4VFlYcFdXVlpHVWt0aU1VNUhWMWhvV0dKVldtOVVWVkpYVTBaYVNFNVZPVmRTTUZZMVdWVm9RMVpyTVVkV1dHaFhZa1p3YUZsNlJtdGpiVkpJWkVVMVYwMHlaekZXYWtadlpERlplVkp1VGxoWFIxSlpXV3RrTkdGR1duTmFSemxvVW0xNFYxZHJWakJYUmtsNFYydHdXazFHY0ROWlZXUkdaV3hHV1dOR2FGZFNWWEI1Vmxod1IxUXhTbkpQVm1ScFVtczFjRlpxU205WFZscEhWV3QwYVdKV1dsaFhhMXByVjJzd2VXRklSbFZXTTA0MFZHeGFWbVZIUmtsVWJXaHBVbFJXU0ZaVVNURlJNVnAwVTI1V1VtSnVRbWhXYkZwM1pXeGFjVkp1WkZOV2JGb3dXa1ZrYzFZeFduUlBWRTVYVFZkUmQxbHFSbEpsVmtwelYyczFXRkpzY0ZSWFZ6QjRWVEZzVjJKR1ZsUmhlbFpQVm0weE1FNUdaSEpXYlhSWVVtdHNORll5ZEhkV01ERnhVbTVhV2xac2NHRmFWekZIVWxaa2MyRkdaRTVOUlhCT1ZqSjBVMU14VVhoVWEyUlZZbXR3YjFWdGRFdFhWbFp6VjI1a2EySkdjREJaTUZVMVlWVXhSVkp1Y0ZwaE1YQjJWa2Q0YTFKck5WbFNiRlpYVFRGS05sWkhlR0ZqYlZGNVVtdGFWV0pYYUZoWlZFazBaVlprV0dSSE9XbE5WMUo2VmpJMVUxWnNXa1pUYldoV1ltNUNTRlV3V25kU2JIQkdaRVpTVjJKRmIzZFhWM1JXVFZkR1dGSllaR2xOTTBKWVZGWmtVbVF4YkZoamVrWllVbXhLZWxsVldrOWhWa2w1WVVod1YxWkZTbWhhUkVwS1pVZEtTVlJ0UmxOU2EzQjZWMWQwWVZZd05VZFhibEpzVWxSc2IxbHJWbk5OTVd0M1ZtMTBXR0pWVmpSV01uaHZWMnhhVjJOSFJtRldla1pJVlcweFUxSXhaSFJoUlRWcFVsYzRlVlpxUm05a01VMTRWRzVTVjJKSFVuQlZhMXAzWTBaV2MyRkdUbXBOVm5CNFZrZDRUMVJyTVZkalJYQmFUVVphY2xsWGMzaFhSbFoxWTBab2FFMVlRbTlXYkZKTFV6Rk9TRkpyYUZOaVNFSndWVzEwZDFOV1duUk5WRkpYVFd4S1NWWlhkR0ZYUjBwWVpVVTVXbGRJUWxoV01GcGhVakZrZEU5V1drNVdia0pJVmtaYWIxUXhaRWhTYmtwVVlrZFNXRmx0TlVOVFJuQklaVWRHYW1KSVFrZFVNVnByVlRKS1ZXRjZSbGRTTTJob1ZsUkdhMUl4VGxsalIyaFRWakZLV2xadE1UUmtNazV6Vlc1S1dHRjZiSEZVVmxVeFpWWnNWbHBJVGxkU2EzQldWbTE0WVZZeVNsbGhSMmhXWld0d1UxcFZaRXRUVms1eldrZHNhR1ZzV2xaV2JURjNVVEZzVjFwR1pHcFNiSEJZV1cweFUxWXhVbGRXYms1UFZtNUNWMWxWYUd0WFIwcFdWMjVzV2sxR1NsQldNbk40VTBaV2NtVkdXazVTYkZWNFZtcEdZVk15VWtoU2EyUmhVbFJXVDFsc1pGSk5WbHB4VW0xR2FHSldXa2xXUm1oelZsWmtTR1ZHVmxkTlIxRXdXVEZhVm1ReFduSmtSM0JUWWtadmVGZFVRbTlVTWtwSFUyNVNiRkp0YUZsWlZFWkxWa1pzVlZOcmRGZGlSMUo0VlZkNGQyRkZNWFJoUmtaWVZteHdWMXBWWkZOV01VcDFWbTFHVTJKclNuWldSbVI2WkRKV1IxcEdWbE5pV0ZKVVZGWmtVMU5XV25Sa1NFNVlVakJ3V1ZsVmFFTldNa1p5VGxoYVZXSllhSEpXTUdSUFVtMVNTR1JGTldobGJGcExWbXhTUzAxSFNYaFdhMlJoVWxad1dWbHNVbk5YUm14WVkzcEdhMkpHU2xsYVZXaFBWMFpLVlZKc2NGZFNla1l6VmtjeFJtVlhValpTYkdoWFVsVndNbFpXVWt0U01WbDRWRzVHV0dKWGVGVlZha3B2WVVaYWRFMUlhRlpoZWtaSVdUQldiMVJzV2xoVmJrcFdZV3RLTTFVeWVHRlRSVEZaVkd4V2FWWllRalZXVkVwM1ZERmtSMWRZY0ZaaWExcFdXV3RrVTFWR1dYZFhhM1JxVFd0YVNWcFZXbE5WTWtweVUycEtWMDFYVVRCWlZFRXhVMFphZFZSc1pGaFNNbWhaVjFkMFZrMVhUbGRXYmtaU1ltMVNWRlJXWkRSbFZscDBaVWQwYUZKcmNIcFphMUpoVjJ4YVYxZFlaRmRpVkVaSFdsWmFWMlJYVGtkalIzaG9UVmhDVWxadE1IaE9SbGw1Vld4a1UySnNTbkJWYlhNeFYwWlNWVk50T1ZSU2JHdzBWakl4UjJGRk1VVldhMnhYVm5wV1VGbFhlRXRTTWs1R1QxWmFhV0pyU2xsV2ExcGhXVlphVjFSdVZtcFNWRlpQVm0weE0wMUdXbkZUVkVaVlRWZFNTVlV5ZEdGWFIwcElZVVpzV2xaRmNGUmFWM2h6VmpGa2RGSnRjRTVXVkZZMVYxWldZVmxXV1hsU2FscFhZV3R3V1ZscldtRmhSbHBWVW0xMFUyRjZSbGhXTWpFMFZUQXhSMk5HYkZoaVIxRjNWMVphUzFZeGNFZGFSbVJwVmxad1YxWkdaRFJaVmtsNFkwVmFWMkpGTldGV2JYUjNWMnhXV0U1Vk9WZE5hM0JJV1RCV05GbFdTa1pYYm5CYVRXNW9hRnBHV2xOak1WSnpXa1UxVTJKclNtaFdha28wVmpGWmVWVllhRmRYUjJoVlZqQmtOR014VlhkaFJVNVhUVlpLV0ZZeU1VZFdNVXAwWkVST1dHRXhXWGRXVkVwTFZtMU9SbHBHWkdsV1JWb3lWbTF3UW1ReVZsZGlNM0JwVW0xb1dGbHNWVEJOUm1SWlkwVjBWV0pXV2xoV1IzaHpZVlpKZWxGc1ZsWmlSbG96V2tSR1lWZEZOVmxhUjNCT1lrWndTVmRYZEdGaE1XeFhVMnRrVkdKcmNHRlphMXBoWVVaU1ZsZHVUbXBpVlZwSFZERmtiMVl4V2taWFdHaFhWbTFOZUZsVVJtdGtSa3BaWWtaV1YxSldjR2hXUmxwclZURk9SMWRZWkdGU2JWSlZWbTB4VTAxR2JGWmFTRTVYVFVSQ05WZHVjRXRXTURGWVZXcE9WbVZyY0ZOYVZscFRZMjFHUjFWdGFFNWlWMmhUVm0xd1ExWXhiRmhUV0doWVltdGFWbGxzVW5OVU1XeHlXa1JTV0Zac1NsaFpWVlUxWVVkR05sSnViRnBoTVVwWVZqSnplRk5IUmtaVmJIQlhZa2hDVFZaSE1IaFRNVTVZVW10a2FsSnRVbkJXYlhSWFRURlplV1JIY0d4U2EydzFWbGQwYjFaSFJYbGxSbHBhWWtkUk1GWkVSbk5rUjFKR1pFVTFUbFl4U2xwWGExWnJaREZSZUZkWVpFOVdiWGhYV1d4b2IyUnNiSEpYYXpsVFRXczFTVlF4V25kaFZrbDRVbGhrV0dKSFVUQlpla3BQVmpGU2RWWnRSbE5OTUVwVlZrWldiMUV4VG5OWGExWlRZbFJzVkZSWGRHRlRSbGw0WVVoa2FGSnJjRnBXVjNoclYyeGFSbU5HVW1GV00yaDZWRzE0UzJOck9WZGFSMnhUWWtjNU5GWnNXbXBsUjAxNFZsaG9XRmRJUW05VmJHUlRWMVphZEdWSVpHcGlSa3A1VmpKek5XRnJNVlpPV0d4YVZsZFNlbFpyV2t0V1ZscHpWMnhrYVZkSGFHOVdXSEJMVlcxV1NGTnJiRlJpU0VKeldXdGFkMlF4WkZoa1JtUlVUVlp3V0ZkcldsZFdWMFYzVGxaYVZtSllhRE5WTW5oaFYwVXhWbHBHWkU1U1JWcFpWMVJDYjJReFduTlhXSEJvVWpCYWFGWnRlSGRWUm5CSFYyeGthazFZUWtoV1IzaHJZVmRGZDJORldsZGlSMmd6VlZSS1NtVkdUbGxoUmxwcFlrVndWbGRYZEdGa01rNXpWbTVHVldKVWJIRlZiWGgzWld4YWRFNVhkR2hOYTNCSVdUQmFZVll4U1hwVmJXaGFWbXhXTkZVd1ZUVldWbEp6WTBkb1RsWllRbHBXYlhoVFVqRk9kRlpzYUZkaE1uaHhWVzE0ZDFReFduUmxTR1JYVm0xU1ZsVlhNVEJXUlRGV1kwUkNWazF1VW1oV2FrcExWMGRHUjJGR1ZsZFNXRUl5Vm10V1lWbFdaRWhWYTJoclVqTkNUMWxZY0VaTlJscHlXa1JTV2xac2NEQlZNalZMVmtkS2NsTnNaRnBpVkZaRVdsZDRkMVpzWkhWVWJHUk9WMFZLUjFac1kzaE5SMFpYVjJ4a2FVMHlVbGxXYWs1VFpHeGFSVk5yWkZkaGVrWmFWbTE0UzJGWFNsZFRiV2hZVm14S1RGWkhjM2hXTWtWNllVZEdVMVl4U2xwV1YzQkhXVlpPYzFkWWJFNVdlbXh2Vm0xNGMwNXNiRlpWYlVaWVVteHNObFZYZERSWlZrcEdZMFpDVmsxR2NGQlpNakZIVWpGR2MyRkdUbGRpYTBsNVZtMHdlR1F4VVhsVFdHUk9WMFUxY0ZWdE1XOVVNVmwzVmxSR2FsWnNTbGxhUldoUFZERmFkR1JFVGxwV1ZscFFXVlZhWVdOdFNqWlRiSEJvVFcxb01sWnFTalJaVjFKSFZteFdVbUpWV2xSYVYzUmhVMVprY2xadGRGUk5WVFZZVmxjMVUyRldTbFZXYmtKYVZrVktNbHBYZUZwbFJuQkZVVzFvYUdWc1dscFdhMlEwWWpGVmVWTnJhR2hUUlRWWFZGVmFkMDB4YkhGU2JrNXFUVmhDUmxaWE1UUmhWa2w2WVVSU1YxWkZhM2haVkVwSFl6Rk9XVnBIY0ZOV00yaFhWa1phYTJJeFRrZGlSbHBZWWtoQ2MxbHNWbUZTYkZWNVpVaGtWMDFzV25sV01uQmhWMFprU1ZGcmVGWk5ha1pZVmpCYVUyTnRTa2RUYld4WFRUSm9WbFp0TVhkVU1rbDRVMWhvWVZKdFVsbFpiR2hUVlVaV2RHTjZSbXhpUmxZMVdrVmpOV0ZHV25KT1ZXUlZZa1p3V0ZacVNrdFNNazVHWlVkR1UxSldjRFpYVkVvMFdWZFNWMVZ1VGxWaVIxSlBWVzAxUTFsV1dYbGxSbVJYVFd4R05GWnNhRzlXUm1SSVpVaE9WazFIYUVSWFZscHpWMGRTU1ZwSGNGZGlSVmt3Vm0wd01XRXhVWGhYV0dSWFlXeHdWMVpxVG05U1JscElaVVp3YkdKVldrbFpWVnByWVVkRmVHTkdiRmRXTTBKSVdWUkdTbVZXVG5KaVJscG9aV3hhV1ZkWGRHRmtNVnBYV2taa1ZtRXdOVmhVVjNoTFpXeHNWVlJ0T1ZkTlYxSkpXVlZvUzFadFNsbFVhbEpWWWtad2FGcEZWVEZXTVZKelYyMXNWMWRGU21GV01WcFhXVlpaZUZwSVNrNVdiSEJRVmpCYVlWbFdiSE5oUnpsV1VteHNORmRyVmpCVk1rcEhZMFJDV2xaV2NISldSM040WkVkR1JrMVdaR2xTTVVZelYxWlNTMVJ0VmxkVmJHeG9VbXhhY0ZWdE5VTlhSbVJZVFZSQ1ZFMXJOVWhXYlRWUFdWWktSMU5zVWxwaE1sRXdWakJhYTJOc1ZuTlViR1JUVFVoQ1NGZFVRbGRqTVdSMFVsaHNhRkpyU21GV2JYaFhUa1p3UjFkclpHdFdia0pJV1RCa2IxUnRSalpSYWxKWFRWWktTRmxVUmtwbFJuQkdZVVprYUUxdWFGcFhWM2hyWWpKT1IxZHVSbFZpVkd4UVdXdGtVMWRXYTNkV2FrSm9UVVJHZVZSc1ZuTldhekYxVlc1YVYxWldjSEpWYlhoclpFVTVWMXBIYUdobGJGbDVWbXRhYTA1SFRYaGFSVnBPVm0xNFZsbHNhRU5VTVd4VlUycE9UbFp0VWxaVlZ6QTFWV3N4Y2xkc2FGWk5ia0pvV1ZaYVQxTkhSa2hTYkdScFZrVmFWRlpHVm1Ga01VNUdUVlphWVZJelVsUlVWV2hEVXpGYWNsa3phR3BOVmtvd1ZUSTFTMVpIUm5KT1ZteFhZV3MxVkZreFdsTmpNWEJHVDFab1UyRXpRalpYVmxaclRrWmFSMU51VmxKaWJIQlpWbXBPYjJOc1VuSmFSbVJxVFd0d1NsVnRlRk5oVjBwWFUyNW9WMVl6UWtSYVJFWlBWakZXV1dGSGFGTldNVXAyVmxjeE5HTXdOWE5pUmxwV1lUTlNXVmxyV25aTmJGWjBUbGhrV0dKV1dubFpNRll3V1ZaYWRGVnNRbFpOVm5CSVdrVmtTMUl4VW5SbFIyeFlVakpPTTFadGNFZFpWbXhZVWxoa1QxWlhhRmRaYlhoTFZrWnNkR1ZGZEdwU2JGWXpWbXhTUjFZeFduTmpTSEJYVFc1UmQxbFVRWGhYUjFaSllrWmthVlpHV2xGV2JGSkhWMjFSZUZwSVRtbFNNRnBZVm0xNGRtVnNXbk5WYTJSVVlsWmFXVlp0ZEhOaGJFcHpZMFU1VjJKWWFETldiRnByVmxaR2RHUkdVazVXV0VGM1ZsUktNRmxXV1hsVGJHaG9VbTFvVmxaclZuZGtWbkJYVjJ4d2JGWlVWbHBXTWpFd1ZHMUZlbEZxVmxoaE1WcG9WbFJLUjFOR1duVlZiRnBwVWpOb1dWZFhlRk5TYXpGSFdrWmtXR0pIVWxoVVZtUlRUVVp3UmxwSE9WZE5SRVpLVlZkNGMxWXlTa2hWV0dSYVZrVmFXRmw2Um1GWFYwcElZVVpPVTJFelFscFdiR04zWlVaUmQwNVZaRmhoTVhCWldXMHhVMWRXVm5OVmEyUlhUVlp3U1ZSV1l6VldhekZ5VjFSS1YySkdTa1JXYlRGWFkyeE9jMUZzY0ZkU1ZuQlJWMnRXWVZsWFRYaGFTRTVZWWxkNGIxUlZhRU5OTVZweldrUlNhRTFFVmtoVk1qVlBZVlpLZEZWdGFGWmhNWEJNVm14YWMyTnNXblZhUmxKWFlsaG9OVmRXVmxaT1ZsbDRVMjVPYWxKdGFGZFVWM0JYWTJ4WmVVMVZXbXhTYlZJeFdUQmFZV0ZXU1hoVGEyeFhZV3RLY2xacVJrOVdNWEJKVlcxb1UwMXVhRmxXUmxKTFltc3hjMWRZYUdGVFIxSlZWRmQ0UjA1V1draGtSemxYVWpCV05WbFZXa2RXTURGSFYyMW9XbUZyV21oWk1WcFRaRVU1Vms1WGJGTk5NbWhoVm10YVlXSXhVWGxTYmtwT1YwVndjRlZyV21GWlZsSldXa2M1VTFKdGVGaFdNblF3VkRKS1ZtTkZjRnBXVm5BelZtcEtTMVl4U2xsYVJtaG9UV3MwTUZaWGNFdFZNVTVIVkc1S2FWSnNXbkJXYWs1dlZVWmtXRTFVUWxSTlJFSTBWMnRhYjJFeFNYcFJiRUpYWVd0RmVGWXhXbGRrUjFaSVQxZHNVMkY2VmtsWFZFSnFUbFprZEZOcmFGWldSVXBvVm1wT2IyVnNhM2hYYXpsclZtNUNTVmt3V2s5VWJFNUdVMnQwVjJFeFNraFpha1pLWlZaS2NscEdhRmhUUlVwMlZsZDBWMlF4YkZkWGJsWnFVbGRTYzFsclpETk5iRlY1WkVoa2FWSnNiRE5VYkZaM1ZteGFObEp1Y0ZkV1JYQllXa1ZrVjFKV1ZuTmhSbVJwVTBWS05WWnJaREJoTVZWNVZXdGtWR0pzV2xkWmJHUTBWbFpXYzFWc1pHdE5WbkJJVjFod1IxVnJNWE5TYWxKYVlUSm9URll5TVZkak1XUjFVbXhrYUdFd2NHOVdha1poWkRGYWRGSnJhRk5pUjFKUFZteGtNMDFXWkhOV2JUbHJUVmRTTUZWdE5VdFhSMHBIVTIxR1ZWWlhVbFJXUlZwV1pERmFWVlpzWkU1V2JrRjNWMVpXWVdFeFVuSk5XRkpoVWtaYVdGbHNVa1prTVd4VlUyczFiRlpzU2xwWmExcFRWMFpKZVdGR2FGaFdla1YzVlhwS1QxSXhXblZXYlhCVVVsUldlVlp0TVRSWlZrNUhWMnRvVGxkSFVtOVphMVozVjJ4YVdHVkhSbHBXYTNCWVdUQlNUMVl3TVVkalIyaGhVbGRTV0ZWdGVGTmpNWEJJWVVkb1RrMUZjRTlXYWtvd1ZqRnNWMkpHWkZSaWF6Vm9WVEJXZDFaV2JGVlViVGxYVm14YWVsWXlOV3RXYkVwMFZXeHNZVlpXY0hKV1IzaEtaREpPUm1KR1drNWliV2h2Vm0xMGExTXhXbGhUYTJSaFVteGFXRlZzVm5kWFZtUnlXa1JTVlUxck5WaFZiVFZYVmxkR05sWnJPVmRpUmxvelZtcEdZVkl4V25SalJUVlhZa1Z3U1ZadGVHOWpNa1owVm01S1QxWnRhRlpXYlhoM1RURndXR1ZHY0d4V01WcEhWMnRhYTFSc1pFWlRhM0JZVmpOU2NsbDZSbHBsVms1eVYyMXdVMVl6YUZsV2JURTBaREZXUjJKSVJsUmlSMUpVVkZaYVlXVnNiRlpXVkVaWFRWZFNTVmxWWXpWV01rcFZWbXBPVm1GcldreFZha3BMVWpGa2MyRkhhR3hpV0dnMlZteGtOR0l4VlhoVGJHUmhVMFZ3V0ZsdE1WTmpSbFowWlVoa1dGSnNWalZVYkdRd1YwZEtWbFpxVWxkTmFsWXpWbTB4UzFOR1ZuSmhSbVJPVWpGS1dWWlhNSGhVTVVsNFZXNU9WV0Y2Vm5CWmJHUnFaVlphZEdWR1RsTk5WbXcwVm14b2MxWlhSWGxoUmxaYVZrVmFNMWt3V2xkak1XUjBVbTFzVGxadVFqUldhMk4zVGxaYVJrMVdaRmhpYlhoWldWUktiMVZHYkZoak0yaFhZWHBXV0ZkcldtdFdNbFp6VjJ0V1dGWnNjR2hWZWtaclUwWmFjbGRzYUdsVFJVcFpWMWQ0WVZKdFVYaFhiRlpVWVd4S1ZWUldWVEZUVmxWNVpFaE9WMVl3Y0VoVk1uaHZWakpLV1ZWcVRsVldSVnB5VmpCa1UxSXhjRWhqUlRWWFYwVktZVlpzWTNoT1IwbDVVMnRrVkdKSGVGTlphMXBMVmpGc1dHUklXazVTYmtKWldsVmFZV0pHU25OalNIQlhVbnBHTTFaVVFYaFRWa1p5WVVab1YwMHhTbGxXYlhCTFVqRkplRnBHYkdwU01taFVWV3hvUTJGR1duUk9XR1JUVFd4YWVsbHJVbUZWTWtZMllrWm9XbUV4Y0doVVZscFhWMFV4V1ZSc1drNVdiWGN5VjFaV1YyRXhaRWRYYms1cVUwVndWbGxVUm5kVlJtdzJVbXM1YW1KVldrbFphMXBUVlRGYVIxZHNaRmRpVkVVd1YxWmFUbVZXVmxsaFIyeFVVbGhDV1ZkWE1YcE5WbHBIVjI1R1VtSlZXbGxXYlRWRFZqRnNWbHBGWkdoU2Eyd3pXVEJhYzFsV1dsaGhSRTVYWWxoT05GWnFSbXRqTVZaelkwVTFVMDFWY0U1V2JGSkRWbXMxVjFwR1pGUmliRXB2VlcweFUxUXhVbGhOVnpsVlZteHdlbGRyVWtOaFJURnlUVlJXVjFKdGFIWldiR1JMVWpKT1IxcEdjR2xYUmtwTlYxUkNZVll5VWxoVWEyeFZZbGhvVkZsc2FHOVhWbGw1WkVaT1ZrMVdjRWxWTW5SaFlXeEtXR1ZIUmxwV1JYQjJWbFZhYzFZeFdsbGhSM1JYWVRGdmVGWXlkR0ZrTWtaR1RWWmthbEpHY0ZoV2FrNXZZMnhXY1ZKdGRGUlNiSEI1VmpJeGQxVXlSalpXYkZaWFVtMU5lRmxxUVRGak1XUnpWbXhPYVZJeFNsaFdSbVI2VFZaT1YxWlliR3RTZW14WFZXMTRkazFzV25SbFJYUlhUVlp3UjFrd1drTlpWa3BHVjJzNVlWWldjRmhaTVZwSFl6SkdTR0pHVGs1V1dFSmhWbXBHYTAxR1dYaFVXR2hZVjBkU1QxWXdWbmRqVmxaeVZtdDBXRkp0ZUZaVmJURkhZVVpLYzFkc2JHRlNWa3BFVm10YVlXTnRUa2xpUmxacFVqRktObFp0Y0VkaE1VbDRWRzVXYWxKdGFGaFVWRXB2VjFaYVdXTkZkRlJpVmxwSVZqSjRjMkZzU25KT1ZtaGhWbnBGTUZaR1dtRlNNVnAwWkVVMVRsSkZXbGxXYlRBeFV6RnNWMVJyV2s5WFJWcFdWbTE0Vm1WR1duRlNiVVpZVWxSV1YxWkhNVzlXTWtWNlVXeHdXR0pHV2xoWFZscHJZekZrZFZWc1dsZFNWWEJZVmtaak1XSXhVa2RXV0dSaFVsaFNWVlp0ZUV0bGJGcFlaVWQwVjAxclZqWlZWbWgzVmpBeFdGVllaRmRoYTNCUFdsVmFUMk15UmtkVWJXeFRUVzFvTmxac1pEUmlNVVY0VjJ0a1YySnJXbFZaVjNoTFl6RnNjbGRzWkU5U2JIQXdXbFZWTldGSFNrWmlSRTVhVFVaYWNsWXlNVVpsUm1SellVWndWMVp1UW1oWGJHTjRVakZLZEZWclpGaGlWMmhQV1d0V2RrMXNXWGhoU0dSVFRWWkdORll5TlU5V01rcHpWMnhPV21KSFVUQldhMXBoWTFaU2RFOVdUazVXTVVwWlZtcEplRTFHVVhoVGJrcFBWMGhDVjFSWE5WTmtiR3hYVjJzNVUyRjZWbGhXYlhocllWWktkVkZyTVZoaE1VcElXWHBLVDJNeVNrVlhiR1JwVjBWS1dWWkdWbUZrTVdSeldraE9WMkpIVW5KVVZscFhUa1pWZUdGSVRtbFNhelZLVlZkNGExWldXbk5qUjJoWFlURndlVnBFUm5kU2JWSkhWRzFzVjFkRlNrbFdiVEIzWlVkSmVGZFlaRTVUUjNodlZXeG9iMWRHV25GVWJFNXFZa2QzTWxVeWN6RmlSa3B6VTI1d1YwMXVhR2haVm1SR1pESk9TVnBHWkZkbGJGbDZWMWh3UzFZeFNYbFRhMlJoVWpCYVZGVnRkSGRXYkdSWVpFWmthMDFWTlZoWmEyaExZVVpLVldKSE9WZGlSa3BJVkZaYVYxZEZOVmhrUm1ocFZsWlpNRlpxU1RGa01WcDBVMnRvVm1FeWFGaFVWV1JUVjBaV2RFMVZPVk5OVmtwNlZrZHpNV0ZYU2xoWk0yeFhZV3RhY2xwRVJrNWxWbFpaWWtaV2FFMXRhRlpYVmxKSFpESk9SMVp1VGxoaVZWcHdWRlphZDJWR1draE5SRlpWWWxWd1NGWXlOWE5YUjBWNVlVWkNXbFl6VGpSWk1qRkxVbFphYzJORk5WTk5iV2hHVmpGYVlWbFdUWGhhUldoWFlURndXVmxyYUVOWFJteHpWMnRhYTAxWFVubFhWRTV2VlRBeGMxTnJiRlpOYmxKNlZteGtTMWRIVmtaUFZscHBVbTVDV0ZaR1dtRldiVlpXVGxac1ZXSllRbkJXYkZKWFUwWmFSVkZ0T1dsTmExcFlWVEkxVjFWdFNraGxSbWhhWVRGd2FGbFZXbHBsUm1SMFpFWm9VMVpGV2t0WFZsWmhZVEZaZVZKWWNGSmhiRnBZVm1wT2IyTldVbk5hUldScVRWZFNlbFp0ZUU5aFIwVjNZMFpvV0dKSFVYZGFSRVpyVWpKT1JsZHNhR2hOYkVwNVZsZHdRMWxXVGtkWGJHaE9WMGRTV0ZsWWNFZE5SbHBZWTBWa1YwMVdjRWRXTWpWaFYyMVdjbGRyZUZkTlJuQk1XWHBLUjFOSFZrZFViR2hUVmxoQ1YxWnRlR3RrTVUxM1RsVm9WMkpyTlZoV01HUnZWMFpzY2xaVVJtcFdiRnA0VlZjMWExVXdNVmhsU0d4WFlsaG9jbGxWV2t0ak1rcEZWMnh3VjFac2JETldiVEI0VW0xV1YxWnVWbXBTYmtKeldWUkdkMVZXV25STlZGSlhUV3hLV0ZWdE5WTmhWa3B5VGxab1ZWWkZjSFpWTUZwYVpVWmtkRkp0YUU1U1JscEpWbXRqTVZReFdraFNXR3hvVTBWS1YxUlZXbFpsUmxwelYyMUdhazFYVW5sYVJXUXdWR3haZW1GRVZsZGlWRUY0VmtSR1ZtVkdaRmxhUm1ocFVqTm9iMVp0ZUdGWlZUQjRWMnhXVTJFelFuTldha1poVTJ4cmQxZHRSbFZpUm5CNldUQmFWMWRHV2taVGJrcFdaV3RhVEZwRldrOWpiR1J6V2tkc1YwMXRhRnBXYTFwVFV6SkplRlZyWkZoaVIyaHlWV3BPVTJOV1VsaGpNMmhQVm14V05GbFZhRTloUjBwR1RsVmtWazFxVmtSV2JURkxVMFpXVlZGc1dtbFhSMmcyVm0xd1IyUXhTbGRXYmxKclVqSjRWRmx0ZEV0VE1WbDRXa1JDYVUxV1JqVlZiWGhoVkd4a1IxZHNUbHBpVkVaVVYxWmFjMVpXVG5KT1ZUVlhZa2hDTmxZeWRGZGhNV1JIVTFob1dHRXlVbUZVVlZwM1ZVWmFWVkZZYUd0V01GcEdWako0YjFZd01IZFRhekZZWVRGS1RGWkVSazlTTVZKMVUyeG9hVll6YUZWV2JURTBaREpTYzFkdVVtcFNWR3h3VkZWU1IyVnNiSEpYYlRsVllrZFNSMVJzYUVkV1ZsbDZWVzV3VlZaRldtaFdNRlV4Vm14U2RHRkdaR2hOYW1nMVZqRmtNRll4YkZkYVNFNVlZbXhLVjFaclZrdGhSbFoxWTBWa1ZGSnVRa2RYYTFZd1ZrWmFjMU51Y0ZkV00yaHlWbXBLUm1Wc1JsbGpSbVJPVmpGR00xWnRjRXRVYlZaSFZHNU9hRkpyTlhCVmFrcHZaV3hhVlZGdFJtdE5WbkJJVm0wMVIxWkhSbk5UYms1YVlUSlJNRnBWV2xabFZUVllaRWRvYVZKWGQzcFhWRUpYWXpGYVZrMVdaRmhoTTJoWVZtMTRkMVl4Y0ZkWGJFNXJWbTVDU0ZaWGN6RldNa1Y1WkROd1YySllRa3hVYTJSR1pVWmtXV0pHVW1oTldFSldWMWQwYTFVeFVYaGlSbFpWWVRCd2NsUldXbmROUm5CR1YyMTBXR0pHY0hsV01qVnpXVlpLVjFkdWNGZFdSWEJJVkcxNFlXUldSbk5hUjJ4VFRXMW9WbFl4YUhkU01rMTVWRmhvV0dKcmNISlZha28wVkRGYWRHVkdjRTVpUm5CWldsVmtkMVF4V25KTlZFNVZWbXhhZGxsVVNsZGpiR1J6V2tad1YxSllRbFZYYkdRMFl6QTFjMU51U2xCV2JWSndWVzE0ZG1WR1dsZFpNMmhxVFZaV05GWXhhSGRoUmtwWVZXeHNWMkpZYUROWk1uaFRZMnhrY2s5WGNFNVdWRlkxVjFaV2EyTXhXa2RUYkZaWFlrWndXRmxzYUc5aFJsWTJVMnhLYkZJd2NFcFZNbmhyWVZkR05sWnNWbGRpV0VKRVYxWmFhMVl5VGtkWGJHUnBZbFpLV0ZaR1dsZGpNRFZYWTBaYWFGTkhVbGhaV0hCSFYwWlplV1ZHVGxoaGVrWkpWbGQwTkZadFNsVlNhM2hXWWxob2FGcEZaRWRTTVhCR1RsVTFhVll5YUU5V2JURTBZVEF4U0ZKWWJGVlhSM2hXVmpCa2IxWnNiSEpYYm1SWFRWZDRNRnBGVmpCaGJFcHpWMjV3V0dFeFNsUldWRXBMVTBkV1IyRkdhR2hOVlhCVlZtMTBhMU14U25SVWExcHBVbTVDYjFSWE1XOVZWbHAwWkVkR1dsWnNiRFJXUnpWWFdWWktkVkZ0T1ZWV00wNHpXbFZhYTFaV1NuUmtSazVPVmpGS1NsWnRNVEJqTVdSSVUyeG9hRk5GU2xoWlYzTXhaR3hTZEdWSGRGaFNNRFZIVmtkNFlWUnRSalpXYTNCWFZrVnZkMWRXWkVkV01VNXpXa1pvYVZaSGVGbFhWbVI2VFZkU2MxVnNhR3hTYlZKeFdXdG9RMU5zV2toTldHUlZZbFZXTlZwSWNFZFhSbHBHVTI1YVZsWkZjRWhXYWtaUFkxWmtkR0pHVWxOTmJXaHZWbTB3ZDJWR1ZuSk5WV1JYVjBkNGMxVnNhRk5XVmxaeFVXNWtWR0pHY0VsVVZtaFBWbGRLVm1OSWJGWk5ia0pRVmpCYVdtVnNWbk5oUm5Cc1lURndUVlpxUW1GVE1rMTVVbXRvYkZKck5WbFZiRlozVm14YWMxcElaRlJOUkZaSlZtMDFUMkZXVGtaWGJGWmFZbFJHVkZreFdsZGpWa1oxV2taT1RsWXphRFZXYlRFMFlUSkdSMU51VG1sU1JuQmhWbXhhV21ReFduUk5WVnBzVm14YU1Wa3dXbmRpUjBWNFkwWkdWMkpVUlRCV2FrcFRWakZLZFZWdGJGTmhlbFo2VjFkNGIySnRWa2RYYms1WFlsVmFWbFJYZEdGTlJscElaRWRHYUUxVmNIcFdNalZMVm0xS1ZWWnJVbGROVm5Cb1drVlZlRlpXVm5OVGF6VlhZbXRKTUZac1VrdE5SVEZJVWxob1ZHSnJOWEZWYkdSVFYwWlNXRTVXVGxWU2JIQkhWakp6TlZVeVNraFZibXhWVFZad00xbFdXa3RqTWtwRlZHeG9WMDB4U25sV1dIQkhXVmROZUZWdVZsWmlSVXBZV1d0b1ExVkdXa2RXYlVaYVZsUkdlbFpzYUhOaGJFcFdUbGhHV21KR2NHaFdNRnBoVTBVMVYxUnRiRk5oTW5kNlZtcEtlazVXWkhSVGEyaG9VMFphYUZac1duZFpWbkJGVW14a2FtSlZOVWxhVlZwUFZqRktWMk5IUmxkaVJrcE1WRlZrVG1WR1pIVlZiRkpwWVROQ1ZsZFhNVEJUTVZsNFlrWm9hMU5HY0U5VmJYaExWMFpaZVUxVVFtaGhla1pYV1RCU1IxWXdNWFZoUldoWFlsaE9ORmt5Y3pGV1ZsSnpWMnMxVGsxRmNGSldiR1IzVWpGVmVWVnJaRlZpYXpWWldXeG9VMVpHVWxWVGJUbHJUVlp3TUZwVldtdGhNREZ6VTI1d1YwMXVhRmhXYkdSR1pVZE9TVkZzVmxkV01EQjRWa2QwWVdOdFVYaFhibEpRVm0xU1QxbFVUa05XTVZwWVRWUkNUbEpzY0RCVk1uaHpWVzFLZFZGdFJsVldWbkF6V1RKNFlXTldTblZhUms1b1pXMTRXbGRVUW10ak1WcEhVMnhhYWxKWVVsaFpWRVpMVTBac2NWSnVUbGhTYTNBeFZsZDRUMkZXU1hsaFJ6bFhWa1ZLY2xaVVJtRmpNVlp6WVVVMVYyRjZWbEJYVjNSaFdWWk9SMWRyYUU1WFIxSnZXV3RXZDFkc1draGpSMFpYWWxWd1dsWkdhRzlYYkZwelkwZG9WMDFXY0ZoYVJscFRZekpPU0dKR1RtbFRSVXBQVm1wR2EyUXhTWGhYYmxKWFltczFWVmxyWkc5VlZscHpZVVpPVlUxV1duaFdSekExVlRKS1IyTkdhRmROYWtWM1dWVlZlRlpyTlZsalJtUlRUVEZLZVZadGRHdFNNazE0V2toU2FGSnRVbkJXTUdSdlZGWmFSMXBFVWxkaVZsb3dWVEowYjJGc1NYcFJiRkpYVFVaVmQxUlhlR0ZYUlRGWlkwVTFWMDFHY0ZsV2FrbzBZekZhZEZOdVNrOVdNRnBoV1ZSR2QyRkdXa1pYYms1cVZtdHdlbFl5TVRSaFZrcFpVV3h3VjFKRldsaFVWVnBUWXpGT1dXTkhhRk5XYmtKWlZtMHhOR1F5VG5OaVJsWlRZWHBzY1ZSV1ZuZFhiR1J5VjJzNWFGWnNjRWhXTW5oaFZqSktXV0ZHWkZWV2JIQk1WV3BLVDFKdFJrWk9WbVJYVWpOb1VsWnRNVFJWTVZsNFdraE9hRTB5VW1oVmExcExWMVpXZEdSSVpGZGlSbkJaV1RCVk5WWXdNVVZTYWtaYVZsZG9TRmRXV2t0U2JVNUdaRWRHVjJKSVFsVlhhMXBoVmpKTmVHTkZhR2xTTW5oWVZGY3hiazFXV25STlNHaHJUVlZzTkZscldtRlVNV1JHVGxoR1ZtSkdjRE5XYlhoaFkyeGFkRkp0YkU1V2JIQTBWbFphVTFJeFVuTlRibEpXWW0xNFlWWnNaRzlqYkZwelYyeHdhMDFyTlVoWmExcHJWakpXYzFkc1JsZE5WbkJvVlhwR1lXTnJOVmRpUm1ScFUwVktkMVp0ZEZkWlZrNVhWMjVTYWxKVmNGQldiVEZUVjBaYVdFNVdUbWhTYTNBd1ZsZHpOVlpXV25OWGFrNVZZbGhvYUZreFdrZGpNVkp6VldzMVYyRXhhM2hXYlhocVRWWlZlRmRyWkdGU1YyaHpWVEJXZDFZeFVsWlhiVVpWVW0xNFYxWXllSGRoTURGWFkwWndXbFpYVVhkV2FrcEhUbXhLVlZGc1pHaE5hekUwVmxod1IxbFdUa2RYYms1b1VteGFjRmxzV2t0V2JHUnpXa2h3VGxack5VaFdNblJ2Vkd4YVdWVnNhRnBpUm5CTVZURmFkMVpzY0VsVWJHUk9WbTVDWVZaV1pIZFRNVmw1VTJ0a1ZHSkZTbGRaYkZKSFV6RndSVk5yY0d4aVNFSkpXV3RhVDFZeVJYcFJiRlpYWWxSR00xVjZSbFpsUmxKWllVWmthV0V4Y0ZWWFYzUnZVVEZSZUZadVVrNVdhelZZV1d0YVYwNVdjRlphUkVKb1VsUkdSbFZ0TlhkV2F6RjFWVzFvVjAxcVJraFpNakZQVTFaT2MyTkdaRTVOYldoTlZqSjBVMUl5UlhsVWJHUmhVMFUxY1ZWc1VsZFVNV3h5Vm01T1QxWnNjSHBXYlRGSFZsVXhjbGRxUWxkU00xSm9XVmR6ZDJWc1JuTlZiSEJZVTBWS1dWZFVRbUZaVjAxNVVtdGtWV0pZUWs5V2FrNXZUbXhhZEUxVVFrNVNNRnBYVkZaYWExWXlSbk5qUm1SYVlUSlNUMVJXV2xkT2JFWlpZVVpTVTAxV2NFaFdiVEUwV1ZaWmVWTnNaRlJpYlhoWVZtdFdkazFHV2tWU2EzUnJVbXhLZVZscldsZGhWbHBYWTBaV1YySllRa3haYWtaclZqRndTVlJzYUdsWFJrcFdWa1prZWsxV1RrZFdibEpzVW5wc1ZsUldXbmROVmxaWVRsVk9WMDFyY0VoWk1GSlBXVlphVjJOSVNsZGhhMXBZV1RJeFUxSXhaSEpPVjJ4VFZucHJlbFp0ZUZOU01rbDVWVmhvV0dFeVVsbFpWM2gzVjBac1ZWSnRSbGhXYlhnd1ZGVlNWMVJyTVZkU2FsSlhZbFJXY2xaRVJscGtNVnB4VjJ4YVYwMHlhRVZYVmxKTFZqSk9WMUpzVmxkaVJrcHdXV3hvYjA1V1pGVlJiRnBQVmxSQ05GVlhlRmRVYkVvMlZtc3hWMVpGY0RaVVZFSjNUbGRGZWxGc1FtdGxha0UxVTI1c2NtTkZPVE5RVkRCdVMxTnJOeWNwS1RzPScpKTs='));'));