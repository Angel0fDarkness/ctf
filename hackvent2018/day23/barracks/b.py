#!/usr/bin/env python3
# muffinx_obsfucator
import base64;ZlIwanMWCA=exec;khYXsIjIlW=base64.b64decode;ZlIwanMWCA(khYXsIjIlW('IeocHSQtfj=exec;QGIJxSqGky=base64.b64decode;IeocHSQtfj(QGIJxSqGky('ckRmdmRKbmpzZD1leGVjO2xOUWVPTlh3SEY9YmFzZTY0LmI2NGRlY29kZTtyRGZ2ZEpuanNkKGxOUWVPTlh3SEYoJ1JscEZlbEZ3YzJGcmJUMWxlR1ZqTzA1UWEwRnlRVU5ZVm1NOVltRnpaVFkwTG1JMk5HUmxZMjlrWlR0R1drVjZVWEJ6WVd0dEtFNVFhMEZ5UVVOWVZtTW9KMU5WV2tkV01IQlZXbTFzYldKRU1XeGxSMVpxVHpKMGMxb3hXblJrTWpGMldXMDBPVmx0Um5wYVZGa3dURzFKTWs1SFVteFpNamxyV2xSMFNsSnJXbGhUYkZKdFlWZGFjMHRIZEhOYU1WcDBaREl4ZGxsdE5HOUtNVzk1VTJ0c1ZGSXdOWFpaVkVwUFkwWldWVTFYZUd4U01WcHhWSHBPUjFVeVRsZGlSVlpoWW10d1JGcEZXbXBQVm14MFVtNXdZVlpHYTNkVVJ6RktUV3MxU0ZWdGVGcE5hbXh5VjJ4U01HSnNiSEpoUld4YVRXMW9lVmRVU25OVmEzUkpVbXhPYWxadGVFWlhiVFZMVVRKU1Ixa3lPVXROVlRFMlZqSTFTMkZIU2xoVmFrcGhVbGROZUZaSE1VOVdWVEZZWlVkNFUwMVdjSGhXU0hCRFpERmFTRkpzWkZSaGEwcG9XV3hTUm1ReGEzaGFSWEJRVm0xNE1GVnROWGRaVmxwSFlUTmtWVko2Umt0VVYzTXhVMFpXZEdWR2NFNWhiWGg1VmpKNFUwMUdVa2hWYmxKclUwVmFhRlJYY0hKa01XeDBZek5vYkZKWVVrZFpNRnBUWVVaYWNtSXpaRmhpVkVJMFZGVmtUMWRHVGxoUFZYUk9WbTVDU1ZZeWRHRlVNa1p5VFZaYVQxSkZjR0ZaYTFwaFYwWnJkMWRyZEZOV1ZFWlpXbFZrTkZVd01WZGpTR2hYVTBoQ1JGbFVSbHBsUmtweldrWmthR1ZyV2xwV2JYaFRVakF4VjJKSVNsZFdSVXBSVm0weE5FMUdWblJPV0dSYVZteHdTRmxVVG10V1ZrbzJVbXQwVlZZelRYaFZNRnBYWkVkV1IyTkZOV2hpV0dnMVZtcEtORlV3TVVkWGJHUllWMGRvVlZsdE5VTldNVkpWVkd0T1RsSnNXbnBYYTJoUFZURmFXVlZyWkZoaE1YQnlWbGQ0WVdNeFpISk9WbVJPVm14Wk1GZHJXbXRUTVVweVRsVm9VRlpZVWs5V2FrNXZWMFphY1ZOcVFscFdiVkpKVlRKNFlWUXhXa2RqUm1oV1lsUkdWRmxWV2xabFJtUnlUMWR3VjFaRldscFhiRlpyVGtaVmQwMVdaR3BUUjJoWVZUQm9RMUV4VWxkV1ZFWlRUVmRTTVZadE1YZFZNREZIWTBaYVYySlVSWGRhUkVaelZqRmtjMkZGTlZkaVNFSlNWbTB3ZUU1Rk1VZFdibEpQVjBkU1lWWnRlSGRUUm14VlZHMTBWMVpyYnpKVmJYUXdWbFpaZWxSWWFGWk5SbkJZV2tWa1YxSXlUa1pPVjJocFYwZG5NVlp0Y0V0T1JsVjNUVlZvVTJFeVVsVlpiWFIzVjBac2MxWnRSbHBXYkVwV1ZWWlNSMVpWTVZoVmFrSmhVbGROTVZaclZYaFRWbFp5V2taV2FWSnJjRlZXYlhCTFV6SlNWMUp1VW1oU2JIQlBWbTAxUTFSV1duRlRhbEpYVFd4S1NGWXllRzlWUmxwWlZXczVWMkpZVW1GVVYzaGhWMFV4V1ZwR1RrNWhNWEEyVm10a01HSXlTa2RUYmtwVVlrZG9XRmxzVWtkV1JuQllaVWhPVDJKRk5YcFdSM2hyVmpGYVJsZHNjRmhpUmxweVZHdGFWbVF3TVZkYVIzQlVVakpvV1ZaVVFtOVJNVkpIWWtoR1UyRjZWbk5XYlhNeFRWWmFTRTFZWkZkU2EzQmFWVmMxYjFkR1dYcGhTRXBhWVd0R05GWnFSbXRrVms1MFVteFNVMWRGU2xOV2JUQjNaVVUxUmsxVlpGZGliRXBRVmpCa1UxbFdXblJsU0dSVVVtMTRWbFpITVRCV01WcHlZbnBLVm1KWVVYZFdiRnBhWld4U1dXRkdXazVTYmtKWlYydFdhMVl4U1hsVWExcFBWakpvY0ZZd1pHNU5WbHAwWTBWMFQxSnNWak5VVmxaclZqSkZlV0ZHV2xwaE1sRXdWakJhYzJSRk1WZFViWEJPVm01Q05sWnNaRFJoTVZweVRWWm9iRkp0YUZsWlZFWkxWa1phU0dWSFJsaFdiRnA1V1d0YWQxWXhXbk5pUkU1WVZteHdjbFY2Ums5V01VcDFWbTFzVTJKclNsQlhWbVF3V1ZVeGMxcElTbGhpVlZwaFZtMXpNVk5XVm5OaFNFNVdVbXh3V2xaWGN6VlhiRnBHVjJwT1YwMXVhR2hWYWtaclpFVTVXR0ZGTldoTldFSlpWbXRhVjJJeVJYbFNiRnBPVTBkNFYxbHJXbUZYUm14eVdrWk9WVTFXU2xoV01qVnJWMFpKZDJORmJGcE5SMUl6VmxSR2ExSXhUbk5hUm1ob1RWWndiMVpXVWt0U01rMTRZMFZhWVZKdGFHOVpXSEJYWWpGYWRFMVVVbGRpVmxwSVZqSjRiMVJzV2xoVmJHeFdZV3RhYUZWdGVGZGtSMUpGVld4YVRsSkZXWGRYVmxaV1pVWmtSMWRxV2xOV1JVcG9WV3RXZDFWR2NFWlhiRTVyVm14YU1GbFZXbE5WTWtwSlVXeHdWMkpIVWpOVmVrRjRVMFpXZFZSc1ZtbGhNWEJXVjFaU1MxVXhaRmRXYms1V1lUSlNXVmxyWkZObFZtUnlZVVU1VjFZd1dUSlZiWFJ6VmxVeFYxTnNRbGRpV0U0MFZtcEdhMlJXWkhOYVJrNVRWbFpaTUZadGNFTlpWbFY1Vkd4a1ZtSnJOVlJaYTJSVFZrWldjMVp1V214U2JIQmFXVEJXYTFaVk1YSk9XR3hWWVRKb2RsWnRlR3RUVmtaelZXeHdWMDB4U205WFZFWmhWbTFSZUdORlZsWmlSbkJVV1d0b1ExZFdXWGxrUnpsVlRXdGFlVlJXYUU5V1IwcEhWMjFHVjJKSFVrOVVWbHBoWTJ4d1JtUkdaRmRpU0VGM1YxWldZV1F4V1hoVGJGWlhZWHBHV1ZacVRrTlVSbFkyVTJzMWJGSnNjREZXYlhoTFlVVXdlV0ZHVWxkU2JWRXdWWHBLVTJNeFpIVlZhemxZVWpGS1ZWWkdWbE5STURWSFlraEthRkpYVWxoV2FrSlhUbXhhV0dONlZsZGlWWEJKVmxaU1ExWnJNVmRqUjJoV1RVZFNVRlZ0ZUZOa1IwcEhWRzFzVjJFelFrcFdiWGhUVTJzeFYxVllhR0ZUUlhCUFZUQmtORlpzV25KWGJVWlhUVlphTUZremNFZGhiRnAwWkVST1YySllRa1JXYWtaYVpVWk9jbUZHV2xkbGExbDZWbXBDWVZNeVRYbFRXSEJxVW0xb2NGVnROVU5YUmxwSFYyMUdWMDFzU2toVk1qVlBZVVpKZW1GR1VsWmlSbkF6VmtkNFlWZEhUa1prUjJ4T1ZtdHdTVmRYZEc5Vk1rcEhWR3RvVm1KcldtRlphMXBXWlVaU1ZsZHVUbGRpVlZwSVYydGFhMVJzV2xoa2VrWllZVEZhZGxkV1dtRlRSa3AxVTIxd1UxWXlhRmxXUmxaaFZqQTFSMWRZYUZoaWJWSlZWV3BDZDFJeFVuTldWRVpXVFd4YU1GcEZVbUZXTWtwSFUydG9WMkZyY0VkYVZWcFRWMWRLUjFSdGFFNWlWMmhZVm0xd1EyRXdOVWRhUldSWVltdHdXRmx0TVZOV01WWjBaVWRHV0ZKc2NGaFpWV1F3Vm14S2MyTkdjRlpXYkVwSVZqSjRZVkpyTlZaVmJHUlhWbXhaTUZaWGVHdFRNVXBYVm01U1UySkZOWEJXYWtwdlVteGFjbHBFVWxwV2JGWTFWa1pvYjFaSFNuTlhiRTVhWWtkUk1GWnNXbGRrUjFaSVVtczFhVkl4U2xsV2JURTBZVEpGZDAxWVRsUmlSMmhaV1ZSS2IxWkdiRlZTYXpsVVVqRmFTVlF4V21GaFYwcHlVMnhzVjJKVVJUQlpla1phWlVaV2RWVnJPVmROYm1oM1ZsZHdSMU50VVhoWGEyaHNVbTFTVDFWcVFsZE9WbFY1WlVkR2FHSkZjSHBXTW5oclZqSktkVkZyVWxWaE1YQjZWbXBHYTJOdFRraGtSVFZYVFZWdk1GWnRjRXRPUjFGNFdrVmtWRmRJUW05VmJGcGhWMVphY2xacmRHcGlSbGt5VlcweE1GWXdNVlpqUkVaWFlsaG9kbGxXV210U2JFNTFXa1pvVjAweFNsbFdNVnByVlRGWmVGcElUbWhTVkZaVlZXcEtiMVZXV2xoalJVNWFWbXMxV0ZZeWRHdGhSazVHVGxjNVdsZElRa1JVVkVaVFl6RmFjVkZzWkdobGExcEpWbXBLZDFReFpIUldia3BZWW0xNGFGWnNaRk5UUmxaeFVtNWtWRkl3Y0VoV1IzTXhWVEZLVjFacVZsZGlWRVV3VjFaa1NtVkdWbGxoUmxacFlYcFdWMWRXVWtka01rNVhWbGhrVjFaRldtRldiVEUwWld4YVdHUkhkRmROVlhBd1dsVm9jMWRIUlhoV1ZFWmFWak5PTkZWc1pFdFNNV1J6VjJ4a2JHRXhjRXBXYlRGM1V6RlplVlJ1VG1GU2JYaHhWVzB4YjFkR1VsVlNhM1JzVm14d1dWa3dWa3RpUmtweVlrUldWMUl6VW5KV2EyUkxVbXhrYzJGR1dtaE5WbkJOVmtaYVlWWXdOWE5UYmtwUVZqTkNiMXBYZUVwTlJscHpWMjA1YTAxV1ZqVlZiVFZMVjBkS2NsZHNaRlZXVjFKVFZGVmFZVlpzWkhSU2JHUk9WMFZLUzFaclkzaGtNVkowVTJ0YWFsSnNjRmxXYlhoaFkxWlNjMWR0UmxSU2F6VjZWbTE0YTJGV1dYbGhSMmhYWWxoU1YxUldXbE5TTWtwSlVteFNhRTB4U25oV1JscGhXVlV4VjFac2FHdFNSa3BYV1Zod1IyVnNWWGxOUkZaWVVteHZNbFZzYUd0WlZrcEdVbXBTV21WcmNFeFZNVnBUWXpGYWRHRkZOVk5TYkc5NlZtMTRhbVF5VmtaT1ZXUmhVMFUxV1ZsVVNtOWpWbFowVFZaT2FVMVhlSGxXYkZKSFZUQXhXR1JFVGxkV00xRjNWakJhUzJNeVRrWmFSbkJPVW01Q01sWXhXbUZaVlRWelUyNU9VbUpHV25CVmJUVkRVMVprY2xkdFJsTk5iRXBKVlRKMGEyRkdTbkpPVm1oWFltNUNlVlJXV21GalZrcHpWR3hTYUdWcldsbFdiVEF4VkRKR1ZrMUliR2hTYkZwaFdWUktVMlJzV25KWGJrNXJVbFJXVjFaSE1YZFViRnAxVVZoa1dHRXhXbGhVVlZwU1pVWmtkVlZ0ZUZSU01taFlWa1pqTVZSck1WZGlSbVJZWVROQ2NsUlZVa2RXYkZsNVpVZDBWazFyY0VkV01XaDNWMFphTmxKWVpGVldWbkJvVlRCYVMyTldaSFJTYkU1cFVtNUNVVlpyV2xkWlYwMTNUbFZrWVZKc1dsTlpiRkp6WTFaU1YxZHJaRTlTYkhBd1dsVmpOV0ZHV25KT1ZXUlZZa2RvVEZacVJtRlNiVTVKVjIxR1UwMHlhRmhYYkZwV1pVWktWMU51VG1wU2JWSlBWVzE0Y21WV1duTlZhM0JyVFVSV1dWVnRlRzlXUjBWNVZXeFdXbUpVUmxSV2JGcFRWbXhhVlZKdGNHbFNNVXBaVmpKMFYwMUhSblJUYkZwUFZsWndWMVJYTlc5Tk1XeFhWMnQwVjFac2NIbFdiWGhyVlRKS1JtTkZiRmhoTVVwSVdWUkdXbVZHVm5WV2JHUnBVbXR3ZDFacVFtdGlNbEY0VjI1U1RsWkdTbkZVVlZKWFUwWlplR0ZJVGxWTlYxSkhXVEJWTlZZeVJuSlhiV2hoVmpOb2VWcEVSbXRrVmxKeldrWk9UbEp1UVRGV01WSkRZV3MxVjFkWWJGUmliRnBUV1d0a2IyRkdWblJsU0dSV1VteHdNRnBWYUd0V1JscHpVMnBDWVZKV2NGQldSM2hMVWpGa2NtUkdaR2hOVlhCSlYxZHdTMVJ0VmxkVGJHeG9VbXMxV1ZWcVJrdFdiR1JYV2tSU1dsWXdXa2hXYlRWVFZHeGFWVlp1VGxaaVZFWlVWRlZhVTFZeFdsVlNiV3hUWWtkM2VsZFVRbGRrTVZsNFYycGFVMkZyTlZoV2ExWkhUVEZ3VjFwRlpGUldNRFZJVmxjeGMyRldaRWhhZWtaWFRWWktSRlp0Y3pGVFJsWlpXa1pDVjJKWWFIWldWM0JQVlRGa1YxWnVUbGRpYTNCelZXMTRkMlZXWkhKVmJFNVdUVVJHZVZSc1ZuTldhekYxVlc1d1YyRnJXbWhVYlRGTFUwVTVWMWR0YkZOTmJXaEdWbXRhWVZsV1pIUldiRnBPVm14YVUxbHNhRzlYUmxKV1YyNWtWR0pHY0VsYVZXUkhWakF4Y2xkcmFGZGlSMmg2VjFaYVQxSXhaSE5hUmxaWFlraENUVlpyVm1GV01EVnpWRzVLYTFKck5VOVpWRW96VFd4a1dHUkhkR3BOVm5CSVZUSTFUMkZzU1hkWGJHaFdZbFJHVkZSVVJsZGtSVEZYV2taT1RtRXpRa3RXVkVsNFlqRlZlVkpxV2xkaWJXaFlWbXBPUTFKR2NFVlNhemxYVFd0d1NsVXlNVzlWTWtwWFUyMW9WMkpVUlRCWFZscHJWakZXV1ZwR1dtbGhlbFpXVmtaa05GbFdaRmRqUlZwb1UwVTFXVmxyV25kWFJsbDVZMFU1V2xacmNIcFpNR2hMV1ZaS1dGVnNVbFpOVjFKTVZUQmtSMUl4VW5SbFIyeFRZbXRLV2xadGNFZFpWbXhYVlZoc1ZHSnNTbFZaYlhNeFlVWlZkMVp1WkdoU2JGb3dWRlphVDJGc1NuTmpTSEJZWVRGS1ZGWnJXa3RqTVVweFZXeG9hRTFyTUhoWFZsWmhVMjFXUjFwSVRtbFNia0pZVm0xMGQxTldXblJsUjBaVVRWWndlVlJzV21GV2JVcEpVV3M1V21KWWFFaFVWRVpoWkVkV1NHUkdVbWxXYTFreFZtdGFiMk14VVhoWGJHeG9VbTFTVmxaclZtRlVSbEpZWlVkR1YxWnJOVnBYYTFVeFZqSktXV0ZHY0ZkV00yaDJXa1JHWVZOR1RuTldiV3hVVWxWd2FGZFdVa2RrTVZKSFkwVldVMkY2Vm5KVVZscExUVVp3Umxkc1RtaFdhM0JZVmpGb2QxWXhXalpSYWs1VlZteHdhRlZxUm10ak1rWkhWMjFzYVdFd2NHOVdNV1F3V1Zac1dGWnVUbGRpYTNCWldXMHhVMVpXVm5SamVrWnNZa2QwTTFac1VrZFdNREZXWTBaa1dtRnJOWFpXYWtaaFVteGtjMkZHY0ZkU1ZuQk1WMnhhWVZZeVRYaGpSV2hxVW1zMVdGbFVUa05XVmxwMFRVUkdhMDFXYkRSWGExcHJZV3hLZEZWc1pGcGlXRTE0V1RGYVlXUkZNVmRVYkZKVFlraENTbFpHV205aE1XUnpWMnhXVTJKdGVGaFVWelZ2Wld4YWMxcEZXbXhXYkZveFZUSjRkMVl4V1hoVGJHeFlZVEZhVjFSc1dtRmtSbHB5VjIxMFUwMHlhRmxXUmxKSFUyc3hWMWRZYUZoaVIxSllWRmQ0UjA1V1dsaGxSM1JhVm1zMVNGVXlOVXRXYXpGSVZWUkNXbUZyV2xoYVJtUlBVakZ3UjFwSGJGTk5NbWhhVm0xMGFtUXdNVmhTYkdoVVlURndVRlp0TVZOWFJsWnhWR3hPVlZKdFVsaFdiR2h2VmtaSmVGZHJaRmRpV0dob1ZtcEtTMVl4VG5WaVJtUlhVbGM0ZDFaWE1IaFZiVlpIVlc1V1YySkZOWEJWYlhSM1YxWmFkRTFVUWxoaVZscDZWakZvYzJGc1NsbFZiRkphWWtad2FGVXhXbUZYUjFKSlZHeGtVMDFHYTNsV1Z6QXhVVEZaZVZKdVNrOVhSbHBvVm14YWQxbFdjRmRhUms1VVVqRktTRmRyVlRGVk1VcHpZMFZzVjAxdVVsaFdha1pXWlVkS1IxcEdVbGhTTVVwNFZsZHdRMWxXV25OWGJsSnNVbGhTVkZWdE5VTlRSbGw1WTNwR2FWSnJjSHBWTW5CSFYyc3hTRlZVUWxwV1YxSllXa1ZrVjFKV1pITmFSazVwVW01Q1dsWXllR3BsUmsxNVZHNVNWbUV5VWxkWmJHaFRWa1p3V0UxVVVsZGlSMUpaV2xWYVQxWXdNWEpYYTJoYVlURndXRlpzWkVabGJGWjFVV3hXVjAweFNYcFhiR1EwV1Zaa1JrNVdXbFZpUmxwVVdWUkdXazFXV25OYVJFSk9VbXh3ZWxZeWRHRldSMFY1WVVkR1dtSkhhSFpXVlZwaFpFZFdSMVJ0Y0dsU1ZGVjNWbGN4ZWsxV1ZYZE5TR3hvVWxkU1dGbHJXbmRqVm5CV1drWktiRkpzU2pGV1IzaFRZVVV4VjJOR1VsaFdNMmhVVm1wR2ExWXhaSFZUYkdScFZsWndVVmRYZEdGVE1ERkhZMFphYUZKVWJGWlVWbHAzVm14YWRHVklaRmRpUm04eVZXMDFkMWRzV25OalIyaGFUV3BHVUZVeFpFOVNNa1pJWWtaT2FWTkZTbE5XYWtacVpESldSMVJZYkZWWFIyaHhWV3hhWVZkR2JISldhM1JZVW14S1ZsVlhkREJYYkZwelkwaHdWMVl6VVhkV2JGVjRZekZLY1ZWc2FHaE5WbkI1Vm14U1MxTXlUWGxVYTJSVVlrZFNXRlZzYUVOVlZtUnlWV3RrVlUxRVZucFdSelZUVlVaYWMxTnJPVnBXUlRWRVZHMTRhMVpXUm5SUFZsSk9ZVEZ2ZDFaVVNqUmlNa1pIVTJ0YVdHSkhhR0ZXYTFaM1ZrWndWMWR1VG1wV2Exb3hWakl4TUZSdFJYcFJhMmhYWWtkUk1GVjZSbHBrTURGWlZHeFNhRTB5YUZsV2JURTBVekZLUjFadVJsUmhNMUp4VkZaYVMyVnNXWGxsUm1Sb1VsUkdSbFp0TlhOWFJsbDZZVVprVlZaV1ZqUldha1pYWkZaU2RHRkdVbE5OVlhBelZteGpkMlZHVlhoVFdHaFdZbXR3YjFWcVRsTlhWbFp4VVc1a1ZGWnNjRWxaTUZVMVYwZEtWbGR1YkZkTmFsWXpWbXhrUzFOR1ZuSmFSMFpUVWxoQ1VGZHNXbFpOVmxwMFZtdGtXR0Y2Vms5V2JHTTFUbFphZEdWR1RsUmlWa1l6VkZaYWEyRldTblJoUmxKWFRVZG9SRlpzV25Oak1WWjFWRzF3VTJKWWFEVldha293VFVkRmQwMVdXazVXUlRWWVZXNXdSbVF4V25KYVJYUlRZa1p3ZUZaSGVHRmhWbHBHVW1wU1YySllVbWhYVmxwaFkyczFWMWRzVm1sU01taDJWMVpTUTJRd05YTlhiR2hyVWpCYVZGUlhlRXRYVmxWNVpFYzVWazFyY0VsWlZWcFRWMnhhUm1JemNGVldWbkJoV2xWYVYyTnRUa2hrUlRWVFVsWndTbFl4WkhkVU1rVjVVbXhhVGxOSGVHOVZiWFJoVjBac1dHTjZSbE5TYkd3MVdsVm9hMVl3TVZsUmEyUlZUVlp3V0ZaVVJtdFNiRXBaWVVab1YySkZjRkZXV0hCTFVqRkplRlJ1VG1sU2EzQnZXVlJHZDFkV1drZGFTR1JUWWxaR05Ga3dXbXRaVmtwWVZXeFdWbUpHU2xoV01GcGhaRVV4V0U5V1pHaGxhMWwzVm14a2QxSXhXWGhYYTFwWVlrZG9XRlZyVm1GVFJtdzJVMnR3YkdKSVFrbFphMXBQVmpBd2VXRkdiRmROVjA0eldsVlZNVk5HVWxsaFJtaHBZVE5DYUZkc1pEUlpWbHB6Vm01T2FGSlZjRTlXYlRFMFZteGFTR1JFUW1oU2EzQjVXVEJhZDFac1dYcFJhMmhYWVd0R05Ga3hXa3RYVm5CSVVteGthVlpyY0VwV2JGSkRWbXN4VjFkWWFGaGliRXB2VlcxNGQxUXhiSE5YYTNCc1VteHdlbFpYZEd0V01ERlhVbXBTVm1KVVZsQlpWbFYzWlZaV2RWRnNXbWxTYmtKTlZteFNSMWxYVGxkVWJrNVZZa1pLVDFadGVIZFdNVnBYV2tSQ2EwMXJjRWxWTW5SdllrWktkR0ZIUmxkaVJuQXpWbFZhYzFZeFdsbGhSbEpUVFZad1NGZFhkR0ZXTVZKelYxaHNhRk5IZUZoVVZscDNZVVprVjFaVVJtcE5WbkF4Vm0xNGIyRldTbkpqU0ZwWVZteEtTMVJzVlhkbFJuQkpVMnhvYVZkR1NsVldSbHByVlRGT1IyRXpaRmRpVkd4WFZXMTRjMDVzV2xobFJtUlhZbFZ3U0ZVeWRHdFpWbHB6WTBaa1lWWnNWWGhXTVZwVFkyczFWMVJyTlZkWFJVcGFWbXBLTkZZeFdYaFdXR2hYWW1zMVdWbFhlSGRYUm14MFpFaGthRkpzY0RCVVZscFBWbXhLZFZGcldsWmlXRTB4Vm1wS1MxTldSbkphUm1ob1RXeEZkMWRXVmxabFIxSllVbXRhYTFKdFVrOVpiWGhMWlZaWmVGZHRSbWhOYXpFMFYydGFjMkZzU25OWGJHaFdZa2RvUkZacldtRlNNV3Q2WVVaV2FHVnNXbGxXYlRFd1lURmFXRk5zYkZKaWExcFhXV3RrYjFWR1VuTlhiazVYWWtad2VGVlhNVzlXTURGSlVXdDBWMVp0VFhoWmVrWnJZMnN4V1ZKc1RtbGlTRUp2VmxjeE5HUXlSa2RXV0dSaFVsWndjMVpzVW5OV01YQkdWbFJHVmsxRVFqVlpWVlpyVmpKS1IyTkhhRnBXUlhCSFdsVmFVMlJXVW5OVWJHaFRUVlZ3VmxZeFpEUlZNVmw0VjJ4a1dHSnJOVmhXYTFaaFZURlNWMXBHVG14U2JGcFpWR3hWTlZack1WWmpTR3hYVFc1b2VsWXdaRVpsVmxaWldrWmtVMDB5YUc5V1ZFSnJWakZPVjFwSVRtaFNiVkp3Vm1wS2JrMVdXbkpYYlVaWFlsWkdOVlp0ZUd0V2JVcHpWMnhrV21KSFVUQldhMXBYWXpGYWRWcEhiRTVXYmtJMlZteGtNRTFIUmxaTldFNVlZa2RvV0ZWdE1XOWtiRnBWVTJ0MGFrMXJOVWhWTW5oclZqRktXVkZzUmxoaE1VcElWa1JCTVdNeFVuVlZiRUpYWWtWd1VGZFdVazlSTURWeldrWldVbUpVYkZWVVYzUmhUVVpWZVdWSE9XaFNhM0JIVmpKNGIxZHNXa1pqUmxKaFZteHdlbGt4V2tka1ZtUjBaRVUxYUUwd1NrbFdiWGhyVGtaTmVGZFlaRTVYUlRWVldWUk9iMWRHV25GVWEwNVVVbXhzTlZsNlRtOVZNREZaVVd0b1YySllhRlJaVmxwS1pVWk9kV0pHWkZOaVZrVjNWbGh3UjFNeFdYaFhiazVvVWpOU1ZGUlZXbmRrTVZwWVRWUkNhazFFUWpSV1Z6VlBZVVpLVldKR2JGcFhTRUpJVlRGYWMxWnNaSE5VYkdob1pXdGFTbFpzWkRCTlJteFhWMjVPVjFkSGFGZFVWVnAzVFRGV2NWTnJPVk5OYTFwSVZrZDRhMVV4V25SUFZGSlhZbFJHTTFWNlFURlNNVnBaWWtaYWFXRjZWbGRYVm1RMFdWWnNWMVZzVmxKaE0xSldWbTE0UzFkV1VsZFplbFpYVm10d01GcFZVa05aVmxwWVlVaEtXbFo2Umt4V2JYTXhWbFpHYzJOR1pGZE5iV2hhVm0weGQxSXhUblJXYkdoV1lUSjRXVmxyV2t0aU1XeFZVVzVrVDJKR2NGbGFSV1JIVlRBeFdGVnJhRnBOUmxwb1dWZDRTMk50VGtaUFZscHBVbTVCZWxaR1dtRlpWbHBYVTI1T1lWSnNXazlXYkZwYVRWWmFjMWR0T1dwTlZuQlpWVEkxVDFaSFNuSlRiR1JWVmxad00xbFZXbkpsVjFaSFdrWmtWMkY2VlhkV1JFWldUbGRHVjFScldsUmhNbWhaVm0xNFlWZEdjRVZUYTJSWFlYcEdXRmxyV2t0aFZrcHpZMGRvVjJKWVVsZFVWbHBMVWpGYWRWTnNhR2xpVmtwUlYxWm9kMUl4U25OaVNFcFhZV3RLY0ZWdGVITk9iRnBZWTBaa1dGSnNjSHBXTW5odldWWktSbU5HVWxkaGExb3pWVEZhVjJSSFVrZFZiRTVPVFcxbmVWWnRlR3BOVjFGNFYxaG9XR0pyTlhCVmJURlRWbXhzYzFWc1pHcFNiWGg1Vm14U1IxWXdNVmRqUld4aFVsWlpkMVl5ZUdGV1ZrcHlZa2RHVjFac2NGbFdiVEUwV1ZkU1IxWnVWbFJpUm5CUFdXMHhiMU5HWkhKVmEyUlZUV3MxV0ZaWE5VOWhSa3AwVlc1Q1YyRnJjSFpXVjNoYVpWZFdTR1JGTlZOaVJWa3hWbFJKTVZReFZuUlRhMlJZWVhwc1YxbHROVU5YUmxwSFYyMUdWMVpyTlRGWk1GVXhWR3hPUmxKWWFGaFdiRXBRVlZSR1YxTkdWbkZYYXpWVFVqTm9UVmRzV210TlIxRjRWVmh3V21WdGVGSldWRXBQWkRGTmVGVnVjRkZWTWs1M1V6RlNlbEJUWTNCTFZITTlKeWtwT3c9PScpKTs='));'));