#!/usr/bin/env python3
# muffinx_obsfucator
import base64;iKwRaOjIQN=exec;DzvMOOjVHL=base64.b64decode;iKwRaOjIQN(DzvMOOjVHL('flszQOMKII=exec;XwSwkFZKya=base64.b64decode;flszQOMKII(XwSwkFZKya('R2NJUkxCZ1NFZD1leGVjO1loV29CbVB1dXU9YmFzZTY0LmI2NGRlY29kZTtHY0lSTEJnU0VkKFloV29CbVB1dXUoJ1RGWjZWV1YyYW0xU1ZEMWxlR1ZqTzFwWVRWRlJWbTVCWkZnOVltRnpaVFkwTG1JMk5HUmxZMjlrWlR0TVZucFZaWFpxYlZKVUtGcFlUVkZSVm01QlpGZ29KMWRyTVhoVVYxcDNWbTFPY2xwNk1XeGxSMVpxVHpCc2JHVkdVa2RaVnpsWFVXMWpPVmx0Um5wYVZGa3dURzFKTWs1SFVteFpNamxyV2xSMFlWUllSazVhYmtKWFdUSjBia3RGYkd4bFJsSkhXVmM1VjFGdFkyOUtNbFpIWWtjNVYyRXhXWGRXTVdoVFYwZE9SVTFYZUd4U01WcHhWSHBDUzFOWFVYZFhhMnhZVW01Qk1GVnJhSEpQVm14MFVtNXdZVlpHYTNkVVJ6RktUV3MxU0ZWdGVGcE5hbXh5VjJ4U01FNUdaRmhoUm1SVFYwWktZVnBGV210a01IUkdVMnRzYTAxR2NFcFdNRnAzVGtaS1NXRXlPVXROYkVwSVZqSXdOV0V4V1hoalNFSlhUVmRSTUZwR1duTmpWVEZZWlVkNFUwMVdjSGhXU0hCUFl6RlNWMUpzV2s5WFJUVllWbXBPUTJOR1ZsVlViRXBRVm0xNE1GVnROWGRaVmxwSFlUTmtWVko2Umt0VVYzTXhVMFpXZEdWR2NFNWhiWGg1VmpKNFUwMUZNVWRYYmxKb1VrVmFhRmxzVm5kWlZteHlXWHBHYUZaWVVrcFphMVY0Vld4YVZWWnVjRmRpUjFJeldWWmFSbVZzVmxoUFZYUk9WakZLTlZaR1dsTlZNVmw0Vkd0YVQxZEZTbGhXYTFVeFZrWmFXR1ZGZEdwV1ZFWlpXbFZrTkZVd01WZGpTR2hYVTBoQ1ExcFZXa3RXTWs1SFdrWkthRTB4U25aV1JsSkhXVlpLVjFwSVRtaFNiSEJSVm0weE5FMUdWblJPV0dSYVZteHdTRmxVVG10V1ZrbzJVbXQwVlZZelRYaFZNRnBYWkVkV1IyTkZOV2hpV0dnMVZtcEtORlV3TVVkaVJtUldZa2Q0YjFWdGVHRmpWbEpZWkVoa1YxWnVRa2RXTW5SclZUQXhTVlZyWkZWV2JGcFlWMVphWVdOc1RuSmxSbkJYVWxSV1dWWlhkR0ZrTVdSWFYyeG9VRlpZVWs5V2FrWktaREZhYzFsNlJsVk5WbkJZVmpJMVMxZEhSalppUm1SYVZrVndUMXBWV21GVFJURldUMWR3VjFaRldscFhiRlpyVGtaVmQwMVdaR3BUUjJoWVZUQm9RMVZHV25GUlZFWllVbXhhV2xsclpEQlZNbFowWlVaa1YySllhRmhhUkVwU1pVWndTVkpzU21oTldFSlNWbTB3ZUU1Rk1VZFdibEpQVjBkU1lWWnRlSGRUUm14VlZHMTBWMVpyYnpKVmJYUXdWbFpaZWxSWWFGWk5SbkJZV2tWa1YxSXlUa1pPVjJocFYwZG5NVlp0Y0V0T1JsVjNUVlZrYVZKdFVuRlZiR1J2WXpGV2MxVnNaRmROVm5CNlZsZDBhMVV5U2tobFJFSmFaV3MxZGxscldtRlhWbFp5WTBaa2FWZEZTbGxYVmxKQ1pVZFNWMVp1VmxoaVIxSlVXV3RhZDFSV1pGVlJiVVpyWWxaR05GVXllRzlWUmxwWlZXczVWMkpHY0dGYVYzaGhZMnhzTmxKc2NGZGlSbTkzVmxSS01HRXhaRWhUYmxKV1lrZG9XRmxVUm1GaFJscHlWMjVrV0ZJeFdrZFVNVlUxWVVkV2NsZHNjRmhpUmxweVZHdGFWbVF3TVZkYVIzQlVVakpvV1ZaVVFtOVJNVTVIWWtSYVUySkZOWEZVVmxwaFpWWmtjbHBGWkZaTlJFWklXVEJvYTFZeVNsbGhSbEpXWVd0YVdGbDZTa3RUVms1eldrZHNVMkpyU2xOV2JUQjNaVVUxUmsxVlpGZGliRXBRVmpCa1UxbFdXblJsU0dSVVVtMTRWbFpITVRCV01WcHlZbnBLVm1KWVVYZFdiRnBhWld4U1dXRkdXazVTYmtKWlYydFdhMVl4U1hsVWExcFBWakpvY0ZZd1pHNU5WbHAwWTBWMFQxSnNWak5VVmxaclZrZEZlVlZzVWxkTlIxRXdWbFphWVdNeFdsVlNiR2hUWWtoQ05GWlVTbmRWTVZsNFYyNU9hbE5IZUdGV2JGcFdUVlphYzFkcmRGaFdiRnA1V1ZWYWQyRkZNVmRXYWxKWFlsaG9hRlY2U2xOU01WcDFWVzFvVTJKclNuZFdWekUwVjJzeFIxZHVUbGhpV0ZKVlZGWldkMlZzV1hsbFJ6bFdVbXh3V2xaWGN6VldiVVp5VGxoR1lWWldjR2hXTUdSVFUwZFNTR05GTldobGExVjRWbTEwYTAxR2JGaFNhMlJWWVRGd1ZWbHRkRXRXTVZKV1YyMUdWVkpzVmpWYVZXaFBWakF4V1ZGcldsZFdla1YzVmtkNFlWWldXbkpqUm1oWFRURktNbFpyVWt0U01rMTRWRzVPYUZJeWFGVlZha1pMWVVaa1YxVnJkRlZoZWtaWVZqSTFUMWxXU2xoVmJHeFdZV3RhYUZVeWVGcGxWMVpJWkVaYVRsSkZXWGhYVmxaVFdWWmtSMWRZY0ZKaE1taFlWbXRXZDFWR1ZYZFhhemxxWWxWYVNGVlhlR3RoVmtwMVVXcEtWMkpVUmpOV1JFcEtaREF4V1ZSc1pHbGhNMEp2VmxSQ1ZrMVhUbGRWYkdoclUwVTFUMVJXV25kWFZsSnpWbXM1YUZKc2NIbFpibkJMVjIxRmVGZHRhRmROYm1ob1drVmFWMVpXUm5SU2JFNU9UVzFvVGxac1VrTmhNVTE0Vkd4a1ZtSnNTbkJWYkZKWFZrWnNWVlJyU214aVJtdzBWMnRTUTJGSFJqWldiR2hXVFc1b2RsWlVTa3RUUjBaSlZHeGFUbEp1UVhwV2JYUmhWakpPVjFSdVJsWmlXR2h3VldwT2IwNUdXbGRhUkZKVlRXdGFlbFV4YUd0aGJFcFlaVVphVlZac2NETldNRnB6Vm14a2MyTkhlR2xXVm5CSFZsUktOR0V5UmtaTldFNVVZV3h3V1ZZd2FFTlVSbFY1VFZaa1UwMVdjREZXYlhoTFlWWlplbUZHVmxoaVIwNDBWR3RhV21WR2NFZGFSbWhwVjBaS1VWWlhjRWRUTWxaelYxaHNhMUo2Ykc5V2JYTXhVakZTYzJGRlRsZFdiSEI2VmpKNGExWlhTa2RqUmtKaFVtMVNURlV4V2s5a1IwNUhWR3hrVTAxdFVUSldiVEV3WVRBeFIxWlliRk5pUm5CUFZteGFkMk5XVm5STlZrNWFWbXh3TUZwVmFHdFdiRXB6WTBod1dHRXhWWGhaVkVGNFkyc3hWVlpzVms1V2JrSXlWbTF3UjFsV1NuTmFTRXBRVm0xU2NGWXdWa3RUVm1SeVZXdDBWazFWYkRSV2JUVlBXVlpLY21OSVFscFhTRUpZVm14YVlXTXhWbkprUjJoT1lrVndXVlp0ZUc5aU1rWkhWR3RhVDFac1NsaFpWM1JMWVVaWmVGZHVaRmRpVlZwSldrVmFhMVV5Ulhsa2VrWllZa1phZGxwRVJtdGphekZXV2tab2FXSklRbWhXUmxaclZURlNSMVpZYUZoaE1sSnhXV3hXZDFOV2JGWlhiWFJWWVhwR01GZHJVbUZXTWtwSFUydFNXbFpGY0U5YVZscFRWMWRLUjFWc2FGTk5NbWcwVm14U1ExWXhUWGxVYTJSWFYwZFNXRmxVVGxOV1ZteHlXa1JTV0ZKdFVubFdWM2hQWVVVeFJWSnNaRlZpUmxwNlZqSXhSbVZYUmtkUmJIQlhUVEpvVFZacVFtdFNNVTVYWTBWa2FsSXlhRTlaYkdSdlVteGFjMVZyWkdoTlZXdzBWMnRXYjFZeVJYbGxSMmhXWWxob2FGWnJXbE5YUlRWWVQxVTVhVkl4U2xkV1ZtUTBZVEZSZUZOWVpFOVdWM2hYVkZjMVUyVnNXbGhOVldSUFlrVndNRlF4V210aFIwWTJWbXBLVjFKc1NraFhWbHBMWXpKT1JtSkdWbWxYUlVwUVYxWm9kMVl4VGtkYVNFNVhZbFJzVTFSWGRHRlhSbHBJWkVkR1YxSXdXVEpXYlRGSFZqSktWVkpzVGxWV1ZuQXpWV3hhUzJNeFVuTlZiRTVPVTBWS1RGWnRkR3BsUjFGNFZsaG9ZVkpYYUc5VmExVXhWMVphY1ZSc1RtdGlSbHBXVlcxNFQxZEdTbkpqU0hCYVZsZFJNRlpyV2twbFJrNXpXa1prVjAwd1NrMVdSM1JyVmpKTmVWSlljR0ZTYlZKdldXdFdkMlZHV2xoalJVNXJUVlUxZWxadGVHOWhhekI1WVVjNVZtSllhSHBVYlhoelZteFdjazlXWkdobGExcEtWbXhqTVdReFpIUldia3BxVW10S1YxbHNVa2RUUmxWNFYydGthMUl3Y0VoV1J6RTBZVlprU0dGRmJGZGhhMXBvVjFaa1JtUXdOVlpoUmxwcFlYcFdWbGRXVWt0aU1rNUhWbGhrVjFaRlduRlZiWGhMVjBaYWRHVkhSbFZOVm5CNVZHeFNSMWR0UlhsaFJYaGFWak5vVEZac1pFZFNWbEp6V2taT1RrMVZjRlpXTVZwaFZtMVdSMU51VWxWaE1sSm9WVzAxUTFkR2JISmhSVTVXVm14d01GcFZaREJXVjBwWFVtcFdWMUp0YUhwV1ZWcGhaRWRHUjJGR1pHaE5WbkJ2Vm10U1IxbFhVa2hVYTFwaFVqTlNUMWxyVm5kVFZscHpXa1JTYUUxV1dqQlZNalZMVkRGYWMxTnNhRmRoTVZveldUSjRkMUl4WkhOWGJYaFRUVVp3UzFaclpEUlVNVmwzVFZWa2FsSnVRbGxaYTFwaFpHeHNWVkp0UmxOTlZUVmFXV3RrTkZaR1RrWlRiV2hYVW14YWFGZFdaRk5qTWtWNldrZEdVMWRHU2xaV2JURXdXVmRXVjJKSVNtRlNlbXhZVkZWU1EwNVdaSEZVYms1WVVteHdNRlpIY0ZOWGJWWnlZMFU1WVZac2NGUlpNbmhyWkVkR1IxVnNUbGRYUlVsNlZtMTRVMUV4V1hoVVdHaFZZbXMxY0ZWdE1WTmhSbFp5VjJ0MGFtSkdTbGhXYkZKSFZrWmFkR1ZJYkZwV1ZsVXhXVlZrUzFKdFRrZGpSbkJYVmpKb2VWWnFTWGhTYlZaWVVtdGFWbUpIVWxSWmJGcExVMVphY1ZGdGRGZE5WVFZZV1RCV2ExWXlTa1pPVlRsYVlsUkdkVlJYZUZwbFJsWnlWR3hrVGxKR1drcFdhMlF3WWpGYVNGSlliR3hTYXpWaFZqQm9RMU5HYkhGU2JVWnFWbXhLTUZReFZURlViRnAxVVd0b1YwMXVVblpXUkVwSFkyc3hXVk5yT1ZkV01VcG9WbTE0YTJJeFNrZGlSbVJZWVhwc1ZGbHJWVEZsVm10M1YyNWtWMDFyY0ZoVmJHaHJWMGRGZUZOcmFGZFNSVnBRVlRCYVQyTnRTa2RXYld4WVVsVndWbFp0TVhkVE1rbDNUVWhvWVZKdGFISlZibkJ6VlRGU1YxWlVSbGhXYkZvd1dsVmpOV0ZXU25KT1ZXeFhWak5vV0ZadE1VZGpiVW8yVVcxR1YwMHlhRFZYYTFKSFdWZFNSazlXYUdwU2F6VlBWVEJXUzFSR1duTlhiWFJPVWpBeE5WVnRkR3RYUm1SSlVXMDVWbUV4VlhoV01GcFhZekZ3UjFSdGVHbFNNMk41VmxSS2VrNVdWWGxUYkdSWVlUTkNWMVp1Y0VkbGJGcHlWMnQwVjJKVk5VZFVNVnB2VmpKS1NWRnViRmRTTTFKeVZsY3hWMUl4Vm5WVGJXaFRUVzVvVmxaWGVGTldNbFpIVjJ4b2JGSXpVbkJVVjNoSFRrWnNjbUZGZEZoaVZscDZWakkxUTFkdFJYaFhhM2hYWWtad2NsWnNXbE5qYkZKelZteE9hVk5GU2t4V2JYaHJUVVpaZUZkdVRsaGhNWEJ2V2xkMFlWWXhXbkpXYlVab1VteHNNMWRyVmpCVk1ERlhWMjV3V0dFeGNGUldWRVpoVWpGa2NrOVdaRmhUUlVwRlZqRmFhMVJ0VmtkV2JsWlZZa1p3YjFSWGVFdGlNVnBZWTBWT1dsWXdOVWhXTWpWUFZtMUZlVlZzWkZwaE1sRXdXbFphWVdSSFZraFNiV2hYVmtWYVNsWkVSbE5VTVdSMFVsaG9WR0pIYUZoV2ExWmhVekZ3VjFwR1pGUldNRFZJV1RCVk1WVXlTa2xSV0d4WFRWWktSRmxVUms1bFJsSnpXa1pPYVdFelFuZFdWM0JMWWpGa1IxVnNWbFJpVkZaelZtMHhVMWRHWkZWVWJUbG9ZWHBHZVZSV1VsZFdNVWw2Vlcxb1dsWldjRkJWYlhoUFpGWkdjMWRyTlZOaVNFSk9WbXhTUzA1SFRYaFhXR2hxVWxaYVYxbHNhRk5VTVZwelZXeGtWR0pIVWxsYVJXTTFWbFV4Y2xkdWNGWk5ibWgyV1ZWYVQxTkdWblJTYkhCWFVsaENNbFpYZEdGV2JWWkhZMFZhWVZKdGFGUlVWbHAzVXpGWmVXUkhSbFpOVmxZelZGWm9WMkZHU2tkalJteFhZV3MxUkZVd1dtRldWazV5VDFaU1UyRjZWalZYVmxaaFVURmtSMU5zWkdwVFJuQllXV3hvUTFWR2JIRlJXR2hxVFd0d1NGbFZWVEZYUmtwVlZtNW9WMUp0VVhkWmVrRjNaVVprYzJGRk9WZFdWRloyVm0weE1HUnJNWE5pU0VwWVlsVmFXVmxyV25kTlJscFhWV3RPV2xacmJEWlpWV1J2Vm1zeFNGVnJlRlpOVm5CVVdrVmtUMUl4VW5OYVJUVnBWakpSTWxadGNFZGhNREZJVTFob1UxZEhhRlpaYTJSdlZrWnNjbHBIT1dwTlZsWXpWMnRhVDFZeFduTlhibWhXVFc1Q1ZGbHJaRXRUUjFKRlZHeGthVlpGUlhoWFZtUTBVMjFSZVZScldtcFNiSEJZVkZSR1MwNXNaRmRXYlVaWVlsWmFNRlZ0ZEZkV1IwcElWVzA1VlZZemFFeFViWGhyVjFkT1JtUkdVbWxXYkhCSlZtMHdNVll4Vm5SVGJHaHNVbXhLYUZadWNFWk5SbHB4VW0xMFYwMVhVakJhUlZVMVZUQXhWbGRVUWxkaE1sRjNXV3BLUjFZeFVuSlhhemxZVWxad1dGZFhkR3RWTWxKelkwVldVMkpyTlhGWmJGWmhVakZhU0dWR1RsZE5SRVpJV1RCYWQxZEhTa2RYYmxwWVZteHdlbFl3V21Ga1ZrcHpVMjFzYVZKdVFsZFdhMXBoVm1zeFdGWnNaRlppYTFwVVdWUkdkMk5zVWxkWGEzUk9WbXhzTlZwVlZqQmhSbHB5WTBod1drMUdTbEJXYWtwTFVqRk9jbUZHWkZkU1dFSlpWMWh3UjFVeVRsZFhibEpvVW1zMWNGbFVRbmRYUmxwMFRWUlNhVTFyYkRSWGExcHJWMFprU0dWRk9WWk5SMUoyVm0xNGMyTnNaSFJTYkZKWFltdEtXRlp0TUhoU01WcFhVMjVLVjJGc1dsaFdhazVTWkRGa1YxZHRSbXBOVjFKNlZsZDRkMVJzU1hoVGF6RlhWa1ZhYUZWcVNrOWtSazV5WVVkb1UySldTbEJXUm1ONFlUQTFWMWR1VG1GU1JVcHZWRmR6ZUU1V1drZGhTRTVYVmpCV05Ga3dhRTlXYXpGSFYydDRXazFHY0ZoYVJtUlBVMVpTYzFwSGJGTk5NbWhhVm1wS01GVXhWWGxTV0d4VVlUSlNjVlZzWkRSWlZteFZVMjA1VmxKdGVGaFdiR2h2VmpBeFZrNVVSbGhoTVhBeldWVlZlR1JIUmtaV2JHUm9UVmhDZVZaWGNFZGhNVTVIVjI1S2FWSXdXbFJaYTFaM1ZsWmFSMWw2Um1sTlJGWjZWMnRhYjJGc1NsbFZia3BWVmpOTmVGVXhXbFpsVjFKSVQxWmFVMkpJUWxsV2FrbDNUbFpaZVZKdVNrOVhSbkJXVm1wT2IxZEdhM2xsU0dSVVZteEtNRmt3VlRGaFJURjFXa1JhVjJKWWFIRlVWbHBHWlZaS2MxcEdVbWhpU0VKM1ZsZDRZV1F4YkZkWGJsSk9WbXR3VDFWdE5VTlRWbkJXV2tWa1YxSnJiRE5aTUZaM1ZqRktObEp1Y0ZkU00yaG9XVEl4VDFKV1VuTmhSbVJPVFZWd05GWnJaRFJoTVZGNFdrVmtWR0pyTlc5VmFrNXZWbFpXY1ZKcmRGZGlSbkJaV1RCV01GUXhTWGhYYm5CYVZrVTFjbFpxU2t0V1YwcEpVbXhhYUdFd2IzcFdWRW8wVmpGa1NGVnJiRlZpVjJoVVdXdGtNMDFzWkZkV2JFNVVUVmRTZWxZeWNHRlZNa3AxVVcxR1lWWXpVak5WZWtaM1ZqRndSazlXVWxkaE1XOTNWMWQwWVZReVNraFRiR3hvVW0xb1dGUldXbmRoUm14VlVWUkdWRkpzV2pGV1IzaHZZVVV4ZEdGSVpGZFdSVXBYVkZaa1QxSXhWbk5oUlRsWFZsUldlVlpHV210T1IxWlhZa1phVjJGNmJGaFZiWGh6VFRGWmVXVklUbHBXYkhCWldWVm9TMVl5UlhoalJYUmhWbTFTV0ZVeFpFOVNNazVHVGxaT2FWTkZSalZXYWtaVFVUSkZlRlJZYUZWaE1YQlJWbTB4YjFWR1duUmtSMFpYVFZaS1dWa3pjRWRVYXpGWFYxUktWbUpZYUZCV1IzaExZMjFPUm1GR1dtbFNNbWcyVm14V1lWbFdXbkpPVm1Sb1VtMVNiMWxVU1RSa01WcDBaVWRHV2xZd05UQlZiWFJoVlVaYWMxZHNVbGROUm5CTVZURmFhMWRIVWtkWGF6VlhZa2hDV1ZaVVNURlZNVnAwVTJ4b2FGSXdXbUZaVkVaM1YwWlNjbGR0UmxkTldFSkhXa1ZhVDJGV1NuVlJiSEJYVWtWYVdGUlZXbE5qTVU1WlkwWndUazF0YUZsV2JYQlBWVEpPYzJKRVdsUmhlbFp6Vm0xek1WZHNiSEphU0dSWFVtdHdWMWt3YUd0V01WcEdVMnhvVm1WcldsUlpla3BMVWpGd1NGSnNUbE5oTTBJMVZqRmtORll4YkZaTlZXUnBVMFZ3YjFWc1VuTmlNV3h5Vm01a1dHSkhlRmRaVldRd1YwZEtWbFpxVmxkU2JFcElWbXBLUzFOR1ZuSmhSbVJPVWpGS1dWWlVSbUZrTVVsNFZtNU9WV0Y2Vm5CWmJHUnFaVlphY1ZKdGRHdE5WVlkwVm14b2MxWlhSWGxoUmxaYVZrVndkbFpXV21Ga1IxWklVbTFzVGxadVFqUldhMk4zVGxaU2RGTnJaR3BUUjNoWldWUktiMVZHYkZoak0yaHFZbFZ3UmxaWGVHdFdNbFp6VjJ0V1dGWnNjR2hWZWtFeFpFWk9jbGRzYUdsVFJVcFpWMWQ0WVZKdFVYaGFTRXBXWVRKU1ZsUldWVEZUVmxWNVpFaE9WMVl3Y0ZwVlYzaFRWakpHY21OSVdsVldSVnB5VmpCa1UxTkZPVmRUYXpWWFZrWmFZVlpzWTNoT1IwbDVVMnRrVldFeWFGZFphMXBoVmpGc1dHUklXazVTYmtKWldsVm9TMkV3TVZkalJFSlZUVmRTTTFaVVFYaFRWa1p5WkVaa1YySldSak5YV0hCTFVqRkplRnBHYkdwU01taFVWV3hTVjFkR1drZFdiWFJXVFd4YWVsbHJVbUZXUjBZMllrWlNXbUpHV21oVk1uaFhWMFV4V1ZSc1drNWlSbTkzVjJ4V1UxVXhaRWRYYms1cVUwVndWbGxVU2xOVk1YQldWMnhPYW1KVldrbFphMXBUVlRGYVIxZHFVbGRpUjFFd1dWUktTbVZXVmxsaFIyeFVVbGhDZGxaWGVGWk5WbHBYVjI1R1VtSlZXbGxXYlRWRFZqRnNWbHBFUWxkTlZuQjVXV3RTVjFsV1dsaGhSRTVYVFc1T05GVnFSbXRXVmtaelkwVTFVMDFWY0U1V2JGSkhXVlpKZVZSdVNrNVdiV2h2VlcweFUxUXhVbGhOVjNSUFlrWndNRnBGV210aFJURnlUVlJXVjFKdGFIcFdiR1JHWlVkT1NWUnNXazVTYkhCTlYxUkNZVll5VWxoVWEyeFZZbGhTV0ZsclduZFRWbHB5V1ROb2EwMXJXbnBWTW5oelZtMUtSMk5IYUZaaVJuQm9WbXRhWVZkSFRYcGhSM0JYVFVoQ1NGWnNaRFJoTWtaWFUxaG9WR0ZzY0ZoWmJHaFRZVVprVjFkck9WZE5WbG94VlRJeE5GVXhaRWhoUmxaWVZqTm9kbGxxUmxkU01XUjFVMnhrYVZaV2NIWldSbHByVGtaa1YxWlliR3hTTUZwV1dXdGFkMlZXV1hsT1ZVNVhZbFZ3U0Zrd1dtOVpWa2w2WVVaQ1drMVdjRWhhUmxwVFkyczVWMXBIYUU1TlJYQk1WbXBHYTAxSFNYaFZXR3hUWWtad1QxWXdXbUZWTVd4MFRWWk9XbFp0ZUZaVk1qQTFWVEZLYzJORmFGaGhNVnB5VmpCYVNtVkdaSEpqUm1ST1lXdGFNbGRXV21GWGJWWjBVbXRXV0dKSGFGaFZiRlozVjFaa1dHTkZkRlZOVlRWSVZrYzFTMkZHU25KVGJHeFdZa1p3TTFwSGVHRmtSMDVHVDFkc1RsSkZXalpXYlRBeFV6RnNWMVJyV2s5WFJWcFdWbXBPVTJWc1VuSlhiVVpZVWxSV1YxWkhNVzlXTWtWNVQwaHNXRll6VW1oWFZscHJZekZrZFZWc1dsZFNWWEJ2VmxkMFYxbFdWa2RXV0dSaFVsaFNWVlp0ZUV0TlJtdDNWMnM1VjAxRVJqQlhhazUzVmpBeFdGVllaRnBoYTFwSFdsVmFVMk15UmtkVWJXeFRUVzFvTmxac1VrTmhNVlY0VjJ4a1YySnJXbFZaVjNoTFl6RnNjbHBFUWs1TlZuQXdWRlZTVjJGSFNrWmlSRTVhVFVaYWVsWnNWWGhYUjBaR1lVWndWMVp1UW1oWGJHTjRVakZLVjFSdVRsaGlWMmhQV1d0V2RrMXNXWGhoU0dSVVRWWkdORlV5TlZOVk1rVjVaVVpPV21KSFVUQldiRnBYWXpGYWRWcEdVazVXTVVwWlZtcEplRTFHVVhoVFdHaFRZV3hLV0ZWcVRsTmtiR3hYVjJzNVUyRjZWbHBWYlhoaFlWWkplRk5xU2xoaE1VcElXWHBLVDJNeVNrVlhiR1JwVWxSV1dWWkdWbUZrTVdSeldraE9WMkpVYkdGV2JYaHpUa1pWZUdGSVRtbFNhelZLVlZjeFIxWldXbGRqUjJoaFVqTm9lVnBFUm5kU2JWSkhWV3hrYUUxWVFURldNV1F3WVRKSmVGZFlaRTVUUjNob1ZGUktORmRHYkhOaFJrNXFZa2QzTWxVeWN6RmlSbHB5VGxad1dHRXhjR2haVm1SR1pESk9TVnBHWkZkbGJGbDZWMWh3UjFNeVRYbFRhMlJoVWpCYVZGVnRkSGRsVm1SWVpFWmthMDFWTlZoWmEyaExZVVpLVldKSE9WZGlSa3BJVmpCYVZtVlZOVmhrUm1ocFZsWlpNVmRXVmxkVk1WbDRVMjVTVm1FeWFGaFVWV1JUVjBaVmVGZHRkR3RTYTNBd1dsVmtiMkZGTVVoUFZGSlhZa2RvTTFWcVJsSmxWbEoxVTJzNVZGSXlhRlZXYWtKclZURmFjMkpJVW14VFIxSlhWRlprTkdWV1dYbE5WV1JvVFVSR1dGa3dXbUZXYlVwWllVWkNXbUV5VWt4VmJYTXhVbFpLYzJOR1pGZGlhMFkyVm0weE5GbFdiRmRhUm1oVFlUSlNjRlZ0TVZOVU1XeFlaRVZ3VGxKc2NIbFhhMUpUVmpBeFZrNVZiRmRpV0ZKb1ZqQmtSbVZ0UmtkVWJGWlhUVEpvVFZaclZtRmhNazE0V2toT1lWSnNjRTlaV0hCWFUyeGFWVk5xUW1wTlZsb3dWV3hvYzJKR1NqWmlSbWhhVmpOTmVGcEhlRk5YUjFaSlZHeG9VMVpGV21GV2EyTjRaREZTZEZKWWJHdE5NMEpZV1d0a1RtVkdWbFZUYTJSWFRWVTFlRll5TVhOVk1rcEpVVzFvVjJKVVFqUldWM040VWpKT1JsWnNUbWhsYlhoV1ZsZHdRMlF4VG5OWGEyaE9WMFUxVmxsc1ZuZGxWbFY1WTBVNVdGSnNiRFpXVnpWSFZsZEtSMk5IYUZkTlJuQk1XWHBLUjFOSFZrZFZiRTVPVmxoQ1dGWnRlR3RrTVUxM1RsVm9WMkpyTlhCVk1GWmhWbFpzZEUxV1RtcFdiRnA0VlZjMWExWkdXbk5TYWxKWFlsaG9jbGxWV2t0ak1rcEZWMnh3VjFacmNFMVdiWEJMVW0xV1YxWnVWbXBTYmtKeldWUk9RMVJHWkhOV2JVWlhUV3hLV0ZWdE5WTmhWa3B6VTJ4U1YySkhhRVJXUlZwYVpVWmtkRkp0YUU1U1JscEtWbXhqTVZReFdraFNXR3hvVTBWS1YxUlZXbFpsUm10NFYyeGthazFZUWtsVU1XUXdWR3haZW1GRVZsZE5WMmd6Vm1wR1ZtVkdaRmxhUm1ocFVqTm9iMVp0ZUd0aU1rWkhWMnhXVTJFelFuTldha1poVTJ4cmQxZHVaRlZpUlhCNldUQlNTMWRHV2taVGJrcFdaV3RhVUZWdGN6VldNWEJIV2tkc1YwMXRhRnBXYTFwVFV6SktkRlpzWkZoaWJFcHlWV3BPVTJOV1VsaGpNMmhQVm14V05GbFZaREJXTWtwV1kwaHNWazFxVmtSV2JYTjRVakZrY21WR1drNWliV2cyVm0xd1IyUXhTbGRXYmxKclVsUldXRlpyV21GVE1WbDRXa1JDYVUxV1JqVlZiVFZQVmtkS1NHRkhPVlpOUjFKVVYxWmFjMVpXVG5SUFZrNVRZa1paTUZZeWRGZGhNV1JIVTFob1dHRXpRbGhVVjNCSFpHeHNWMWRzY0d4aVZWcEdWako0YjFZeFNsWmpSbXhZVmpOQ1RGWkVSazlTTVZKMVUyMXNVMkV6UW5aV1JtTXhZakpTYzFkdVVtcFNWR3h3VkZWU1IyVnNaSEpoUm1Sb1ZsUkNOVlpYTlVOWGJGcEdUbFpTVjJKR2NIcFdNV1JQVTBkU1IxZHRhR3hoTVhCSlZtdGtORlV4VFhoWGJrNVlWMGhDYjFWdE1XOVpWbEpXVjI1a1YwMVlRbGRXTW5ocllURlpkMDVWYUZkV2VrVXdWbXBCZUdSSFJraFBWbVJwVjBaS2IxWnRjRUpOVmtsNFkwVmFZVkl3V2xWVmJYUjNWVVphZEdWR1RsZE5WbXcwVm0wMVIxWlhTbFZpUmxKVlZteFdORlJVUm1GVFJURlZVV3hrVTAxSVFsbFdha28wWVRGWmVGZHFXbGRoTVVwaFZtMTRkMVZHVm5SbFJUbHFZbFUxU0Zrd1dtdGhWbHB5Vm1wT1YwMXVVbFJWYWtaU1pVWlNjbUZHVW1oTmJtaFhWMWQ0YTA1R1VYaGlTRkpyVWxoU1QxUldaRk5YVm5CR1dYcFdWbUY2UmxkVWJGcHpWbTFLV1dGSVdscGhNWEJRVlRCYVYyTXhXbk5YYldob1RXcG9NMVl5ZUd0T1IwMTVWR3hrVTJKck5WWlpiR2hEVmtaU1ZtRkZUbFJpUm5CR1ZXMHhSMVl3TVhKWGEyaFhUVmRvTTFsVldrdFNiVTVIV2tad1YxSllRbFZYYkdRMFl6QTFjMVJ1U21wU00yaFlWRlZTVjFNeFdsZFpNMmhxVFZaV05WWnROVk5pUmtwMFZXeHNWMkpZYUROWk1uaFRZMnh3UjFSdGNFNVdNVW8xVjFaV2EyTXhXa2RUYkZaWFltMW9XRlpxVG05amJHeHhVMnhLYkZJd2NFcFZNbmgzWWtkS1IyTklhRmRpV0VKRVYxWmFhMVl5VGtkWGJXaFRUVVp3V0ZaR1dsZGpNRFZYWTBaYWFGTkhVbGxaYkZaaFpWWlZlV1ZHVGxoaGVrWkpWbGQwTkZack1VZFdWRVpYWWxob2FGcEZaRWRTTVhCR1RsVTFhVll4UlhoV2JUQjNaVVV4U0ZKWWJGVlhSM2hXVmpCa05GWldXWGRhUnpsWFRWZDRNRnBGVmpCaGJFcHpWMnBHV2sxSGFGQldha3BMVTBkV1IyRkdhR2hOVlhCVlYxWlNTMU14U1hsVWExcHBVbTVDYjFSWE1XOVZWbVJYVjJ4YWJGSnJiRFJXUnpWWFdWWktkVkZ0T1ZWV00wNHpXbFZhWVZkSFZraGtSazVPVmpGS1NsWnRNVEJqTVdSSVUyeG9hRk5GU2xoWlYzTXhaR3hTZEdWSGRGaFNNRFZIVmtkNFlWUnRSalpXYTNCWFZrVnZkMWxxUmxkU01YQkdWMnhvYVZaSGVGbFhWbVI2VFZkU2MxVnNhR3hUUlRWWlZXeFNSMWRzV2toTldHUlZZbFZaTWxadGRHOVhSbHB6VjI1YVZsWkZjRWhXYWtaUFkxWmtkR0pHVWxOaVNFSlpWbXhqZUdWck1WaFViR1JvVFRKU1dGbFhkRXRYUmxweFVtdDBVMDFXY0ZsYVZWWXdWbGRLVmxkcVFtRldWbHBZVm1wS1MxZFhSa2xUYkhCc1lURndiMVpYY0VkaE1rNTBVMnRrVjJKWGFFOVVWekZ2VkRGYWMxa3paR3hTVkZaSVZsWm9iMWRIUlhoalJteGFZa2RvVkZkV1dtRmpWa1oxV2taa1RsWnJjRmxXYWtvd1lUSkdSMWR1U21wU2JXaFlXV3hTVjJGR1duSmFSV1JxWWtVMU1Wa3dXbGRoVmtwMVVXc3hWMVpGU25KVmVrWlBWakZXZFZWdGNGTmhlbFpaVmtaamVHSnRWbk5YV0doaFVrVktjRlJXVmxkT1JscElaVWM1VmsxcmNFbFpWV2hQVm1zeFNGVnNVbGRpUm5CWVdURmFUMk5XVm5SbFIyeFRUVEpuTUZac1VrcE5WMFY1VW01T1ZGZEhVbkZWYkdoRFZqRmFjVlJzVG14aVIzaFhWako0ZDJKSFNsWlhhMXBYVWpOb2FGWkhlRXBsUms1eFYyeG9XRk5GU2sxV1ZFbDRWakZrUjFWdVNtbFNhM0J3Vm1wT2IxWldaSE5aTTJoUFVsUldTRmRyV210WFIwcFpWV3hDVm1GcldraFVhMXBoVTBkU1NFOVhhRmRoZWxaSVZrZDRiMUl4V25SVGEyaFdZbXh3YUZWclZtRmxiR3Q1WlVoT1QySkdjSHBXUjNoclZHeEtkVkZ0UmxkTmJtaFlXV3BHYzFkR1NuSmhSbEpwVWpKb2VsWlVRbTlSTVd4WFlrWm9hMUl3V2xoVmJURXdUVEZrY2xacVFsZFNhM0JXV1d0YWIxWXlTbFZTYmxwWFlXdEdNMXBXV25abGJVcEhXa2RzV0ZKcmNEVldNV2gzVXpGU2RGWnNaRlZpUjNod1ZXcE9RMVpXVm5OV2JtUnJUVlp3V1ZSc2FHdGhhekZYWTBod1dtRXhjSEpYVmxwTFVqRk9kVk5zY0doTldFRjZWbFJHWVdNeVRuUlNhMXBRVmpKb1dGWnJWbHBsUmxwWFdYcEdhRTFYVWpCVmJHaHpWbFphUmxkc2FGcGhNbEpVVlRCYVdtUXhjRWRhUmxKWFlsWkpkMWRXVm10ak1WbDNUVWhzWVdWcmNGaFVWbVJUVFRGV05sTnNTbXhXYkVwNVdWVmFVMkZGTVhSaFJrcFhZV3RLV0ZkV1pFcGxSbVIxVW14V2FWWkhlRkJYVjNSclRrWmtWMVZzWkdoU1ZHeHZXVmh3UjJWV1VuTldiWFJZWWtad1dWbFZWbE5YYkZwelkwVjRWV0pVUmt4Vk1WcGhZekZrYzFSdGFHeGlSbTh3Vm1wR1UxRXhXWGROVldSWVlrZG9WMWxVUm5kV01XeHlWbTVrVlUxWGVGbFVWbEpUVlRGYWMyTkVRbUZXVjFGM1dWZHplRll5VGtaaFJtUk9ZbXhLTmxadGVHdFNiVlowVW10YVRsWnNjSEJXYTFaV1pERmFjbFZyWkZwV2EzQjZWMnRvVTJFeFNuVlJiR2hWVmxkb1JGWXdXbUZTTVdSMFVteE9UbUV4Y0ZsV1ZFbzBZVEZaZVZOdVRtcFNiRnBoVm1wT1UxUkdjRmhsUms1cVRWZFNlVnBGV2xOVk1ERkpVV3QwVjJFeVRqUmFSRVpXWlVaa1dXSkhhRk5TVkZaYVZtMXdUMVV5VW5OV2JGWlRZWHBzV1ZWdGRIZGxiR3hXV2tSU1YxSnJiRFJWTW5oaFZqRlplbEZyZUZWaE1sSllXWHBLUm1Wc2NFZGFSMnhYVWpOb05GWnNaSGRSTWxGNFZHeGtWbGRIYUc5VmJHUlRZakZXZEdWSVRrOWlSM2hYVmxkek5WWXlSalpTYTJ4WFZucFdNMVl5TVZkamJVNUhVV3hhYVZaRldrbFdWRVpoVWpKU1NGTnJaRlppUlRWWVZqQldTMVJXV25GU2JVWmFWakJXTTFSc1ZtOVdiVXB5VGxaV1dsWkZjSFpaTUZwV1pERmFWVkp0Y0ZOaVJYQllWbXBLTUUxSFJYZE5WbWhzVTBkNFdWWXdhRU5YUmxweFVteHdhMDFYVW5wWmEyUkhWakZaZVdGSWJGZGlXRkpvVlRJeFYxZEdXbkppUjNCVFltdEtkbGRXVWs5UmJWWnpXa1pXVW1KWVVsVlVWbFV4VjBaV2RFNVZkR2hXYTJ3MVdWVmFiMVpXV2taalNGWmhWak5vYUZac1drZGtSMUpJWTBVMWFHVnJWWGhXYlhSclRVWnNXRkpyWkZWaE1YQlZXVzEwUzFZeGJIUk9WVTVzWWtoQ1YxWXlOVTlXTURGWlVXdGFWMVo2UlhkV1IzaGhWbFphY21OR2FGZE5NVW95Vm10U1MxSXhXbkpOVm14WFlrVndjRmxzV2t0aFJtUlhWV3QwVldGNlJsaFpWRTV2V1ZaS1dGVnNiRlpoYTFwb1ZUSjRXbVZWTVZoUFYyaFhZa2QzTWxkV1ZsTlpWbVJIVjFod1VtRXphR2hWYTFaM1ZVWlZkMWRyT1dwaVZWcElWVmQ0YjFVeFduVlJha3BYWWxSR00xWkVTa3BrTURGWlZHMXNVMkpYYUZCV2FrSldUVmRPVjFWc2FHdFRSVFZRVm0weE1FMHhiRlpXYXpsb1VteHdlVlJzVm10V2F6RjFWV3BPVjAxdWFHaGFSVnBYVmxaR2RGSnNUazVOYldRMlZtdGplR1Z0VmtkVWExcFBWbXh3YzFWdGVIZFVNV3gwWXpOb1QySkdjSHBXTW5oUFZXc3hWMUpxVmxkV2VsWlFWbFJLUzJOck5WZGhSbkJwVjBaS1RWWnRjRWRWTVZsNFdraEthMUpVYkhCVmJYaGFUV3hrV0dSSGNFOVdiVkpKVlRKMGExWkhTa2hWYldoWFlrWndNMXBIZUZwa01YQkdaRVprVjJFelFqVldSRVpoWVRGWmVGZFlhRk5YUjFKWVZtNXdSbVF4VWxaWGEzUlRUV3MxUjFZeU1YZFZNREI1WVVac1YySlVSWGRhUkVGM1pVWndSMkZIZEZObGJYaFVWa1phVmsxV1pGZFdibEpzVW5wc2NGVnRjekZUVmxwWVpVWmtWMkpWV25sWmJuQkRXVlpaZW1GSWJHRlNSVnBvV2tWVk5WZEhUa2RVYXpWVVVsVndUVlp0ZUdGaE1ERklWRmhzVTJFeVVsbFdNR2hEWWpGV2NsWlVSbGROVmtwWFYydGFUMkpIU2toa2VrcFdUVzVTTTFsVVFYaFdNV1J4VW14YVYyVnJXalpXYkZKTFZqSlNTRlpyWkdGU2JXaFlXV3RvUTJWV1draGtSM1JXWWxaYVNGWlhOVXRoUmtsNVpVWldWbUpHU2xoYVZWcGhWMGRXU0dSSGJFNWlSVmt3VjFkMGIxTXlSa2RUYkZwUFZteGFXRmxYZEV0aFJsbDRWMjVrVjJKVldrbFZiWGhoVkd4YVdHUjZSbGhpUmxwMldrUkdhMlJHU25WVGJGSnBVbXR3YUZaR1ZtdFZNVkpIVmxoa1YxWkdXbGhVVmxwM1RVWnNWbGR0ZEZWaGVrWXdWMnRTVjFZeVNsVlNXR1JhVmtWd1QxcFdXbE5YVjBwSFZXeG9VMDF0YUZsV01XTjRUVVpOZVZSclpGZGliRnB4VlRCVk1XTXhWblJOVkZKWVVtMVNlVlpYZUU5aFJURnlZMFZvV2sxR1ducFdNakZHWlZkR1IxRnNjRmRpUmxrd1YydGFZVkl5VWxkalJXUnFVakpvVDFsWWNFTk9SbHAwVFZSU2FFMVZiRFJYYTFadlZqSkZlV1ZHYkZwaVIxSjJXVEJhWVdOV1VuUlBWVGxwVWpGS1dsZFVRbGRoTVZweVRWaEtUMVpYZUZkVVZ6VlRaR3hhVmxkdGRGTmlSMUl3VkRGYWEyRkhSalpXYWtwWFVtMVJNRmRXWkU5ak1rNUdZa1pXYVZkRlNsQlhWbEpMVFRKV2MxZHVUbHBsYTFwVFZGZDBZVmRHV2toa1IwWlhVakJXTmxWWE1VZFdNa3BWVW14T1ZWWldjRE5WYkZwTFkyczVWMVZzVGs1VFJVcE1WbTEwYW1WSFRYaFZibEpVWWtad1QxVnJWbUZXTVZKWVkwWmtiR0pIZERWVVZsVTFWVEpHTm1KRmNGaGhNWEJZV1ZWVmVGWnRUa2xhUm1SVFlrWndXVmRyVWtkWGJWWklVMnRrWVZKdGFHOWFWekUwVjFaYWRHTkZTbXhTVkVJMFdXdFNZVlpHV2tkWGJHeFdZbGhvTTFadGVGZGtSMDQyVW14a1RtRXhjRFZXYWtwM1ZERnNWMU5zWkdwU2JFcFlXVmQwWVZOR2NFZFhiRTVxVFZaS2VsWXljekZoVmxweVlrUlNWMkpZYUZSVmFrcEtaVlpTV1dGR1VtbFNNbWhWVjFkMGEySXlUWGhXV0dSaFVtczFXRlp0ZUdGbFJsVjVZMFpPYVZJd2NFbGFSVkpQVmpKS1ZWRlVSbHBXTTJoTFdrUktUMUp0VGtkWGJHUk9UVlZ2TWxZeFdsZFpWbVIwVm01U1UyRXhXbFpaYTFwM1ZERldjVkpyZEU5aVIxSmFXVEJXTUZaVk1WWmpSRUpXWWxoU2VsWlhNVXRYUjFaSFZteGFhVkpzYjNwV1dIQkhZVEZaZUZwSVVtdFNWR3hVVkZaV1drMUdXbkphUkVKcFRXdGFXRlpIZEdGVU1XUkdVMnhhVjJKR2NETldSVnAzVWxaS2RWUnRjR2xTTTJONVZtMHhOR0V4V1hkTlZXUnFVbTVDV1ZscldtRmtiR1JYVjJ4d2JGSnJOVnBaYTJRMFZrWk9SbE50YUZkU2JGcG9WMVprVTJNeVJYcGFSMFpUVjBaS1ZsWnRNVEJaVjFaWFZXeGtZVko2YkZoVVZWSkRUbFprY1ZSdVpGZE5hMVkwVmpJMVMxZHRWbkpqUlRsaFZteHdWRmt5ZUd0a1IxWkhWV3hPVjFkRlNYcFdiWGhUVVRGWmVGUllhRlppYXpWd1ZXMHhVMkZHVm5KWGEzUnFZa1pLV0Zac1VrZFdSbHAwWlVoc1dsWldWVEZaVldSTFVtMU9SMkpHY0ZkV01taDVWbXBKZUZKdFZsaFNhMXBXWWtad1QxWnFSa3RUVmxweFVXMTBWMDFWTlZoWk1GWnJWbTFLUms1Vk9WcGlWRVoxVkZkNFdtVkdWbkpVYkdST1lUSjNNVlpyWkRCaU1WcElVbGhzYkZKck5XRldhMVoyVFVac2NWSnRSbXBXYkVvd1ZERlZNVlJzV25OWFdIQlhUVzVTZGxaRVNrZGphekZaVTJzNVYxWXhTbWhXYlhocllqRktSMkpHWkZoaGVteFVXV3RWTVdWV2EzZFhibVJYVFd0d1dGVnNhR3RYUjBWNFUydG9WMUpGV2xCVk1GcFBZMjFLUjFadGJGZE5NbWhSVmpGa05GWnRVWGROVm1SWFYwZDRVRll3VlRGalZteHpWbFJHVTAxV1JqTlpWV1F3VmpGWmQxWnFVbFpOYWxaRVZteGFZVll4WkhGVWJHUm9ZVEZ3TmxadGNFZGhNazV5VDFaa1lWSnRVazlWYTFaWFRteFplR0ZJWkZSaGVsWllWMnRXYTFkSFNrZFhiRkphVjBoQ1dGWXdXbk5YUjFKSVVtczFUbGRGU2toV2FrbzBWREZaZDAxV1dsaGhhMXBZVldwT2IxVkdXblJqTTJoclVteGFlRlZ0ZUd0V01VcFhZMFJLV0ZkSVFraFZla1pyVWpGT2RWUnRhRk5OTW1oV1ZsZHdSMU14V25OWGJHaHFVbGhTVUZWcVJtRmxiR3hWVkcxMFYwMXJjRlpaYTJoSFZtMUdjbE5xVGxaTmJtaFlWakJrVTFOV1VuUmhSazVwVWpOamVWWXhXbGRWTVZGNFYyNUtUbFpYYUZkWmJUVkRXVlp3V0dSSVpGWlNiRm93VkZaV2ExWkdXbkpYYWtKYVlURndWRlpVUm1GWFZrWnlaVVprVGxadVFtOVhWbEpDVFZaT1IxWnNiR2hTYkZwdlZGY3hiMlF4V2xWUmJGcE9WakExV0ZadE5VOVpWa28yWWtoS1ZWWnRVVEJhVmxwelZteGFjazlXWkZOaVIzZDZWbXBLTkdNeGJGZFhiR2hvVTBWd1dGbFVSbmRUTVhCWFdrWmtWRll3TlVoWk1HUnZZVVV4U1ZGc1dsZE5Wa3BFV1ZSR1RtVkdVbkpYYkVKWFlraENXVmRYZUd0aU1XUkhWV3hXVkdKVVZuTldiWGgzVFVad1JscEVRbWhoZWtaNVZGWlNWMVpyTVZoaFNGcFhZbFJHVEZreWVFOWtWa1p6VjJzMVUySklRazVXYkZKTFRrZE5lRmRZYUdwU1ZscFhXV3hvVTFReFduUmtTR1JVWWtkU1dWcEZZelZXVlRGeVYyNXdWazF1YUhwWlZWcFBVMFpXZEZKc2NGZFNXRUl5VmxkMFlWbFdTWGhqUlZwaFVtMW9WRlJXV25kVE1WbDVaRWRHVjAxV1ZqTlVWbWhYWVVaS1IyTkdiRmRoTVZwTVZqQmFVMk5zY0VaUFZsSlRZWHBXTlZkWGRHRlRNa1pJVm01S1dHSnNjRmhaYkdoRFZVWnNjVkZZWkd4U2JWSjVWakl4UjFaR1NsVldibWhYVW0xU05sUldXa3BsUjA1SFYyMW9VMVpVVm5aV2JURjZUVlpKZUZaWWJHcGxhMXBaV1d0YWQwMUdXbGRWYTA1YVZtdHdSMVl5ZUZOV2F6RklWV3Q0VmsxV2NGUmFSV1JQVWpGU2MxcEZOV2xXTWxFeVZtMXdSMkV3TVVoU2JrcFBWbTFvVlZsdGN6RlZNV3h5VjJ0MFdsWnNTbFpWVjNRd1ZsWmFjMk5JYkZwV1ZuQlFWbFJHWVdNeFpITlhiRnBPVm10d1dWWnNaSHBsUmxsNVZHdGthVkp1UW05VVZtaERWbFphZEdORlpGVk5WWEI1Vkd4YVlWUnNXbk5UYXpsV1lsUldSRlJ0ZUdGamJIQkZWV3hhVGxaWGR6QlhWRUpYWWpGVmVWTnNhR3hTYldoWVdWUkdZV0ZHV2xWU2JYUllVakZLU0ZkcldtdGhWbHBZWkROd1dGWXpRbEJaVkVwSFZqRk9jbHBHYUdsU2EzQllWMVprTUdSck1VZGpSbWhzVTBWd2NsUldXbmROUmxGNFdraGtWazFFUmtwVlYzUXdWakZhZEZWWVpGcGxhM0JJVldwR2ExZFhUa2hoUms1VFZrWmFXVlpyV2xkaE1WVjVWbTVPYVZKR2NGVlpXSEJ6Vmtac2MxWnRSbFJpUmxwWlZGWm9UMVl4U25KalJtUmFUVVpaZDFZd1dtRmpNazVKVTJ4V2FFMXNTbFJYYkZaaFZUSk9kRkpyYUdsU2JFcFVWbXRhWVU1R1duTmFSRkpvVFd0c05WWldhRzloVms1R1kwYzVWbUpHVlhoV2JGcGhZMVpHZEZKc2FGZGlhMHBZVjFaV2EwMUdXWGhUYmtwcFVrWmFhRlpzWkc5Tk1WbDVZek5vVTAxWFVqRldNbmgzVkd4SmVGTnJNVmRXUlZwb1ZXcEtUMlJHVG5KaFIyaFRZbFpLVUZaR1kzaGhNRFZ6VjI1T1ZtRXdOVzlVVjNONFRsWmFSMkZJVGxkV01GWTBXVEJqTlZack1VZFhhM2hhVFVad1YxcEVSbUZqYlZKSFZXMXNVMDB5YUZwV2Frb3dWVEZWZVZKWWJGUmhNWEJ4Vld4a05GbFdiRlZUYlRsV1VtMTRXRlpzYUc5V01ERldUbFJHV0dFeGNETlpWVlY0WTJzeFNXRkdaR2xYUjJoNVZsZHdSMkV4VGtkWGJrcHBVbTFvY0ZWcVJrdFdWbHBIV1hwR2FVMUVWbnBYYTFwdllXeEtXRlZzWkZWV00wMTRWVEZhVm1WWFVraFBWbHBUWWtoQ05sWnFTWGRPVmxsNVVtNUtUMWRHY0ZaV2ExWmhWakZ3UlZKdVpGUldiRW93V1RCVk1XRkhWbk5YYTJ4WFRWWndXRmxxUmtabFZrcHpXa1pXYUUxWVFsWlhWbEpQVVRGc1YxZHVVazVXYTNCUFZXMDFRMUpzVm5SamVsWlhVbXRzTTFrd1ZuZFdNVW8yVW1wT1YxWkZXbUZhVm1SSFVsWlNjMkZHWkU1TlZYQTBWbXRrTkdFeFRYbFVXR2hUWW1zMVYxbHJhRU5VTVZKV1ZtNWtWV0pHY0RCYVJXTTFWbXN4Vm1OR2FGZGlXR2hZVm10YVlWSXhaSE5VYkZaWFlraEJlbFpxUm1Gak1rNXpXa2hPVldKSFVrOVdiRkpYVTBaYVNHVkdXbXhTYkhCSFZGWldhMkZzVGtsUmJHaFdZV3MxZGxacldsZGpWa3AxV2taU1UyRXpRWGRYVjNSaFlURlplRk5zWkdwU2JFcFlWRlprVW1ReFduRlNiVVpyVW1zMVdsZHJaSE5VYXpGelUyNWtWMVl6VWxkVVZscFhZekZrZFZOc1dtaE5SRlo1Vm0weGVtVkZOVWRYYTJoUFZsaFNWbFJWVWtkV01WcDBZMFU1VjAxVmJ6SldiVEZ2VmpGYU5sSnJlRlpoYTFweVdrWmFkMUl4Y0VkYVJrNVhZbXRLVjFacVNqUmhNRFZIVlZoa1QxWnRhRlJaVkVwVFkxWldkR1ZIUmxoU2JHd3pWMnRqTlZkSFNrZGpTR2hXVFZkb2NsbHJXa3RqTVU1MVkwWmthVmRHU2pKWFYzUmhVekZaZVZScldrNVdiSEJZVld4b1ExWldXbGxqUldSclRWVTFXVlV4YUhkWlZrcHlVMnhvVjAxR1drZGFWVnByVmpGV2NrOVdTazVXYkhCSVZrWmFWMWxXVVhoWGJHUllZbFZhWVZacVRsTlVSbHBHVjIxR2ExSlVSbGRYYTFwclZHeGFjbU5FV2xkaVZFSTBXa1JHVTJNeFVuSlhhemxYVWxoQ1dWZFdaREJaVmxsNFkwWmFXR0pGTlZoVVZtUlRWMnhzVmxwSVpGZFNhM0I1V1RCYWExWXlTbFZTV0dSV1pXdHdXRmw2Um1Ga1ZsSnpWbTFzVjFKc2NETldNV1F3Vm1zeFYxcElUbWxUUlhCWVdXdGtVMkl4Vm5SbFNFNVBZa2Q0VjFadGNFTldNa3BXVm1wV1YxWjZWak5XTWpGWFkyMU9SbVJIUmxkV2JrSlpWMnRhWVZJeVVraFRhMlJWWWxob2NGWXdaRzlUVmxweFVtMUdXbFl3VmpOVWJGWnZWbTFLY2s1V1ZscFdSWEIyV1RCYVZtUXhXbFZTYlhCVFlrVndXRlpxU2pCTlIwVjNUVlpvYkZOSGVGbFdNR2hEVjBaYVZWSnNjR3ROVjFKNldXdGtSMVl4V1hsaFJ6bFhZbGhDU0ZVeU1WZFhSbHB5WWtkd1UySklRbEJXYlRFMFpERmFWMXBHVmxKaVdGSlZWRlpWTVZJeFVYaFhiazVXVFd0d1dWbFZXbTlXVmxwR1kwaGFWMUpXY0doV01HUlRVMGRTU0dORk5XaGxhMVYzVm0xMGEwNUdiRmRYYmxKVVltdHdWVmx0ZEV0V01XeDBUbFZPYkdKSVFsZFdNalZQVmpBeFdWRnJXbGRXTTJoVVdWWmFTMWRXUm5KalJtaFhUVEZLTWxaclVrZFpWa2w0V2toT1lWSnNTbkJaYkZwTFlVWmtWMVZyWkZwV01WcDZWbTAxVDFsV1NsaFZiR3hXWVd0YWFGVnFSbkprTVdSeVQxWmFUbEpGV1hoWFZsWlRXVlprUjFkWWNGSmhNbWhZVm10V2QxVkdWWGRYYXpscVlsVmFTRlZYZUd0V01rcEpVV3BLVjJKVVJqTldSRXBLWkRBeFdWUnNaR2xoTTBKdlZsUkNWazFYVGxkVmJHaHJVMFUxVUZadE1UQk5NV3hXVm1zNWFGSnNjSGxaTUZweldWWmFWMWR0YUZkTmJtaG9Xa1ZhVjFaV1JuUlNiRTVPVFcxb2RsWnNVa05oTVUxNFZHeGtWbUpzU25CVmJGSlhWa1pzVlZSclNteGlSbXcwVjJ0U1EyRkhSalpXYkdoV1RXNW9kbFpVU2t0VFIwWkpWR3hhVGxKdVFYcFdiWFJoVmpKT1YxUnVSbFppV0dod1ZXcE9iMDVHV2xkYVJGSlZUV3RhZWxVeGFHdGhiRXBZWlVaYVZWWnNjRE5XTUZwelZteGtjMk5IZUdsV1ZuQklWMnRXWVZsWFJrWk5XRTVVWVd4d1dWWXdhRU5VUmxWNVRWWmtXRkpzU25sWmExcExZVlpaZW1GR1ZsaGlSMDQwVkd0YVNtVkdjRWRhUm1ocFYwWktVVlpYY0VkVE1sWnpWbGhzYTFKNmJHOVdiWE14VWpGU2MyRkZUbGRXYkhCNlZqSjRhMVpYU2tkalJrSmhVbTFTVEZVeFdrOWtSMDVIVkd4a1UwMXRVVEpXYlRFd1lUQXhSMVpZYkZOaVJuQlBWbXhhZDJOV1ZuUk5WazVhVm14d01GcFZhR3RXYkVwelkwaHdXR0V4VlhoWlZFRjRZMnN4VlZac1ZrNVdia0l5Vm0xd1IxbFdTbk5hU0VwUVZtMVNjRll3Vmt0VFZtUnlWV3QwVmsxVmJEUldiVFZQV1ZaS2NtTklRbHBYU0VKWVZteGFZV014Vm5Ka1IyaE9Za1Z3V1ZadGVHOWlNa1pIVkd0YVQxWnNTbGhaVjNSTFlVWlplRmR1WkZkaVJuQXhWMnRhWVZSc1dsaGtla1pZWWtaYWRscEVSbXRrUmtwMVUyMXdVMUpVVm1oV1JsWnJWVEZTUjFadVVrNVdXRkpVV1d0YWQwMUdiRlpYYlhSVllYcEdNRmxWVlhoV01rcElWVmhrV2xaRmNFOWFWbHBUVjFkR1IxWnRiRk5pYTBwWlZqRmplRTFHVFhsVWEyUlhZbXMxYUZWcldrdFdSbXh5V2tSU1dGSnRVbmxXVjNoUFlVVXhjbU5HWkZkTmJrSkVWakl4Um1WWFJrZFJiR1JvVFZoQ2IxWnRjRWRVTWxKWFkwVmthbEl5YUU5WldIQkRUa1paZUZWclpHaE5WV3cwVjJ0V2IxWXlSWGhqU0VaV1lsaE5lRlpyV2xOWFJUVllUMVU1YVZKdVFsZFdWekUwWVRGYWNrMVlTazlXVjNoWFZGYzFVMlJzV2xaWGJYUlRZa2RTTUZReFdtdGhSMFkyVm1wS1YxZElRa2hXYWtwUFl6Sk9SbUpHVm1sWFJVcFFWbTE0VTFZeFpFZFhiazVhWld0YVUxUlhkR0ZYUmxWNVpVYzVhVkpyY0ZoWk1HUkhWakpLVlZKc1RsVldWbkJYV2xaa1YxSnRVa2RWYkU1T1UwVktURlp0ZEdwbFIwMTRWVzVTVkdKcmNGVlpWM014VjFaYWNWUnNUbGhTYlhjeVZXMTBNRmRHU25KalNIQmFWbGRSTUZaVVJtdFNiRTV6Vm14a1YwMHdTazFXUjNSclZqSk5lRmRzYkdoU2JWSndWV3hTVjJWR1dsaGpSVTVyVFZWc05GbHJhRXRXTWtwSVZXMDVWbUpZYUhwVWJYaHpWbXhXY21SR2FHbFNiVGg1Vmxjd01XUXhaSFJXYmtwWVlrVktXRmxzYUc5WFJuQkhWMnRrYTFJd2NFaFdSM2hyVkdzeGRHRkZiRmRoYTFwb1YxWmtSbVF3TlZaYVJsWnBZWHBXVmxkV1VrdGlNazVIVmxoa1YxWkZXbGhXYlhoM1pXeFplV1JFUW1oTlJFWlpXbFZvYzFkR1pFbFJiR2hhVmpOb1lWcEVSbXRqTWtwSVVteGtWMkpIT1RaV2JYaFRVakZPZEZac2FGZGhNbmh4VlcwMVEySXhiRlZVYTBwc1lrZFNWbFZYTVRCV1JURldZMFJDVmsxdVVtaFdha3BMVjBkR1IyRkdWbGRTV0VJeVZtdFdZVmxXWkVoVmEyaHJVak5DVDFsWWNFWk5WbHBWVW0wNWFrMVhVakJXYlRWVFlrWktXV0ZIYUZkaVZFWlRXa1JHZDFKV1NuTlVhemxwVWxad05WWkVSbUZVTVZWM1RWVm9hMDB6UWxoV2ExWjJUVVprVjFwRlpGTk5WMUl4VlRKek5WWXlTa2xSYldoWVlrZFJkMVY2UVRGak1rcEpVbXhPYVZkR1NsbFhWbWgzVWpGWmVGVnNaRmhpV0ZKV1dXdGtVMUl4VlhoaFIzUlhUV3RXTkZrd1pHOVdiRnBHWTBVNVlWWldjRkJaZWtaWFpFWktjazVYYUdsU2JrSllWbTB4ZDFFeVJYZE9WV1JVWW1zMWNGVnRNVk5oUmxaeVYydDBWMVp0ZUhsV2JUVnJWa1phZEdWSWJGcFdWbFV4V1ZWYVlWWldTbkZTYkZwWFpXeGFlVlpxU1hoU2JWWkhXa2hXYWxKc2NIQlZha1pMVTFaYWNWRnRkRmROVlhBd1ZrZDBhMVpYU2taT1ZUbGFZbFJHZFZSWGVHRmpNVlp5V2taa1RsWnNXVEZXYTJRd1lqRmFTRkpZYUdwVFJVcFhXV3RhZDJGR2JIRlNiVVpxVm14S01GUXhWVEZoVmtsNllVWndWMUpzY0haV1JFcEhZMnN4VjFkck9WZGlWa3BaVm0wMWQxWXhTa2RpUm1SWVlUTlNVRmxzVm5kVGJHeFdWMjVrVjAxcmNGaFZiR2hyVjBkRmVWVlVRbFpsYTFwUVZUQmFUMk50U2tkV2JXeFhUVEpvVVZac1kzaE5SMUYzVFVob1lWSnRhSEpWYWs1RFZVWmFjVkZVUmxoV2JGb3dXbFZqTldGV1NuSmpSbkJXVmpOb1ZGWnRNVWRqYlVvMlVXMUdWMDB5YUZoWGJGWmhXVmROZUZWdVVtcFNhelZQVlRCV1MxTldXWGhhUkVKWFRWWnNOVlZ0ZEd0WFJtUkpVVzA1Vm1KSGFGUldha1p6VmxaT2MxUnRlR2xTTTJONVZsUktNR1F5U2tkWFdHUlBWbGhDVjFadWNFZGxiRnBWVW14d2JHSlZXa2RYYTFwdlZqSktTVkZ1YkZkU00xSnlWbFJLVG1WR2NFbFRiV2hUVFc1b1ZsWlhlRk5XTWxGNFYydGtXR0pWV2xWVVYzaEhUa1pzY21GRmRGZE5hM0I1Vkd4YVUxWXlSbkpUYldoWFRWWndNMVp0TVVkVFJrcDBZVVpPVGxORlNtRldNbmhYWWpKUmVGZHVTazVXYlZKWldXdGFTMWxXVWxaYVJrNVZVbXhhTUZSV1ZqQlZNa3BIWTBSQ1dsWldjSEpXUjNONFpFZEdSazFXWkdsU01VWXpWMVpTUzFSdFZsZFZiR3hvVW14YWNGVnROVU5YUm1SWVRWUkNWRTFyTlVoV2JUVlhZV3hPUms1WVRsWmlWRVV3VmpCYWEyTnNWbk5VYkdSVFRVaENTRmRVUWxkak1XUjBVbGhzYUZKclNtRldiWGhYVGtad1IxZHJaR3RXYmtKSVdUQmtiMVJzV25WUlZFcFhZa2RSTUZsVVJrcGxSbkJHWVVaa2FFMVlRbmhXVnpGNlRWWmFSMVZzYUU5V2VteFFXV3RrVTFkV2EzZFdha0pvVWpCWk1sbHJXbXRYYXpGSFUyeG9XbFpXVmpOYVJFWlBZekZLYzFac1pGZGlSbGt3Vm14a05GbFhUWGxVYkdSVFltdHdjbFZ0TVZOalJscHpWMjVrV0Zac2NIbFhhMUpUVmpBeGNsZHViRlZXYkZwNlZteGtTMk15VGtkaFJsWlhZa2hDV1ZaSGRHRlpWa2w0V2toT2FsSXphRlJVVlZKWFV6RmFjMXBFVWxkTlZtdzFWV3hvYTJGc1NrZGpSbWhYWVdzMWRsWlZXbk5rUlRGV1pFZHdUbFpyY0RaWFYzUnJZekZWZUZkdVRtcFRSbkJZV1d4b1ExVkdiSEZTYXpWc1VteHdNVlV5TVVkV1JrcFZWbTVvVjFKdFVYZFpla0YzWlVaa2MyRkZPVmRXVkZaMlZtMHhNR1JyTVhOaVNFcFlZbFZhV1ZsclduZE5SbHBYVld0T1dsWnJiRFpaVldSdlZtc3hTRlZyZUZaTlZuQlVXa1ZrUzFKck5WZGFSMmhPVFVWWk1sWnRjRWRoTURGSVVtNUtUMVp0VWxsWmEyUnZWa1pzY2xwSE9XcE5WbFl6VmpJMWExWXhTbk5YYm1oV1RXNUNWRmxyWkV0U01WcHhWV3hrYVZkSGFGRlhWbVEwVTIxUmVWUnJXbWxTYkZwUFZtcEtiMU5XWkZkV2JVWllZbFphTUZWdGRHRmhNVXB6WTBjNVZWWXphRXhVYlhoclYxZE9SbHBHVms1V2JrSTJWbTB3TVZZeFZuUlRiR2hzVW14S2FGWnVjRVpOUmxKeVYyMTBWMDFYVWpCYVJWVTFWVEpHTmxacVdsZFdSVzkzV1dwS1IxWXhVbkpYYXpsWFlrWndXVmRYZEdGa01WSkhZMFZXVTJKck5YRlphMXAzVFZaYVNHVkZPVmROUkVaSVdUQmFkMWRIU2tkWGJHaGhVa1ZhVjFwVldrOVhWMHBJWlVaU1ZGSlZjRzlXTVZwclRVWk5lRmRyWkdoTk1sSm9WV3hvVTFaV1ZuTlZiazVZVW14d01GUldZelZXTURGRlVXcFdXR0ZyTlhwV2FrcExWMVpXZFZOc2NHeGhNMEpRVjJ4YVlWUXhaRmhUYTJocVVteEtWRlpzYUVOTk1WcHpXa1JTYUUxRVZraFZNalZQWVZaS2RGVnRhRlpoTVhCTVdUSjRjMk5zV25WYVJsSlhZbGhvTlZkV1ZsWk9WMFpIVjJ4V1UySkhhRmRVVjNCWFkyeFplVTFWV214V2JFcFdWVzE0YTJGV1NYaFRhMnhYWVd0S2NsWnFSazlXTVhCSlZHMUdVMkY2VmxCWFZ6QjRZbXN4YzFkWWFHRlRSMUpVVkZaYVYwNVdXa2hrUnpsWFVqQldOVmxWV2tkV01rcEhZMGRvV21GcldtaFpNVnBUWkVVNVYxVnJOVmRpU0VFeFZtcEtNR0l4VVhsU2JrcE9WMFZ3Y0ZWcldtRlpWbEpXV2tjNVUxSnRlRmhXTW5Rd1ZESktWbU5GYUZkTmJtZ3pWbXBLUzFZeFNsbGFSbWhvVFd4RmQxWXhXbUZVTVU1SFZHNUthVkpzV25CV2FrNXZWVVphV0dWSFJsZGhla1pZVm14b2MxUXhaRVpPV0VaYVlrWlZlRlZxUmxKa01rWklaRVprVjAxR1dUQldWRWt4VVRGYVYxZHNaRmhoYXpWWVdWZDBZV1ZzV25GU2JYUnFZWHBzV0ZkcldtdFViRXBHVm1wYVYwMVhhRE5WTW5NeFZqRndSbHBHYUdsU2JIQlZWMVpvZDFZeFpFZGlSbWhyVWpCYVQxUldhRU5TTVZsNVpVVTVWMDFFUmxkV01uQkhWakZKZW1GR1FsZGlXRTQwV2tWYVYyTldTbk5hUm1SVFZtNUJlVll4V210bGF6VlhWMWhvVTJKck5WZFphMmhEVkRGU1ZsWnVaRlZpUm5Bd1drVmpOVlpyTVZaalJtaFhZbGhvV0ZacldtRlNNV1J6Vkd4V1YySklRWHBXYWtaaFl6Sk9jMXBJVGxWaVIxSlBWbXhTVjFOR1draGxSbHBzVW14d1IxUldWbXRoYkU1SlVXeG9WbUZyTlhaV2ExcFhZMVpLZFZwR1VsTmhNMEYzVjFkMFlXRXhXWGhUYkdScVVteEtXRlJXWkZKa01WcHhVbTFHYTFKck5WcFhhMlJ6VkdzeGMxTnVaRmRXTTFKb1YxWmFZVkl4V25WU2JGSm9Za1Z3ZWxkWGRHRldNRFZIVjI1U2JGSlViRzlaYTFaelRURnJkMVp0ZEZoaVZWWTBWako0YjFkc1dsZGpSMFpoVm5wR1NGVnRNVk5TTVdSMFlVVTFhVkpYT0hsV2FrWnZaREZKZUZWWWFGaGlhelZZV1cxNFlWVXhiSE5hUkZKWFVteHdlRlpITURWVk1ERllWV3hvVjAxcVJYZFdSRVpMWTJzMVdXTkdXazVpYkVveVYxWmFZVlF4U25KT1ZtUlhZa2RTY0ZWdE5VTlVWbVJ5Vld0a2FrMXJOWHBXTWpWWFZsZEtSazVXYUZWV1ZuQXpWako0YTJNeFduTmFSM1JPVm14Wk1GWlVSbTlqTWtwSFZHdHNVbUpWV21GV2FrNVRZVVphY2xkdVNtdE5XRUpIV2tWYVUxVXhXa2hsUjBaWFZucENORmxxUmxwa01ERkpZa2RHVGsxdWFGcFdiVEI0VkRBMVIySkVXbFJoZWxaelZtMXpNVmRzYkhKYVNHUlhVbXR3VjFrd2FHdFdNVm8yVm1wT1dtVnJjRmhWYWtwTFVqRndTRkpzVGxOaE0wSTFWakZrTkZZeGJGWk5WV1JwVTBWd2IxVnNVbk5pTVZwelZXdGtUbFpzV2xsVWJHUXdWMGRLVmxacVZsZFNiRXBJVm0weFMxTkdWbkpoUm1ST1VqRktXVlpVUm1GaE1rMTRWVzVPVldGNlZuQlpiR1JxWlZaYWNWSnRkR3ROVlZZMFZteG9jMVpYUlhsaFJsWmFWa1Z3ZGxaV1dtRmpNV1IwVW0xc1RsWnVRalJXYTJOM1RsWlNkRk5yWkZoaWJYaFpXVlJLYjFWR2JGaGpNMmhxWWxWd1JsWkhlR3RXTWxaelYydFdXRlpzY0doVmVrRXhaRVpPY2xwR1ZtbFNia0pWVjFab2QxWXlWa2RhUmxaU1lrZFNUMVZ0ZUhkWFZscFlaRWRHVjJKVmNFZFpNRlUxVjJ4YU5sSlVRbFppUm5Cb1drVmtWMU5IVWtoalJUVlhZbXRLU2xadGNFdE5SMDE0VjJ4b1UxZElRbTlWYkZKSFZqRnNjMVZyV2s1U2JIQkdWVzB4UjFVeVNraFZha0poVWxad00xWnFRWGhUVmtaellVWmtVMkpJUW05V1YzQkxVakZaZUZSdVRtRlNiVkp3V1d0b1ExWnNaRmRhUkVKVVRXeGFlbFpYTlU5WFIwVjZWV3hXVm1GclNqTlZNbmhoVTBkV1IxUnNaRTVXYmtJMVYxUkNVMVF4WkVkWFdIQldZa2RvWVZwWGRHRlVSbGwzVjJ0MGFrMXJXa2xhVlZwUFYwWktWbU5HV2xkaVIxSXpWWHBCTVZOR1duVlViR1JZVWpKb1dWZFhkRlpOVjA1WFZtNUdVbUp0VWxSVVZtUTBaVlphZEdWSGRHaFNhM0I2V1d0U1lWZHNXbGRUYTNoWFlXdHdSMXBXV2xka1YwNUhZMGQ0YUUwd1NrMVdNbmhoWVRGUmVGUnNaRk5pYkVwd1ZXMXpNV014YkhOaFJ6Vk9VbXhzTkZZeU1VZGhSVEZGVm10c1YxWjZWbFJXVkVwTFl6Rk9kVkZzV2s1U2JGWTBWMVJDWVZVeFpFWk9WbHBWWWxoU1QxWnFUbTlPVmxsNFlVaGtWMDFyV25wV01XaHJWMGRLU0dWSGFGZGlSMUoyV1ZWYWMxWnNjRVprUm1oVFRWWndTMWRVUW1Ga01rWklVbGh3VWxkSVFsbFdhMVpMWTJ4V05sSnJPVk5oZW14WVdXdGFUMkZXV1hsaFJteFhVbXhLVEZsdE1WZFdNWEJIV2tad1RrMXRhSGhXUm1SNlpVVTFWMVpZYUdoU2VteFlXV3hXZDJWV1ZYbE9WVTVYWWxWd1NWWldVa05XYlVwWllVaHdWMkZyV2pOVmJGcFhZekZXZEdKR1RsaFNWWEJNVm1wR2EwMUhTWGhWV0doWVlUSlNXVmxyWkZOV1ZteDBUVlpPV2xadGVGWlZiVEZIWWtkS1IxZHVjRmhoTVZweVZqQmFTbVZHWkhKYVJuQk9VbTVDVVZac1VrSmxSMUpZVW10V1dHSkhVbGhWYkZwM1YxWmFjMVZyZEZWTlZUVklWa2MxUzFkSFNsaGxSbEpYWWxob00xcEhlR0ZrUjA1R1QxZHNUbEpGV2paV2JUQXhVekZzVjFScldrOVhSVnBXVm1wT1UyVnNVbFZTYlVaWVVsUldWMVpITVc5V01rVjVUMGhzV0ZZelVtaFhWbHByWXpGa2RWVnNXbGRTVlhCdlZsZHdUMkl4WkVkWGJrNVhWMGRvVlZWc1VsZFdNWEJXVjIxR1ZXSlZjSGxVVmxKaFZqSktSMk5HVWxaV1JWcFRXbFphVjJSV1VuTlViV3hvWld4YVdsWXhZM2hOUmsxNFYxaG9WbUpIVWxsWlZFNVRWVVpzY2xkc1pFOWlSM2g1VjFod1YxZEdTWGRqUldoV1RXNW9jbGRXV21GV01rNUpWMnhrVGxJeFNrMVdiWGhoVXpKT2NrOVdaR0ZTYlZKWVZGWldWMDB4V25OWk0yaE9VbFJHU0ZVeWRHdGhiRXBYWTBoR1ZtRnJOWFpXTUZwaFpFZFNTVnBGTlU1V01VcGFWMnRXWVdFeVJuSk5WbHBxVW0xNFYxbHNhRzlrYkd4eVYydDBXRlpyV25wV1YzaGhZVWRGZVU5SVpGaGlSMUV3V1hwS1QxWXhUblZVYkZacFYwVktWVlpHVm05Uk1VNXpWMnRXVTJKVWJGUlVWM1JoVTBaWmVHRklaR2hTYTNCSFdUQmtSMVl5U25WUmEyaGhWak5vZWxSdGVFOWpiVTVJWlVaa1RsSkdXa3hXYkZwcVpVZE5lRlpZYkZkaWJFcHpWV3RhUzFkV1duUmxTR1JxWWtaS2VWZHJXazloTVVweVkwUkdWMVo2Um5wV2ExcExWbFphZFZwR1pGTmlWVEUwVmxaU1MxVnRWa2hUYTJ4VVlraENjMWxyV25kbFJscDBZMFZPV2xadFVsaFpNRnBoWVVaSmQxZHRPVlpoYTBvelZqRmFkMVp0UmtsYVJtaHBWbFp3TlZkVVFsTlVNV1J5VFZWb1ZtRXphRmRVVlZwV1RWWlplRmRyZEd0U01GcElWMnRWTVZSdFNsaFZWRVpYWVd0YWFGbFhNVmRUUmxKWllrWldXRkl6YUZaV2FrSnJUa2RPVjFaWVpGZGhNMUp4VlcxNFlVMVdhM2RoUlRscFVtdHdNRnBWV205WFIwVjRVMnhTVjJFeVVreFZiVEZQVW0xS1IyTkhhRTVpVjJoU1ZtMHhNRmxXYkZkWFdHaFZZbXhhYUZWdE5VTmlNVkpYVjI1a1QySkdjRmxhVldRd1ZUQXhXRlZyYkZkaVdGSm9XVmQ0UzJOck5WZFZiRlpYWld4YU1sWkhNVFJaVmxwWFUyNU9ZVkpzY0U5WldIQlhVMnhhVlZOcVFscFdNRnBZVlRKNGExZEhTbFZpUm1oYVZqTk5lRnBIZUZkT2JFcHpXa2R3YVZORlNrdFdhMk40WkRGU2MxZHNWbGRpUjJoWVdXdGtUbVZHVmxWVGEyUlhUVlUxZWxsVlpEUlZNVnAxVVcxb1YySlVRalJXVjNONFVqRmFXV0pIZUZOWFJrcFdWbGR3UTJReFRuTlhhMmhzVW1zMVdGUldXbmRsVm10M1ZXczVXRkpzYkRaV1Z6VkhWbGRLUjJORmVGZE5SbkJNV1hwS1IxTkhWa2RWYkU1cFlUQndWMVp0ZUd0a01VMTNUbFZvVjJKck5YQlZNRlpoVmtac1ZWSnVaRlpXYkhCNldWVldTMVJzV25SbFJscFhVak5TVUZadGVFdFdWa3B5V2taV2FWSnNjRmxXYWtsNFVqSk9jMVJ1U214U2JWSndWbXRXWVZOV1duUmpSV1JXVFdzeE5GWXlOVk5oYkVwVlZteFdWbUpHU2xkYVZscGhaRWRPUmxwR1pHbFdiSEJKVm14a05HRXhaRWRhUldob1UwVmFWMVJWV25kVVJscDBaVWRHYTFJeFNrZGFSV1EwWVZaS2MyTkVXbGRoTWs0elZGWmtSMWRHVG5KWGF6bFhZbXRLYUZkV1VrZFpWbVJIWWtaYVdHSklRbk5aYkZaaFVteFZlV1ZIZEdoU1ZFWjZWVEp3WVZkR1pFbFJhM2hXVFdwR1dGWXdXbE5qYlVwSFUyMXNWMDB5YUZaV01uaHFaVVUxUms1VlpHRlNiVkpaV1d4b1UxVkdWbkZTYTNST1VteGFNRlJzV2s5aFJscHlUbFZrVldKSGFFUldiRnBoVG14YWNsVnRSbE5TVm5BMlYxUktOR013TlhOWGJsSnFVbTFTVDFWdE5VTlpWbGw1WlVaa2FVMVhlRmxWYlhSdlZrZEtTR0ZJVGxaTlIyaEVWMVphYzFkSFVrbGFSVFZPVmpOUmVsWXlkRmROUmxwSFUyeFdhVkp1UWxkWmJGSkhaR3hhY1ZGWVpHeFdiVGsyV1d0YWIxWXlTbFpPUkVKWVYwaENURlpITVZkV01WSnpZa2RzVTAwd1NsWldWM2hYWkRKUmVGZHNhRTlYUjFKeFZGZDRZVk5HYkhKWGJYUmFWbXR3U0ZVeU5VdFhiVXBIVjIxb1ZWWldjSHBaTWpGSFVtczVXR0ZHWkZkU1ZtdzBWbXhhYWsxWFJYaGFTRkpUVjBkNFZsWnJWbUZaVmxKWFdrWk9WRkpzYkROWGExcHJWVEpLVms1VmFGZFNNMmhRVmtjeFMyUkdjRFpUYkdST1ZqRkplbFpYY0VkV2JWWlhWVzVLYUZKc1NtOVVWekZ2Vld4YWRHVkhSbHBXTUd3MFZqSTFSMVpYU2xWaVJsWlZWbXh3YUZwV1dtdGpiVVpHVDFkb2FHVnJXbGhXUjNoaFlURlplRmRxV2xkaE1VcGhWbTE0ZDFSR1dYZGFSbVJUWWtkU2Vsa3dXbXRoVmxweVZtcE9WMDF1VW5KVWExcE9aVVpTY21GR1VtaE5ibWhYVjFkNGEwNUdVWGhYYmxKclUwZFNUMVJXWkZOWFZuQkdWMjEwYUdGNlJsZFpNRnB6Vm0xS1dXRklXbHBoTVhCUVZXcEtUMUl4Vm5OWGJXaG9UV3BvTTFZeWVHdE9SMDE1Vkd4a1ZHSnJOVlpaYkdoRFZrWlNWbUZGVGxSaVJuQkdWVzB4UjFZd01YSlhhMmhYVFZkb00xbFZXa3RTYlU1SFlVWndWMUpZUWxWWGJHUTBZekExYzFOdVNsQldiVkp3VlcxNGRtVkdXbGRaTTJocVRWWldORll4YUhkaFJrcFlWV3hzVjJKWWFETlpNbmhUWTJ4d1IxUnRjRTVXVkZZMVYxWldhMk14V2tkVGJGWlhZbTFTV0ZWdGVIZFhSbHAwWTNwR1YwMVdTakZXYlRGelZrWktXVkZ1YUZkV00yaFVXV3BCZDJWR1pISmhSM1JUWVhwV2RsWnRlRk5TTVVsNFlUTmtXR0pZVWxsWmExcDNaV3hyZDFkclRsZE5hM0JKVmxkek5WbFdTa1pqUlRsaFZteFZNVlpxU2tkU01YQkhXa1pPVjJKclNsSldiVEIzWlVkUmVGTlliRlpYUjNoWFdWUktVMVl4YkhKYVJrNVdUVmQ0TUZremNFZFdNVXB6WTBaYVZrMXFSWGRaVkVaaFl6RmFjVlZzY0ZkV01taFJWbXhTUjFkdFVYaGFTRTVwVWpCYVdGWnFTbTlpTVdSWFZtMTBWRTFYVWtsV2JYUnpZV3hLZFZGdE9WcFdSVFZEV2xkNGExWldSblJrUmxKT1ZsUldTRlpFUm1Gak1WVjVVMnhvYUZKdGFGWldhMVozWkZad1YxZHRkRmROVjNRMldWVmtkMVJ0UmpaU1ZFWlhWa1ZhZGxsNlNrZGpNVkp5VjJ4U2FXRXdjRmhYVnpBeFVUSldjMk5HV2xoaWF6VllWRlpvUTFKc1dsaE5WRUpvVm14d1dGbHFUbXRYUmxsNlZXNWFWMUpGY0VoV2JYTjRWMVphYzFOdGJHbFdhM0J2VmpGYVUxTXhVbkpOVm1Sb1RUSm9hRlZzWkZOWFZsWnhVbTFHVkdKR2JEVlVWbU0xWVVaYWMySkVXbHBXVmtwb1ZqQmFXbVZzUm5KbFIwWlRVbGhDVVZaVVFtRlVNazUwVW10a1VtSkhhRlJXYlRWRFRXeGFkRTFZWkZWTmEyd3pWRlpvVDJGV1NuUmhSVGxYVFVaVmVGa3hXbE5YUjFKSlZHczVWMkpZVVhwWFZsWlhWREpHUjFkdVNtbGxhM0JoV1ZSS2IyUnNXWGxsUjBaclVteGFWbFZYZUdGVWJVcDBZVVV4VjFaRlNuSlZla1pQVmpGV2RWUnNXbWxTTVVwWlYxWlNUMUZ0Vm5OWFdHaGhVa1ZLYjFsWWNGZFhSbGw1WlVjNVZrMXJjRWxaVldoUFZtc3hSMk5FVGxkaE1YQllXVEZhVDJOV1ZuUmxSMnhUWWtacmQxWnRNSGhPUmxGNVVtNU9WRmRIVW5GVmJHUTBWbXhTVjFkdFJsaFNiWGhYVmpKNGQySkhTbFpYYTFwV1RXNW9jbGxWVlhoak1VNXhWMnhvV0ZORlNrMVdWRWw0VmpGSmVGZHVWbGRpUlhCd1ZtcE9iMVpXWkhOWk0yaFBVbXhzTkZkcldtdFhSMHBaVld4Q1ZtRnJXa3hhVjNoYVpWZFNTRTlYYUZkaGVsWklWa2Q0YjFFeFdsZFhiazVxVWxob2FGVnJWbUZsYkd0NVpVaE9UMkpHY0hwWGExcHJWR3hLZFZGdFJsZE5ibWhZVm1wS1VtVkdXbGxoUmxKWVVqTm9lbFpVUW05Uk1WbDRWV3hrV0dKVldsaFZiVEV3VFRGa2NsWnFRbFpOYTNCWFdUQldhMVl5U2xWU2JscFhZV3RHTTFwV1pFZFNiVlpIV2taa1RrMVZjRFZXTVdoM1V6RlNkRlpzWkZWaVIzaHdWVzAxUTJNeGJITmhSemxWVm0xU2VsWXlNVEJVYkVsNFVtcFNWMVl6UW1oV1Z6RkhUbTFLUjFWc1dtaGhNSEEyVmtaU1IxWnRWbGhXYTJoVFlsZG9WRmxyYUVOT1ZscElaVWRHV2xadFVqQldiVFZMVmtkR2MyTkhSbHBXTTFKb1dUSjRZV1JIVFhwaFJtUm9aV3RhV1ZZeWRGWk5WbVJIVTJ4YWFWSkZOVmhaYkdoVFlVWmtWMWRyV214V2JFcGFXVlZhVTJGV1NuSmpSemxYVW0xU00xWnFSbUZXTVdSWldrZEdVMUpyY0ZWWFYzUnJUa1prUjFwSVNsWmlSVFZ2VkZkMGQxWXhXWGxqUlU1WVlsVldOVmxWV2tOWGJGcHpWbXBTWVZKc2NFaGFSbHAzVWpKT1NHRkZOV2hsYTBrd1ZtcEdVMUl5UlhoVFdHaGhVbGRvV0ZsVVNqUlhWbXh6V2tjNWFsSnNjSGhXUnpBMVZESktTRlZzYkZwTlJsbDNXVlJCZUdOck5WWmlSbHBPWW14S01sWnNWbUZoTVVweldraFNVRlp0VW05WldIQlhUV3hhUjFwRVVtcE5WMUpIVkZaYWMxWlhTbGxSYXpsYVZrVnZlbFJXV210V1ZrWjBUMVpLVG1FeGNGbFdWRXAzV1ZkR1YxUnJhR2hTTUZwWVdXeFNSMVV4VWxaWGJtUlVVbFJHVjFkclpEQlZNREZKVVd0MFYyRXlUalJaZWtaVFpFWk9kVk5zVW1oaGVsWmFWbTF3VDFVeVRsZFZiazVoVWxSc1dWVnRkSGRsYkd4V1drUlNWMUpyY0RGVlZ6VmhWMFpaZW1GSVNsVmhNbEpZV1hwS1MxTldTbk5WYld4cFZtdHdORlpzWkhkUk1sRjRWR3hrVmxkSGFHOVZiR1JUWWpGV2RHVklUazlpUjNoWFZsZDBNRmRIU2tkaWVrcFdZbFJXTTFZeU1WZGpiVTVHWkVkR1YySldTbEZXVkVaaFVqSlNTRk5yWkZWaVdHaHdWakJrYjFOV1duRlNiVVphVmpCV00xUnNWbTlXYlVwelUyeFNXbUpZYUV4Wk1GcFdaREZhVlZKc1pGZGlTRUkyVm1wS01FMUhSWGROVm1oc1UwZDRXRmxzVWxkVlJscFZVbXh3YTAxWFVucFphMlJIVmpGWmVXRkhPVmRpV0VKSVZUSXhWMWRHV25KaVIzQlRZbXRLZGxkV1VrOVJiVlp6V2taV1VtSllVbFZVVmxVeFVqRlJlRmR0ZEZkTmEzQlpXVlZhYjFaV1drWmpTRlpoVm14d2FGcEZaRk5UUjFKSVkwVTFhR1ZyVlhoV2JGSkhZakpKZUZkdVVsUmlhM0JWV1cxMFMxWXhiSEphUmtwT1VteGFNRnBWYUU5V01ERlpVV3RhVjFZemFGUlpWbHBMVjFaR2NtTkdhRmROTVVveVZtdFNSMWxXU1hoYVNFNWhVbXhLY0Zsc1drdGhSbVJYVld0a1dsWXhXbnBXYlRWUFdWWktXRlZzYkZaaGExcG9WV3BHY21ReFpISlBWbHBPVWtWWmVGZFdWbE5aVmxsNFYydGFXR0pIYUZoV2ExWjNWVVpWZDFkck9XcGlWVnBJVlZkNGEySkhTa2RqUmxKWFlsaG9WRlY2UmxKbFZsWlpZVVpXV0ZJeWFGaFhWbVF3VXpGYVIxWnVVbXRTYlZKUVZtMTRSMDVHV25SamVsWlhUVVJHV0ZsclVsZFpWbHBYWTBab1YyRnJjRWRhVm1SSFVqRkdjMXBHVGxkaVIzZDZWbXhrZDFNeFRYaFRia3BQVm0xU1dGbHJWVEZqUmxwMFpFaGthMkpHYkRSWGExSlRWakpLVjFkcmFGZGlXR2gyVm10a1JtVkhUa2RoUm1ScFltdEtObFpyVm1GVk1WcHpZMFZXVldGNlZsaFphMXAzVGxaWmVXUkhPVlZOYTFwNVZGWm9TMkZXU2tkWGJVWlZWbGRTZGxWclduTldNV1J5WkVVNWFWWllRa3RYVmxaaFpERlplVk5zWkZOWFIxSlpXVlJLVDA1R1ZuRlRiRTVVVW1zMWVWbHJXbGRoVmxsNllVWkNXRlo2UlhkVmVrRjNaVVp3UjJGSGRGTk5NRXBSVm0xd1FrMVdaRmRXYmxKc1VucHNjRlZ0Y3pGVFJtdDNXWHBXV0dKVmNFbFdWbEpEV1ZaWmVtRkljRnBOVm5CUVdrWmFkMU5IVGtkVWF6VlVVbFZ3VEZadGRGTlNNa2w0VTFoc1UyRXlVbGxXTUdoRFlqRldjbFp1WkZwV2JIQXhXVEJXYTJKSFNraGtla3BXVFc1U00xbHJXbHBrTURWV1kwWmFWMlZyV2paV2JGSkxWakpTU0ZaclZsWmlSMmhZV1d0b1EyVldXa2hrUjBaVlRXc3hORlpITlV0aFJrbDVaVVpXVm1KR1NsaFdiWGhoWkVkV1NGSnNVazVpUlZrd1YxZDBiMU14WkhSV2JrNVlZbXRhV0ZsWGRFdGhSbGw0VjI1a1YySlZXa2xWYlhoaFZHeGFXR1I2UmxoaVJscDJXa1JHYTJSR1NuVlRiWEJUVWxSV2FGWkdWbXRWTVZKSFZtNVNUbFpZVWxSWmExcDNUVVpzVmxkdGRGVmhla1l3V1ZWVmVGWXlTa2hWV0dSYVZrVndUMXBXV2xOWFYwcEhWV3hvVTAxVmNGbFdNV040VFVaTmVWUnJaRmRpYkZweFZUQlZNVmRHYkhKYVJGSllVbTFTZVZaWGVFOVdNVWwzWTBWa1drMUdXbnBXTWpGR1pWZEdSMUZzY0ZkaVJsa3dWMnRhWVZJeVVsZGpSV1JxVWpKb1QxWnROVUpOYkZweldrUlNhRTFWYkRSWGExWnZWakpGZVdWR2JGcGlSMUoyV1RCYVlXTldVblJQVlRscFVtNUNWMVpYTVRSaE1WcHlUVmhLVDFaWGVGZFVWelZUWkd4YVZsZHRkRk5pUjFJd1ZERmFhMkZIUmpaV2FrcFhWMGhDU0ZacVNrOWpNazVHWWtaV2FWZEZTbEJXYlhoVFZqRmtSMWR1VGxwbGExcFRWRmQwWVZkR1ZYbGxSemxwVW10d1dGa3daRWRXTWtwVlVteE9WVlpXY0ZkYVZtUlhVbTFTUjFWc1RrNVRSVXBNVm0xMGEwNUdWWGhYV0doWVltdHdjVlZyVlRGWFZscHhWR3hPV0ZKdGR6SlZiWFF3VjBaS2NtTkljRnBXVjFFd1ZsUkdhMUpzVG5OV2JHUlhUVEJLVFZaSGRHdFdNazE1VTJ0c1UySkdTbkJXTUZaTFZXeGFkR1ZIT1ZKaGVrWllXV3RhVjFaWFJYZE9WbVJXWWtaS1NGVnFSbE5qTVZweldrWm9hVlpXY0RWV1ZFb3dUa1paZVZOc1ZsTmhNbWhZV1ZkMFlWWkdiRFpTYlVaclVqQTFSMVJzV2xOVk1WcEhWbXBXVjJKVVJqTlZha1poWkVaYWNscEdXbWxTTVVwYVZtcENhMkl5VGxkV1dHUllZVE5TV0ZsclduZE5SbkJHVm1wQ2FWSXdjRWhXTWpWM1ZqRktObEZZYUZwV2JWSk1WVzF6TVZZeVRrZGpSMmhPVm01Q1dsWXhXbGRaVm1SMFZtNVNVMkV4V2xWWmEyaERWMFp3V0dSSFJrOWlSMUphV1RCV01GWkhTbGRYYkd4WFVqTlNlbFpYTVV0WFIxWkhWVzFHVjJWclZYZFdSM1JoWVRGWmVGcElVbXRTVkd4VVZGWldkbVF4V2xoTlJFWldUV3RhV0ZaSGRHRlVNV1JHVTJ4YVYySnVRbGhWYTFwM1VsWktkVlJ0Y0dsU00yTjVWbTB3ZUdReFdYZE5WV1JxVW01Q1dWbHJXbUZrYkdSWFdrVmtWRkpyTlhwWlZXUTBWa1pPUmxOdGFGaFdiVkYzV2tSQmQyVkhSWHBhUjBaVFYwWktWbFpYZUZOak1XUnpWbTVTVGxaNmJGaFVWVkpEVGxaa2NWUnVUbGhTYkhBd1ZrZHdVMWR0Vm5KalJUbGhWbXh3VUZZeFpFdFRSMDVIVld4T1YxZEZTWHBXYlhocVRWZFJlVlJZYkZkaE1sSndWVzB4VTJGR1ZuSlhhM1JxWWtkNGVsWnRNVWRVYkVwMFpVaHNXbFpXVlRGWlZWcGhWbFpLY1ZKc1dsZGxiRnA1Vm1wSmVGSnRWbGRWYkZaVFlraENUMVpxUmt0VFZscHhVVzEwVjAxVk5WaFhhMmhUWVVaSmVXVkdhRlZXUlhCMVZGZDRZV014Vm5KYVJtUk9WbXhaTVZaclpEQmlNVnBJVWxob2FsTkZTbGRaYTFwM1lVWnNjVkp0Um1wV2JFb3dWREZhVTFSc1duTmpSRlpYVFc1U2RsWkVTa2RqYXpGWlUyMXNVMUpVVmxsV2JUVjNWakZLUjJKR1pGaGhNMUpRV1d4V2QxTnNiRlpYYm1SWFRXdHdXRlZzYUd0V01WcEdZbnBDVm1WcldsQlZNRnBQWTIxS1IxWnRiRmROTW1oUlZteGplRTFIVVhkTlNHaGhVbTFvY2xWcVRrTlZSbHB4VVZSR1dGWnNXakJhVldNMVlWWktjazVWYUZwTlIwMHhWakl4UzFOR1ZsVlJiVVpYVFRKb05sZFVSbUZUTWsxNFZXNVNhbEpyTlU5Vk1GWkxVekZhY2xWclpGcFdiR3cxVlcxMGExZEdaRWxSYlRsV1lrZG9WRlpxUm5OV1ZrNXpWRzE0YVZJelkzbFdWekY2VGxaWmVWTnJaRmhoYTFwWFZtNXdSMlZzV2xWU2JIQnNZbFZhUjFkcldtOVdNa3BKVVc1c1YxSXpVbWhXUkVwT1pVWlNkVk50YUZOTmJtaFdWbGQ0VTFZeFduTlhibEpzVWpCYVZWUlhlRWRPUm14eVlVVjBWMDFyY0hsVWJGcFRWakpHY2xOdGFGZE5WbkF6Vm0weFIxTkdTbk5qUm1ST1ZtNUJNRlpzV21wTlZsbDRWMnRhVGxac2NGQldNR1EwVm14c1dHUkhSbE5OV0VKR1ZXMTRUMkV4V25SVmJuQldUV3BHZWxaVVNrdFRWa1paWTBaa2FWZEhhRlZXVjNCSFZtMVdWMWR1VmxWaVJscHZXV3RhZDJSc1dsaE5SRVpTVFZad2VsWXlOVTloUmtvMllrWnNWMkpZYUhwVWJGcFRWbTFHU0U5V1pGZE5TRUpKVm1wS01HTXhiRmRYYkdSWVlsZG9XRlZzV25kU01YQlhWMnhrYW1KV1NrbFZiWGhyWVZaS2RWRnNXbGROVmtwRVdWUkdUbVZHVW5KWGJFSlhZbGhvVlZkWGVHdGlNV1JIVld4V1ZHSlVWbk5XYlRGVFYwWmtWVlJ0T1doaGVrWjVWRlpTVjFack1WaGhTSEJhVmpOb1VGVnRlRTlrVmtaelYyMXNhV0V3YnpKV01uaFhXVmROZUZkWWFHcFNWbHBYV1d4b1UyTkdXbk5YYmxwclRWZFNXVnBGWXpWV1ZURnlWMnhrVlZadGFGaFdWekZMWkVaV2RGSnNjRmRTV0VKUVZrWmFZV050VmtkalJWcGhVbTFvVkZSV1duZFRNVnB4VTFob2FVMXJXbGhXTVdoM1lVWktSMk5HYkZkaGF6VkVWa1ZhZDFKV1RuSlBWbEpUWVhwV05WZFdWbUZSTVdSSFUyeGthbE5HY0ZoWmJHaERWVVpzY1ZGWWFHcE5hM0JJV1ZWVk1WZEdTbFZXYm1oWFVtMVJkMWw2UVRGV01rVjZXa2RvVTFaVVZuWldiVEV3WkdzeGMySklTbWhTZW14WldXdGFkMDFHV2xkVmEwNWFWbXR2TWxWdGRHOVpWa3BZVld0NFZrMVdjRlJhUldSTFVtczFXR0pIYUU1U2Vtc3lWbTF3UjJFd01VaFNia3BQVm0xb1ZsbHJaRzlXUm14eVdrYzVhazFXVmpOV01qVnJZVlV4V0dWSWNGaGhNVXBVV1d0a1MxSXhXbkZWYkdScFYwZG9VVmRXWkRSVGJWRjVWR3RhWVZKdVFtOVVWbHAzVjFaa1YxWnRSbGhpVmxvd1ZXMTBWMVpIU2toVmJUbFZWak5vVEZSdGVHdFhWMDVHV2taV1RsWnVRalpXYlRBeFZqRldkRk5zYUd4U2JFcG9WbTV3UmsxR1ZuRlNiWFJYVFZkU01GcEZWVFZWTURGV1lqTmtWMVo2UVhoV1ZFcEhWakZTY2xkck9WaFNWWEJYVm0weE5HUXhVa2RqUlZaVFltczFjVmxyV25kTlZscElaVVU1VjAxRVJraFpNRnAzVjBkS1IxZHNhR0ZTUlZwWFdsVmFUMWRYU2tobFJsSlVVbFZ3V1ZacldtRlpWbXhYVjJ0a2FFMHlVbWhWYkdoVFZrWnNjMVp1WkZOTlZuQXdWRlpqTlZZd01VVlJhbFphVmxaWk1GWnFSbHBsYkZaMVUyeHdiR0V6UWxCWGJGcGhWREZrV0ZKclpGaGlWM2h2VkZWb1EwMHhXbk5hUkZKb1RVUldTRlV5TlU5aFZrcDBWVzFvVm1FeGNFeFdiRnB6WTJ4YWRWcEdVbGRpV0dnMVYxWldWazVXV1hoVGJrNXFVbTFvVjFSWGNGZGpiRmw1VFZWYWJGWnNTbFpWYlhoM1lWWmtTR0ZGVmxkaVdGSm9XVEl4VjJNeFNuVlRiWGhUWWxaS1ZsWlhNVEJrTVVsNFYyNU9XR0pGTlZWWldIQlhWMFpXYzJGSE9WaFNNSEJKV1ZWb1ExWnRTbGxoUlhoWFRVWndWMXBFUm1GV1ZrcHpWbXhrYUdWclZqWldiWEJLVFZaUmVGZHNhRlJoTWxKVldWUktiMWRXYkZWVGJFNVVVbTE0V0ZZeU1VZFdNVnB5WTBod1ZrMXVhRE5aVlZWNFZqSk9SMkZHYUZkTk1FcEZWMnRqZUZWdFZsZFVia3BYWWtkU2NGVnNVbGRXVmxwSFdYcEdhVTFFVm5wWGExcHZZV3hLV1ZWdVNsVldNMDE0VlRGYVZtVlhVa2hQVmxwVFlsWktTRlpxU1hkT1ZsbDVVbTVLVDFkR2NGWldhazV2Wld4WmQxWllhRmhXYkVvd1dUQlZNV0ZGTVhWWk0yaFhUVlpLUkZscVJrWmxWa3B6V2taU2FHSklRbmRXVkVKcllqRnNWMWR1VWs1V2EzQlBWVzAxUTFOV1VsZFdiWFJvVFZWc00xa3dWbmRXTVVvMlVtNXdWMUo2Umt4Wk1uaFBZMVpTYzJGR1pFNU5WWEEwVm10a05HRXhVWGhhUldSVVltczFiMVZxVG05V1ZsWjBUbFZPYTJKSFVsbGFWV1F3VkRGSmVGZHVjRnBoTW1oSVZtdGtTMlJHVm5WU2JGcG9ZVEJ2ZWxaVVJtRlZiVlpJVW10YVlWSXlhRlJaYTJRelRXeGtWMVpzVGxSTlYxSjZWakp3WVZVeVNuVlJiVVpoVmpOU00xVjZSbmRXTVhCR1QxWlNWMkV4YjNkWFYzUmhWREpLU0ZOc2JHRmxhMHBZVkZaYWQyRkdiRlZSVkVaVVVteGFNVlpYZUU5aFYwcEdZMGhrVjFaRlNsZFVWbVJQVWpGV2MyRkZPVmRXVkZaNVZrWmFhMDVIVmxkYVJteHFVbTFTYjFsclduTk5NVmw1WlVoT1dsWnNjRmxaVldSdlZqRmFSbGRyZEdGV2JWSllWVEZrVDFJeVRraGhSMmhPVFVWWk1sWnFSbE5STWtWNFZGaG9WV0V4Y0ZGV2JURTBWa1pzYzFwSE9WaFNiRXBXVlRJd01XSkdXblJWYkdoWVZrVTFkbGxYYzNoamF6RlZWbXhhVGxZeWFIbFdiVEI0VXpKT2MxUnVWbEppUm5Cd1dXMTBTMDVzV2xoTlZGSnFUVlpzTkZrd1ZsZFdiVXBIVTI1Q1ZtSkhhRVJWTW5oclYwZFNTRTlXVms1aE1YQllWa1phVjJFeFdraFRibEpXWWxWYVlWWnJWbmRVTVZKWFYyMUdhazFZUWtkWGExcHZWVEF4VjJORmFGaFdSVXBvVmtSR1ZtUXdNVmxXYldoVFVtNUNXVlp0ZEZkWlZtUkhWMnhXVkdGNmJGVlZiWE14WlZaWmVVMVlUbFpOVm5CNldUQm9ZVll5U2xsUmJFSmFZV3RhVDFwVldtRmtWazUwVW14U1UxWkdXalJXYTFwclRVZE5kMDVXWkdoTk1sSnZWV3hWTVdJeFduUmtTR1JZVm01Q1YxWnRNVWRYUjBwSFkwUkNWMVpzU2tSV2JYTjRaRmRHUm1WR1drNVNNVXBOVmxSR1lWVXlVa2hUYTFwUFZqSjRXRlpyVmtkT1JscHpWV3R3VGxZd01UVldSelZUVmxkRmVHTkdSbFpOUjFKVVZtMTRjMVpXU25Ka1IzQlRZa1Z3V0ZadE1ERmhNVmwzVFZab2JGSnRhRmhVVnpWT1RWWmFjVkpzY0d0TlJFWldWa2Q0ZDJKSFJYbGpNMmhYWVd0S2FGZFdXbUZXTVU1MVUyczVWMkpXU25aWFZsSkhaRzFXYzFwSVNsZGlWVnBYVkZaYWMwNUdWblJPVm1SWFZqQndSMVJzV210V1ZsbzJVbXhTVlZac2NHaFdiRnBMWkVVNVdHTkZOVmRYUlVwaFZteGplRTVIU1hsVGEyUlZZVEpTY1ZWdWNITlpWbXh5V2taS1RsSnVRbGxhVldoUFlXeGFjazVVUmxoaE1sSXpWbFJCZUZOV1JuSmpSbVJUVWxad01sWlhjRXRTTVVsNFdrWnNhbEl5YUZSVmJHaERZVVphZEU1WVpGTk5iRnA2V1d0U1lWWkhSWHBSYms1WFlXdEZlRlV5ZUZkWFJURlpWR3hhVG1KR2IzZFhiRlpUVlRGa1IxZHVUbXBUUlhCV1dWUktVMVpHY0VaWGEzUnJWbXhhTUZscldsTlZNVnBIVjJwT1YyRXhjSEZVVmxwR1pWWldXV0ZIYkZSU1dFSm9WMnhrTkZsWFRsZFhia1pTWWxWYVdWWnROVU5XTVd4V1drVmthRkpyYkROWk1GcHpXVlphV0dGRVRsZE5ha1pJV1RJeFQxSldVbk5qUlRWVFRWVndUbFpzVWtOV2F6VlhXa1prVkdKc1NtOVZiVEZUVkRGU1dFMVhkRTlXYkd3MFZqSXhkMkpHU1hkTlZGWlhVbTFvZWxacldtdFRSMVpKVW14YVRsSnNjRTFYVkVKaFZqSlNXRlJyYkZWaVdHaFVXV3hvYjFkV1dYbGtSazVXVFd0V05WVXllR0ZYUjBaeVUyMUdXbFpGY0haV1ZWcGhZMnhrZEZKc1pFNVdWRlY0VmpKMFlXUXlSa1pOVm1ScVVrWndXRlpxVG05amJGWnhVbTEwVkZKc2NIbFdNakYzVlRKR05sWnNWbGRTYlUxNFdXcEJNV014WkhOV2JFNXBVakZLV0ZaR1pIcE5WazVYVmxoc2ExSXdXbTlXYlhSM1YwWlplVTFFVmxkTmExcDVWR3hvWVZadFZuSlhiR2hhVFc1b00xVXhXbE5rUjA1R1RsWmtWMUpzY0ZwV2JURTBZV3N4VjFKWWJGTmlSMUpWV1d0a2IyTXhWbk5YYm1SYVZteHdNRlJXV2t0VWJFcHpWbXBXWVZaV1dYZFdhMXBLWkRKT1JtTkdaRk5OTW1oVlZtMXdSMWxYVG5SVWExWlZZa2RvV0ZSVVJrdGxSbHBJWlVkMFZVMVhVa2hWTWpWUFlVWkplbUZHVWxkTlJscE1WbXhhWVZkSFRrWmtSVGxUVFZad05sWnRlRzlpTVZsNVUydGFUMWRGV2xkWlYzUkxUVEZWZUZkc1NteFNiVko2VjJ0a2IxVXlTa2hrZWtwWVZteGFWRlY2Um1Ga1JrcFpZa1phYVdKclNtaFhiR1F3V1ZaV1IxZHVVbXhTYlZKeVZtMTBZVTFHYkhKWGF6bFhUVVJDTlZsVlZtOVdNREZYWTBkb1dsWkZSWGhWTUZwWFpGWlNkR05HVGxOaWEwcFJWbXhqTVdReFdYaFZiR1JZWWtaYVZWbHROVU5VTVZKWFYyMUdWMkpHV2xsWk0zQlhZVVV4Y21ORlpGZE5hbFl6Vm1wS1MxWldXbkpWYkdScFYwVTBNRlp0Y0VkVU1rNVhXa2hPV0dGNlZrOVpiVEZ1WlZaYWRHTkZkRTlTYkZZMFZqSTFVMVl5UlhsVmJUbFdZbFJHZGxrd1dtRmpiRnAwVW14YVUySklRalpXYlRCNFRVWlJlRk51U21wVFIzaG9WV3hhWVZaR1pGZFhhM1JZVm10YU1WWkhlR3RoVmtwMVVXc3hXR0V4U2toWmVrcFBZekpLUlZkc1pHbFhSVXBaVmtaV1lXUXhaSE5hU0U1WFlsUnNZVlpxUW1GVFZsVjVaVWM1YVZKck5VcFZWekZIVjJ4WmVsVnFUbFZXUlZwNVdrUkdkMUp0VWtkVmJFNVhVak5vYUZac1kzZGxSMGw0VjFoa1RsTkhlR2hVVkVvMFYxWmFkRTFWT1U5U2JYY3lWVEp6TVdKR1duSk9WbkJhWVRKU00xWnJXa3RXYlU1SldrWmtWMlZzV1hwWFdIQkxWakZKZVZOclpHRlNNRnBVVlcxMGQyVldaRmhsUm1SYVZsUkdTRmxyYUV0aFJrcFZZa2M1VjJKR1NraFVWbHBYVjBVMVdHUkdhR2xXVmxreFZtdGFVMUl4WkhKTlZtaFdZVEpvV0ZSVlpGTlhSbFY0VjIxMGExSXdXa2xaYTFwclZHc3hkRmt6YkZkaGExcHlXa1JHVG1WV1ZsbGlSbFpvVFcxb1ZsZFdVa3RpTVZaWFYxaGtWMkpWV25CVVZscDNaVVphU0UxRVZsVmlWWEJKV2xWYWMxWldXblJoUmtKYVZqTk9ORmt5TVV0U1ZscHpZMFUxVTAxdGFFWldNVnBoV1ZaTmQwNVlVbFJoTW5odlZXMDFRMWRHYkhOWGExcHJUVmRTZVZkclVsTlhiRnB5VGxWc1ZrMXVVbnBXYkdSTFYwZFdSazlXV21sWFJrbDZWa1pTUjJFeFpFaFZhMmhxVWxSc1dGbFVUa05YYkZwWVRWUlNhVTFyY0VoV1IzUnJZV3hLYzFOc1pGcFdNMUl5VkZWYWQxZEhWa2xVYlhCWFlURndObFpyWTNoa01WVjNUVlZzVW1FelFsaFZhMVpoVjBaYWNWTnJaRk5OVjFKYVdUQmtiMVV4U2xsUmJHaFlWbXhLVEZaVVNsZGpNa3BGVjJ4U2FFMHdTbnBXVnpFMFdWVXhWMVpzYUU1WFJUVlhWRlphYzA1c2JGWldiWFJZVW14d2Vsa3dhRXRXVjBWNFkwWkNXbVZyV2xCWk1qRkhVMGRLUjFWc1RsZFNiRzk2Vm0xMFlXRnJNVmRTV0d4V1YwZG9jRlV3Vm5kWFJteDBZM3BHVjFKc2NIaFZWekZIVjBaYWRWRnNaRmRpVkZaeVZtMXplRlp0U2tWV2JVWlhWakpuZWxadE1YcGxSbGw0V2toT1ZtSklRazlWYWtaTFZGWmFXRTFJYUZSTlZYQjZWakkxVTJGR1NuUlZhemxWVm5wR2RsWkdXbUZqTVhCRlVXMW9UbUY2UlRGV2ExcHZZakZhV0ZOclpHcFNiVkpoV1d4b1UxUkdhM2RYYkdSclZqQTFTbFpITVRCV01rcEhZMFZzVjJFeVRqUmFSRXBIWXpGT2MySkdXbWxTYmtKdlZsZDRZVmxXV2tkWGJHaHFUVEpvY1ZacVFuZFNNVnBZWlVkMGFGWnJiRFJWTW5CaFZqSktXVlZ0YUZoV2JIQlFWbXBHVjJSV1RuUmxSazVZVWpKb1ZsWXhaRFJpTWtsNFZtdGtXR0pyY0ZoWmJGWmhZakZTVjFwRVVsaFdiRlkxV2xWa1IxWlhTa2RqU0d4WFRXcFdSRlp0TVV0U01rNUhZVWRHVTAweWFGRlhWRVpoVWpKU1YxVnVTbEJXYlZKdlZGUkNTMU14V1hoYVJFSnBUVlpHTlZWdGVHRlViR1JIVjJ4T1dtSlVSbFJYVmxwelZsWk9jazVWTlZkaVdGRXdWakowVjJFeFpFZFRXR2hZWVROQ1dGUlhjRWRrYkd4WFYyeHdiR0pWV2taV01uaHZWakF3ZDFOck1WaGhNVXBNVmtSR1QxSXhVblZUYldoVFlUQndXbFpYZUdGa01sSnpWMjVTYWxKVWJIQlVWVkpIWld4c2NsZHRPVlZpUjFKSFZHeG9SMVpXV1hwVmJuQlZZa1p3ZVZwRVNrZFNiRkowWVVaa2FFMXFhRFZXTVdRd1lqSkplRnBJVGxoaWJFcFhWbXRXUzJGR1ZuVmpSV1JVVW01Q1IxZHJWakJXUmxwelUycENXbUV4VlhoWlZtUkdaREpKZW1OR1pFNVdNVVl6VjFaa2VrMVdaRWRWYms1b1VtczFjRlZxU205bGJGcFZVVzFHYTAxcmJEUlphMmhQV1ZaS1IxTnVUbHBoTWxFd1dsVmFWbVZWTlZoa1IyaHBVbGQzZWxkVVFsZGpNVnBXVFZab2FGSlhhR0ZXYkZwM1dWWndXRTFWWkZOV2F6VjZXVEJhYTJKSFJYaGlla3BYVFZkb00xVjZSazlrUmxwellVWldhRTF1YUZSWFYzaHJUa1phUjJOR2FFNVdSa3BVVkZaa1UxZEdXWGxOVkVKVlRWVnNORlV5TlhkV2F6RjFWVzVhV2xac2NGQlZiWE14VjFaR2MxWnNaRmRpYTBwT1ZqSjBVMUl5VFhsVWJrNXBVa1p3V0ZsclZURlhSbEpXVjI1a1dHSkhVbnBXYlRBMVYyeGFjMVpxVWxaTlYyaDZXV3RhVDFOV1JuUlNiSEJYVFRGS1RWWnRkR0ZqYlZGNFkwVmFhMUpzU2xSV2EyUTBWMFphZEUxSWFHbE5WbXd6VkZWb2MxbFZNSGxsUm1oYVlrZG9WRmt5ZUhOT2JFNXlUbGQ0VTJKRmNEWldha28wV1ZkR1dGSllaR3BUUjFKWVZtcE9iMk5zVW5KWGEzUnFUV3R3U0ZkclpFZFZNVXB5WTBoc1dGWXphRmhYVmxWNFVqSktTVk50YUZOV1IzaFpWbGN4TkdReFpFZFdXR3hQVmpOU1dWbHNWbGRPUmxsNVRsaGtWMkpWY0VsV1YzUnZWakF4U0ZWc2FGWmlWRVpRVldwR1UyTXhVbkpPVjJ4cFZqSk9OVlp0TVRSVk1VbDRWMWhvVjFkSGVGWlpWRXB2Vmxac1ZWSnVaR3BTYkZwNlZqSXhSMkZWTVZkalNHaFhVbnBCTVZaclZYaFdNV1IxWWtab2FFMXRhRkZYVm1SNlpVZE9kRk5yVmxkaVIyaFpWVEJXUzA1c1dsbGpSWFJYVFZkU1NWWlhkSE5aVmtwelYyNU9XbFpGU2pOV1ZscGhWMGRTU0dSR1VtbFdhMWt3Vm10ak1WUXhaRWhUYkdob1VtMW9ZVll3YUVOWFJscHhVbTEwV0ZZd05VZFdSekUwWVZaYVdHUjZRbGROYmxKb1YxWmFVMk14WkhOV2JFNXBVakpvVjFadE1IaGlNVXBIVld4YVdHSlZXbFJVVm1SVFpWWmFTRTFZWkZWaVJuQmFWVmQ0WVZZd01YVlJhM1JWVm14d2FGVnFSbmRTYlVaSVpVWk9WMkpyU205V2JUQjNaVVpXY2sxVlpHcFNWMmh6Vld4b1UxWldWbkZSYm1SVVlrWndTVlJXYUU5V1YwcFdZMGhzVmsxdVFsQldNRnBhWld4V2RWSnNWbWxTTVVwUlZtcENZVk15VFhsU2EyaHNVbXhLVkZsdGRFdE5iRmw0V2tSU2FFMUVWa2xXYlRWUFlWWk9SbGRzVmxwaVZFWlVXVEZhVjJOV1JuVmFSbEpYWWtWWk1GZFdWbGRoTWtaSFUyNU9hVkpHY0dGV2JGcExWRVpaZVdWSFJrOWlSWEF4V1RCYWQySkhSWHBSYTNoWVlrWndjbFpFUms5V01VcDFWVzFzVTJGNlZucFhWM2h2WW1zeFIxZFlhRmhpVlZwdlZGVlNWMU5XV2xoT1ZrNVdUV3R3ZWxVeU5VTldhekZIVmxob1drMUdjRlJXTUZVeFZteFNkR1JGTlZkTk1tY3hWbXBHYjJReFdYbFNiazVZVjBkU1dWbHJaRFJoUmxweldrYzVhRkp0ZUZkWGExWXdWMFpKZUZkcmNGcE5SbkF6V1ZWa1JtVnNSbGxqUm1oWFVsVndlVlpZY0VkVU1VcHlUMVprYVZKck5YQldha3B2VjFaYVIxVnJkR2xpVmxwWVYydGFhMWRyTUhsaFNFWlZWak5PTkZSc1dsWmxSMFpKVkcxb2FWSlVWa2hXVkVreFVURmFkRk51VmxKaWJrSlhXV3hvYjJWc1duRlNibVJUVm14YU1GcEZaSE5WTVdSR1UydDBWMDFYVVhkWmFrWlNaVlpLYzFkck5WZFdNVXBXVjFjd2VGVXhiRmRpUmxaVVlYcFdUMVp0ZUdGbGJHUnlWbTEwV0ZKcmJEUldNblIzVmpBeGRXRkdRbGRXUlVZMFdrWmtSMUpXWkhOaFJtUk9UVVZ3UmxadGVGTlRNVkY0Vkd0a1ZXSnJjRmxaYkdRMFZrWmFkR1ZJWkd0aVJuQXdXVEJWTldGVk1WWk5WRkpYWWxSV1RGZFdXazlTYXpWWlVteFdWMkpHVmpSV2JYQkhXVlprUms1V1dsVmlWMmhZV1ZST1ExZHNaSE5XYkdSYVZtMVNlbFl5TlZOV2JGcEdVMnhrVlZaNlZuWldSVnBXWkRGd1JtUkdVbGRpUlhBMlZteGtOR0V4V1hsU1dIQlNWMGhDV0ZSV1pGSmtNVnB4VTJzMWJGSnJOWHBaVlZwUFlWWkplV0ZJY0ZkV00yaDJWVlJHWVZJeFduVlNiRkpvWWtWd2VsZFhkR0ZXTURWSFYyNVNiRkpVYkc5WmExWnpUVEZyZDFadGRGaGlWVlkwVmpKNGIxZHNXbGRqUjBaaFZucEdTRlZzV2s5ak1rWklZa2RzVjFJelVUSldha1pxWlVVeFJrMVZaRmhoTW1oVVdWZDRkMkZHVm5Sa1NHUlZUVlphZWxaWGVHRmlSbHB6WTBab1dHRXhTbFJXYWtGNFkyczFWbUZHWkdsU01tZ3lWbTB3ZUZNeVVsZFNiazVYWWxWYVdGbHNXa3ROYkZsNFYyMUdXbFpyYkRSV01qVkhWbTFLU0dGR1VscGlSbkJMV2tSR1lWSXhaSE5YYXpWWFlraENObFpVUm05a01rWkhVMnhvVm1KR1dsWldiRnBXWlVacmVXVkdXbXhXVkVaWVYydGFhMkZXU25OaU0yaFhWbTFPTkZsNlJsWmxSbVJaWTBkb1UxWXhTbHBXYlRFMFpESk9jMVZ1U2xoaGVteHhWRlpWTVdWV2JGWmFTRTVYVW10d1ZsWnROV3RXTVVwMFZGaG9WbFpGY0ZOYVZXUkxVMVpPYzJOSGVHbFNia0kwVm0weGQxRXhiRmRhUm1ScVVteHdiMVZxUW1GaU1WWnhVVzVrV0ZadVFsZFpWV2hyVjBkS1ZsZHViRnBOUmtwUVZqSnplRk5HVm5KbFJscE9VbXhWZUZacVJtRlRNbEpJVW10a1lWSlVWazlaYkdSU1RWWmFjVkp0Um1oaVZscEpWa1pvYzFaV1pFaGxSbFpYVFVkUk1Ga3hXbFprTVZweVpFZHdVMkpHYjNoWFZFSnZWREpLUjFOdVVteFNiV2haV1ZSR1MxWkdiRlZUYTNSWFlrZFNlRlZYZUhkaFJURjBZVVpHV0Zac2NGZGFWV1JUVmpGS2RWWnRSbE5pYTBwMlZrWmtlbVF5VmtkYVJsWlRZbGhTVkZSV1pGTlRWbHAwWkVoT1dGSXdjRmxaVldoRFZqSkdjazVZV2xWaVdHaHlWakJrVDFKdFVraGtSVFZvWld4YVMxWnNVa3ROUjBsNFZtdGtZVkpXY0ZsWmJGSnpWMFpzV0dONlJtdGlSa3BaV2xWb1QxZEdTbFZTYkhCWFVucEdNMVpITVVabFYxRjZZMFprYVZJd01UUldWbEpMVWpGWmVGUnVSbGhpVjNoVVZtMDFRMkZHV25STlNHaFdZWHBHU0Zac2FITmlSa3BaVld4V1ZtRnJTak5WTW5oaFUwZFdSMVJzWkU1V2JrSTFWMVJDVTFReFpFZFhXSEJXWWtkb1lWcFhkR0ZVUmxsM1YydDBhazFyV2tsYVZWcFBWMFpLVm1OR1dsZGlSMUl6VlhwQk1WTkdXblZVYkdSWVVqSm9XVmRYZEZaTlYwNVhWbTVHVW1KdFVsVldiWGhIVGtac1ZsWnRkR2hTYTNCNldXdFNZVmRzV2xkWFdHUlhZbFJHUjFwV1dsZGtWMDVIWTBkNGFFMVlRbEpXYlRCNFRrWlplVlZzWkZOaWJFcHdWVzF6TVZkR1VsVlRiVGxVVW14c05GWXlNVWRoUlRGRlZtdG9WMUo2VmxCV2EyUkdaVmRHU1ZGc1drNVNiRlkwVm0xNFlWbFhUWGhhU0VwclVqTlNUMVpxVG05T1ZscDBUVVJHVlUxV1ZqUldNV2hyVjBkS1NHVkhhRmRpUjFKMldWVmFZV05XU25KalIzaFhUVlp3UzFkVVFtRmtNa1pJVWxoa2FsSlhhRmhWYTFaaFYwWndSVkZVUmxoU2EzQmFXVEJhUzJGV1NsWmpSa0pYVmpOb1ZGWnFSa3RqTVhCSFlVZHdVMVpVVmxaV1JscGhaREF4UjFadVVteFNNMUpZVm1wQ2QxTkdXWGxPVldSWFZteHdXVmxWV2tOWlZrbDZZVWRHWVZaV2NHaFdNV1JIVWpGYWMxcEhiRk5OTWs0elZtcEdVMUV5U1hoV1dHaFlZa2RTV1ZsdGRIZFdWbXgwVGxWT1YwMVhlSGxXYkZKSFlURmFkR1ZFUW1GV1ZsVXhWakJhV21ReVRrWmFSbVJwVmtWYU1sWnRjRUprTWxaWVVtdGFiRkp0VWxoVVZFWkxaVlprV1dORmRGVmlWbHBJVmxjMVQxZEhTa2RqU0VKYVZrVktNMXBFUm1GWFJUVlpXa2R3VGxaWVFqWlhWM1JoWVRGc1YxTnJaRlJpYTNCaFdXdGFZV0ZHVWxaWGJrNXFZbFZhUjFReFpHOVdNVnBHVjFob1YxWnRUWGhaVkVaclpFWktXV0pHVmxkU1ZuQm9Wa1phYTFVeFRrZFhXR1JoVW0xU1ZWWnRNVk5OUm14V1draE9WMDFFUWpWWGJuQkxWakF4V0ZWcVRsWmxhM0JUV2xaYVUyTnRSa2RWYldoT1lsZG9VMVp0Y0VOV01XeFlVMWhvV0dKcldsWlpiRkp6VkRGc2NscEVVbGhXYkVwWVdWVlZOV0ZIUmpaU2JteGFZVEZLV0ZZeWMzaFRSMFpHVld4d1YySklRazFXUnpCNFV6Rk9XRkpyWkdwU2JWSndWbTEwVjAweFdYbGtSM0JzVW10c05WWlhkRzlXUjBWNVpVWmFXbUpIVVRCV1JFWnpaRWRTUm1SRk5VNVdNVXBhVjJ0V2EyUXhVWGhYV0dSUFZtMTRWMWxzYUc5a2JHeHlWMnM1VTAxck5VbFVNVnAzWVZaSmVGSllaRmhpUjFFd1ZtMHhWMUl4WkhWVWJGWnBWMFZLVlZaR1ZtOVJNVTVIV2tab2ExSnRVbGhVVjNSaFUwWlplR0ZJWkdoU2EzQmFWbGQ0YTFkc1drWmpSbEpoVmpOb2VsUnRlRXRqYXpsWFdrZHNVMkpIT1RSV2JGcHFaVWROZUZaWWFGaFhTRUp2Vld4a1UxZFdXblJsU0dScVlrWktlVll5Y3pWaGF6RldUbGhzV2xaWFVucFdhMXBMVmxaYWMxZHNaR2xYUjJodlZsaHdTMVZ0VmtoVGEyeFVZa2RTY0ZsWWNGZFdWbHAwWTBWT1dsWnRVbGhaTUZwaFlVWkpkMWR0T1ZaaGEwb3pWakZhZDFadFJrbGFSbVJvWld0YVdWWnFTalJWTVdSeVRWVm9WbUV6YUZkWmJGSkhWRVpXZEdWSFJtdFNNRnBJVjJ0Vk1WUnRTbGhoUlRWWFlsaG9jbFJWWkVabFZsSlpZa1pXV0ZJeWFGZFhWM1JoWkRGWmVHSklVbXRTV0ZKeFZXMTRZVTFXYTNkaFJUbFhUV3R3U1ZwVldtOVhSMFY0VTJ4U1dsWkZjRXhWYlhocll6RmtjMVpzWkZkTlJFVXdWbTEwVjFsV1duUldiR2hWWVd4d1ZsbHJXbmRYUmxaelZtNWtWbFp0VW5sWGExSlRWVEF4Y2sxVVVsZE5hbFpZVmxjeFMxSXlUa1pQVm1ScFYwWkplVlpHWkRSWlZscFhWVzVXVldKWGVFOVdha1pMVG14YWMxcEVVbHBXTUhCSVZUSTFVMkZHU25SbFIwWmFZVEZ3VEZVd1dtRlNWa3AwVW14a2FWTkZTa2RXYkdRMFZESkdSazFJYUZSaE1YQllWRmMxVTFkR2NFVlRhM1JUVFZkU2VsZHJXbE5oVjBwWFUyMW9XRlpzU2toWFZtUlhZekZhZFZSdFJsTldNVXBhVmxkd1IxbFdTWGhoTTJSWVlYcHNWMVJWVWtkTlZteFdWVzFHVjAxV2NFZFdNbmh2VmpGYVJtTkdRbFpOUm5CUVdUSjRhMlJIU2tkVWJHUnBVMFZKZVZadE1IaGtNVkY1VTFoa1RsZEZOVmhaYlhSM1lVWlZkMVpVUm1wV2JFcFpXa1ZvVDFReFduUmtSRTVhVmxaYVVGbFZXbUZqYlVvMlUyeHdhRTF0YURKV2FrbzBXVmRTUjFac1ZsSmlWVnBVV2xkMFlWTldaSEpXYlhSVVRWVTFXRlpYTlZOaFZrcFZWbTVDV2xaRlNqSmFWM2hhWlVad1JWRnRhR2hsYkZwYVZtdGtOR0l4VlhsVGEyaG9VMFUxVjFSVlduZE5NV3h4VW01T2FrMVlRa1pXVnpFMFlWWkplbUZFVWxkV1JXdDRXVlJLUjJNeFRsbGFSM0JUVmpOb1YxWkdXbXRpTVU1SFlrWmFXR0pJUW5OWmJGWmhVbXhWZVdWSVpGZE5iRnA1VmpKd1lWZEdaRWxSYTNoV1RXcEdXRll3V2xOamJVcEhVMjFzVjAweWFGWldNbmhxWlVVMVJrNVZaR0ZTYlZKWldXeG9VMVZHVm5GU2EzUk9VbXhhTUZSc1drOWhSbHB5VGxWa1ZXSkhhRVJXYkZwaFl6Sk9SbVZIUmxOU1ZuQTJWMVJLTkZsWFVsZFZiazVWWWtkU1QxVnROVU5aVmxsNVpVWmtWMDFzUmpSV2JHaHZWa1prU0dWSVRsWk5SMmhFVm1wR1UxWXhaSFJTYkdSVFlsaFJlbFl5ZEZkTlJscEhVMnhXYVZKdGFGaFpiRkpIWkd4YWNWRllaR3hXYlRrMldXdGFhMkZXWkVkVGJteFlWMGhDVEZaSE1WZFdNVkp6WWtkc1UwMHdTbFpXVjNoWFpESlJlRmRzYUU5WFIxSnhWRlpXZDJWc2JISlhiWFJhVm10d1NGVXllRmRYYlVWNFYycE9WazFXY0hwWk1qRkhVbXM1V0dGR1pGZFNWbkJhVm14U1NrMVhSWGhhU0ZKVFYwZDRWbFpyVm1GWlZsSlhXa1pPVkZKc2JETlhhMXByVmtaYWRGVnVjRlpOYm1oeVZsUkdTMVp0U1hwaFJtUllVMFZLU1ZaclVrdFVNazV5VGxWc2FGSnJOVmxWYWtaTFZqRmtXRTFVVW10TlZsWTBXV3RvUzFkSFNsWlhia3BWVm14d00xWnRlRmRrUjFaR1QxZHNVMDFJUWtoV1IzUlRVakZrYzFkc1pHcFNSVFZZV1d0YWQyRkdXWGhhUldSVFRXdHdTRmRyVlRGaFIwVjNZVE5rVjJKWVVuSlVhMXBhWlVaU2NtRkdaR2hOV0VKYVYxWlNUMkl4VlhoVmJHaHNVbGhTVmxWdE1WTmxiRmw1WlVkMFYyRjZSbmxVYkZaelZtc3hkVlZ0YUZwV2JIQk1WbXBHYTJSRk9WZGFSMmhvWld4WmVWWnNhSGRTTVZsNVZHNU9hbEpYZUZaWmJHaERWREZhYzFWc1pGaFNiSEI2VjFod1IxVnJNWEpYYkdoV1RXNW9kbGxyV2t0V01rNUlVbXhrYVZaRldsUldSbFpoVm0xV1dGWnJXbXRTYkVwVVZGVm9RMU14V25KYVJGSldUVlpzTkZZeU5VdGhiRXBHVGxac1YyRnJOVlJaTVZwVFl6RmtjbVJHYUZOaE0wSTJWMVpXYTA1R1drZFRibFpTWW14d1dWWnFUbTlqYkZKeVdrWmthazFyY0VwVmJYaFRZVmRLVjFOdWFGZFdNMEpFV2tSR1QxWXhWbGxoUjJoVFZqRktkbFpYTVRSak1EVnpZa1phVm1FelVsbFphMXAyVFd4V2RFNVlaRmhpVmxwNVdUQldNRmxXV25SVmJFSldUVlp3U0ZwRlpFdFNNVkowWlVkc1dGSXlUak5XYlhCSFdWWnNXRkpZWkU5V1YyaFhXVzE0UzFaR2JIUmxSWFJxVW14V00xWnNVa2RoYkVwelUyeHNWV0pHV2xCWlZFRjRWMGRXU1dKR2FGaFRSVXBaVjFaa05GZHRVWGhhU0U1cFVqQmFXRlpxU205aU1XUlhWbTEwVkUxWFVrbFdiWFJ6WVd4S2RWRnRPVnBXUlRWRFdsZDRhMVpXUm5Sa1JsSk9WbFJXU0ZaRVJtRmpNVlY1VTJ4b2FGSnRhRlpXYTFaM1pGWndWMWR0UmxoU01VcEpXa1ZrZDFSdFJqWlNWRVpYVmtWYWRsbFVSbUZrUms1MVUyeFNhV0V3Y0ZoWFZ6QXhVVEpXYzFadVVteFRSVFZZVkZab1ExSnNXbGhsUms1b1ZtdHdXbFZYZEhkWFJsbDZWVzVhVjFKRldtaFZha1pyWXpGd1IxVnRiR2xXYTNCdlZqRmFVMU14VW5KTlZtUllZbXMxYUZWc1pGTlhWbFp4VW0xR1ZHSkdiRFZVVm1NMVlVWmFjMkpFV2xwV1ZrcG9WakJhV21Wc1JuSmxSMFpUVWxoQ1VWWlVRbUZVTWs1MFVtdGtVbUpIVW5OWmExcDNWa1phZEdWR1RsUk5Wa1kxVmxab2IxWldaRWhoUm1SYVZqTlNURlpyV2xka1IxSkhXa1U1VjJKRldUQldiVEY2VGxaWmQwMVdaR2xTUmxwb1ZteGFkMWRHV25GVGExcHNWakJhU0ZWWGVHdFZNVnB6WWtST1YxWXpRa3hWZWtaTFkyczFWMXBHWkdsU1ZGWjNWbTB4TUdReVVuTlhXR2hoVWtaS1dGbHNXbUZUUmxwMFpVYzVWMUl3VmpSWk1GcHZWakpLZFZGdWNGZFNWbkJVVm0xNGQxSldVbkpPVm1ScFVtNUJNVlpxU2pCaU1WRjVVbTVLVGxac2NGQldiVEZUVjBaYWRXTkdaRk5TYlhoWVZqSjBNRmRHU1hoWGEyUlhUVzVvTTFacVNrdFdNVXBaV2taa1YxSlhPSGRXV0hCSFZERk9SMVJ1U21sU2JGcHdWVzEwZDFkV1duUk5WRUpyVFVSQ05GZHJXbTloTVVwMFZXNUdWVlpzV2pOV01WcFhaRWRXU0U5WGJGTmhNMEpoVmxaa05GVXhXblJTYmtwcFpXdEthRlpxVG05bGJHdDRWMnM1YTFadVFrbFpNRnBQVkd4T1JsTnJkRmRoTVVwSVdXcEdTbVZXU25KYVJtaFlVMFZLZGxaWGRGZGtNV3hYVjI1V2FsSlhVbk5aYTJRelRXeFZlV1JJWkdsU2JHd3pWR3hXZDFac1dqWlNibkJYVmtWd1dGcEZaRmRTVmxaellVWmthVk5GU2pWV2EyUXdZVEZWZVZWclpGUmliRnBYV1d4a05GWldWbk5WYkdSclRWWndTRmRZY0VkVmF6RnpVbXBTV21FeWFFeFdNakZYWXpGa2RWSnNaR2hoTUhCdlZtcEdZV1F4V25SU2EyaFRZbGRvVkZSVmFFTlhiR1J6Vm0wNWEwMVhVakJWYlRWTFlXeEtSazVYUmxWV1YxSlVWa1ZhVm1ReFdsVldiR2hYWVROQmQxZFdWbUZoTVZKeVRWaFNZVkpHV2xoVVZscDNZMVp3VmxwRk5XeFdiRXBhV1d0YVUxZEdTWHBoU0doWFZrVktXRlY2U2s5U01WcDFWbTF3VkZKVVZucFdWekI0VGtaa1IxcElTbFppUlRWdlZGZDBkMVl4V1hsalJVNVlZbFZXTlZsVldrTlhiRnB6Vm1wU1lWSnNjRWhhUmxwM1VqSk9TR0ZGTldobGEwa3dWbXBHVTFJeVJYaFRXR2hoVWxkb1dGbFVTalJYVm14eldrYzVhbEpzY0hoV1J6QTFWREpLU0ZWc2JGcE5SbGwzV1ZSQmVHTnJOVlppUmxwT1lteEtNbFpzVm1GaE1VcHpXa2hTVUZadFVtOVpXSEJYVFd4YVdXTkZaRmROYXpWNldUQldjMVpYU2xsUmF6bGFWa1Z2ZWxSV1dscGxSMFpKV2tkd1RsWlVSVEZXYlRFMFlqSkZlRlJyYUZaaVJuQm9WbXBPVTFSR1dsWlhiR1JxWWtoQ1Ixa3daREJVYkZwVlZtcGFWMkZyYkRSWmFrWmFaVlpLY1Zkc1pHbFNNVXBhVm1wQ2IxRXhTa2RqUm1oT1ZsaENjMVZ0TlVOVFJsbDVZM3BHVjAxV2NFZFdNbmh6VmpGS2MyTklXbFpXUlVZMFZXcEdhMk5zY0VkaFIyaE9Va1phTkZacldtRldNbEY0VjJ4a1lWTkZXbFZXYTFaaFYwWldkRTFXVGxSV2JrSlhWbTB4UjFkSFNrZGpSRUpYVm14S1JGWnRjM2hrVjBaR1pVWmFUbEl4U2sxV1ZFWmhWVEpOZUZadVRtRlNiVkp2VkZSQ1IwNXNXbkZTYlhST1VteHNOVlpHYUc5V1IwcElZVVpTV21FeVVuWlpla1pYWXpKR1JsUnNaRk5pUm5BMFZsUktkMVV5U2toVGEyUlhZV3hLV0Zsc2FHOVZSbXhZWlVWd2EwMXJOVWRaYTFwWFZHeFplV0ZGYkZoV2JGcG9Wakl4VjJSR1NuSldiRkpwVTBWS1dWZHNaREJaVlRWeldrWnNhbEpZVWxWWmJGcGhWMVphU0dSSVRsWmlWWEJaV2xWYVUxbFdXalpTVkVKVllURndjbFpxUm10a1IxSkdUMVpPVGxaWE9UTldiR04zVFZaVmVWSnNaRlZoTVhCUVZqQldTMVpzV25WalJtUlRVbTVDUmxWdE5VOWhiVXBJWkhwS1YySlVSak5XYWtGNFVqSk9SMk5HYUdsU2JIQXlWakZhYTFJeFRrZFViazVvVWpOb1ZWVXdWa3RoUm1SWFdrUkNhMDFFUWpSWlZFNXJXVlpLV1ZWc1ZsWmlSa3A2VmpKNFYyUkZNVmhQVm1ST1VrVkpNVll5Y0U5ak1XUkhWMjVTVldGc1NtRmFWM1IzVkRGd1YxZHJPVmhXTUhCSldUQmFVMVV4V2xsUmFrNVhZa2ROZUZwRVNrNWxWbHB5V2tkc1UySldTbTlXVjNSaFV6Sk9jMkpJVGxkaVZWcFBWVzB4TkdWV2JGWldWRlpvVW14d1ZsVnRjRWRXYkZvMlZtNUtWMDFxUmtkYVZscFRWbFpLYzJORk5WZE5WWEJLVm0xd1EyRXhXWGhVYkdSaFUwWktiMVZxU2pSWFJsSlZVMjAxVG1KR2JEUlhhMmhyVmtVeGMxSnFWbGRTTTFKMlZtdGtSbVZYUmtkU2JHUk9VbXh3YjFkWGNFZFpWMDVYVlc1U1VGWlVWbkJWYWs1dlYyeGFSMWR0T1ZWTmExcDVWRlphWVZReFduUlZiR2hYWW01Q1dGVnJXbk5XTVdSeVpFWm9VMDFXY0VoV2FrbzBaREZaZVZOc1pGTlhSMUpaV1ZSS1VrMUdjRVZSVkVacVlYcEdWMWxWVlRWV01XUklZVVpvVjFKdFRYaFdSekZYWXpGa2MxcEdXbWhOUkZaWFZrWmtORk15Vm5OV2JsSlBWbFJzV0ZSWGRIZGxWbFY1WlVkMFYxWnNjSHBaTUZZMFZsZEtXV0ZHWkdGV2VrWk1WVEJWTlZZeVJraGlSazVvVFRCS1dsWnFTalJXTVd4WVUxaG9ZVkpYYUZWWmExcGhWa1pzV1dOSVRsaFNiSEI2VjJ0YVMxUnNTbk5YYWtKaFVsWktSRlpVUmt0a1ZrWnlXa1p3VGxJeFJYZFdiWEJIV1ZkT2RGUnJWbFZpUjJoWVZGUkdTMWRXWkZsalJXUlVUVmRTU0ZVeU5VOWhSa2w2WVVaU1YwMUdXa3hXYkZwaFYwZE9SbVJGT1ZOTlZuQTJWbTE0YjJJeFdYbFRhMXBQVjBWYVYxbFhkRXROTVZaeFVtNU9hbUpHY0hwWGEyUnZWVEpLU0dSNlNsaFdiRnBVVlhwR2EyTXhaSEZYYkU1cFltdEthRmRzWkRCa01VMTRZMFprWVZKVWJGVldiWFJoVFVac2NsZHJPV2xTTUhCYVYyNXdRMVl3TVZkalIyaGFWa1ZGZUZVd1dsZGtWbFp6Vkcxc2FWSllRak5XYkZKRFZtc3hXRlJyWkZaaVIyaFFWbXhWTVdOc1VsZGFSRkpzVm0xU1dsa3dXbXRoUjBwSFlrUk9WMDF1YUhwWFZscGhWMGRHU0dGR2NGZFdNVXBOVm1wQ2ExWXhUbGhVYTJScVVqSm9iMVJVUWtkT2JGbDRWV3RPYUUxVk1UUldSM1JoVlVaYWRHVkdVbHBpUjFKMlZqQmFVMVpXVG5ST1YzaFhZbFpLV1ZZeFVrOWlNa1p5VFZoS1RsWkdXbGRVVm1SdlpXeHNXR1ZGT1ZOaVJUVXhWVmQ0WVdGWFNuSlRhbHBZWWtaYWFGbDZSbHBsUjA1R1ZteGFhVmRHU25kV2JYaGhaRzFSZUZwR2FHdFNlbXhXVkZkMFlWWXhVbGRoUm1SV1lsVndNRlpYTVVkWGJGcEdZMFU1VlZac2NIbGFWVnAzVW14d1IyRkdUazVXYmtKTVZtMXdTbVZIU1hsU2JHUllWMGhDYjFWclduZFhWbHB4Vkd0T1ZWSnVRa1pWTW5NMVZrWktjazVZYkZwV1ZuQkVWakJhUzFZeVRrbFhiR1JwVjBWS1VWZFhjRUpsUjAxNVUydGthRkpVVmxsVmJGSlhaVVphUjFwRVFtcE5SRlpZV1ZST2EyRkdTbFpPVnpsWFlsaFNNMVl4V25kV2JGcDBVbXhvYVZKdVFYZFdiRnBUVVRGYWNrMVlWbWhTV0doWFZGVmtVMVJHVlhoWGJFNXFUVlphZWxkcldtdGhSVEIzVW1wYVYyRnJXbkpVVldSSFkyczFWMkZHVW1saGVsWlVWMWQwWVZNeGJGZFZiRlpTWVROU1ZsWnRlSGRsVm14V1YyczVWazFXY0hwV01uaGhWbXN4VjFOc2FGZFdNMDQwVm1wS1QxSXlTa2RqUjJoT1YwVktWbFp0TVhkU01WRjRVMjVLVDFac2NFOVdiWGhMVkRGV2RFNVZUazlpUm5CNVYydFNVMVpyTVZaaVJGSmFUVVphZGxaVVNrdFhSMVpIWVVaa2FFMVdjRzlXYkZKSFlURmtTRlZyWkdGU2JWSndWbXhrTTJWc1pGaGpSVGxvVFd0YVdGVXlkR3RYUjBwSFUyeGtXbFl6VWpKVVZWcDNWMGRXUjFkdGVGTmlTRUkyVm10amVHUXhWWGROVld4U1lUSm9XVlpxVGxOWFJscHhVMnRrVTAxWFVscFpNR1J2VlRGa1IxTnNhRmhXYkVwTVZsUktWMk15U2tWWGJFNW9aVzE0V1ZkWGRHRlpWVEZYVm14b1RsZEZOVmRVVjNoaFRVWndWbFZzVGxoU2JIQjZXVEJvUzFaWFJYbFZiRkpoVWxad1RGcEdXbGRrUjBwSFZXeE9WMUpzYjNwV2JYUmhZV3N4VjFKWWJGWlhSMmh3VlRCV2QxbFdjRmhsUjBacVZteHdlRlZYTVVkWFJscDFVV3hrV2xaWFVraFpWVnBLWkRKT1IySkhSbGRXTW1kNlZtcEplRkl5VG5SVWExWlZZa2hDVDFWcVJrdFVWbHBWVVd4YVQxWnRVbGhWTWpWVFlVWktkRlZyT1ZWV2VrWnlWR3hhV21WR1pIUmpSM2hUVFVSRk1WWnJXbTlqTVZwSFdrVm9iRk5GV2xkVVZWcGhWRVpyZDFkc1pHdFdNRFZLVmtjeE5GVXlTbGxoUm14WFRXNVNWRlpVU2tabFZrNXpWMnhvYUdFd2NHaFhWbEpMWWpGV1IySkdaRmRYUjJoeVZtMTBZVTFXWkhKWGJtUm9VbFJHZVZSVmFHOVhSbHBHVjI1S1ZtRnJXbkpWTUZwaFkyMUtSMkZIYkZkTmJXZ3pWbTB4ZDFReVNYZE9XRTVoVW0xb2NWVnNhRk5qYkZKWVkzcEdWRlpzVmpWYVJXTTFWbXhLZEZWclpGZE5ha0V4Vm1wS1IyTnJOVmxYYkZaWFRUSm9ObFpxUWxabFJtUlhWVzVTYWxKVVZtOVVWelZxWlVaWmVGVnJUbWxOVlZZMVZXMTRhMVpIU2toaFNFNVdZa1p3TTFkV1dtRmtSVEZYVTJzMVUySkdXVEZYYkZaWFRVWmFSMU5ZWkdwU1dFSllWV3BPYjFaR1duRlNiVVpxWWxVMVJsWkhlRzlXTURCNFUyeHNXRmRJUWtoVmVrWnJVakZPZFZSdGFGTk5NbWhWVm1wQ1YxTXhXbGRYYkdocVVsaFNVRlZxUm1GbGJHeHlZVVZrVjFJd2NGcFZWM2hIVmpKS1NHRkZUbFZXYkhCNlZteGFVMk5zVW5OWGJFNVhVbFp3U1ZaclpEUldNVmw0V2toU1UySnJjRlZaVkU1dlYwWnNjMVZyWkZSU2JIQjRWVzE0VDJGck1WZGpSRUphVFVaVmVGWnJXa3RXVmxwWllrWmthVmRGU2tsV2JUQjRWakZKZUZadVRtRlNiV2haVldwS2IyVkdXbFZSYlVaVVRWWndlbFl5TlZOaE1VcFpWVzVPV21FeGNHaGFWM2hoVTBVeFJWSnRhRmROU0VKSVZrZDRZV1F4WkhSU1dHaFlZa2RvWVZac1duZFpWbkJZVFZWa1UySldTa2hXTWpGdlZHMUtSbUo2U2xkTlYyZ3pWV3BHVW1WR1pIVlViR1JwWWtad1ZGZFhlR3RPUmxwSFYyNUdWV0pVYkZSVVZtUlRWMFpaZVUxVVFsVk5WWEI1Vkd4b2QxWnJNWFZWYmxwYVZteHdVRlZ0Y3pGWFZrWnpWbXhrYkdKR2NFWldNblJUVWpKTmVWUnVUbWxTUm5CWVdXeG9RMWRHVWxaWGJtUllZa2RTZWxadE1EVlhiRmwzVjJ0c1ZrMXVhSFpaYTFwUFUxWkdkRkpzY0ZkTk1VbDZWa1pTUjJOdFVYaGpSVnByVW14S1ZGWnJaRFJaVmxwWVRVaG9hVTFXYkROVVZXaHpXVlV3ZVdWR2JGZGlWRVpRVkd0YWMwNXNUbkpPVjNoWFlYcFdZVmRYZEd0a01WcEhVMnhhYWxOSFVsaFdibkJYVFRGc05sTnNaRk5OYTNCSVYydGtSMVV4U25KalNHeFlWak5vV0ZkV1ZYaFNNa3BKVTIxb1UxWkhlSFpXYlhoVFVqQXhWMVpzYUU5V00xSlpXV3hXVjA1V1drZFZhMlJZWVhwR1dWWlhkRzlXTURGSVZXeG9WazFXY0hKYVJXUkhVMGRLUjFwRk5VNWlWMDQxVm0xd1IyRXlVWGhVV0d4V1YwZDRWbGxVU205V1ZteFZVMjA1Vmxac2JETldiVEZIWVZVeFYyTklhRmRTZWtFeFZrY3hTMU5IVmtkaVJsWlhZbGRvVVZkV1pIcGxSMDUwVTJ0V1YySklRazlWYWtwdlVsWmtWMWR0UmxSTlJGWXdWVEowYzJGR1NuVlJiR2hhWWtad1IxcEVSbXRqYkd0NllVWk9UbUpGY0VwV1ZFb3dZekZhV0ZOclpGUmlSMmhZV1d4b1UwMHhVbFZTYlhSWVVqRktTRmRyWkhkVWJGcFpVV3h3VjFaNlJUQlpha3BMVWpGT2MySkdTbWxTYTNCWVYxWmtNR1JyTVVkalJtaHNVbXh3YzFWdGVIZGxiRnBJVFZoa1ZrMUVSa3BWVjNSdlYwWlplbFZzYUZkaGEzQklWV3BHYTFkWFRraGhSazVUVjBWS1lWWXhZM2RrTURWV1RVaG9hVk5HU25KVmExWkxWMFpXY1ZGc2NFNWlSMUo1VmpKME1GWlhTa1pqUmxwWFlrZG9lbFpxUm1Ga1JsWlZVV3hrYUdFelFsRldWM0JIV1Zaa1dGSnJaRmhpVjNod1dWUkNkMVl4V1hsbFIwWm9UV3RzTkZscldtdFhSMFY1Vld4b1dsWXphRXhXTVZwWFpFVXhWMVJyTlZOaVJYQlpWbTE0VTFJeFdYbFRhMXBwVWtad1lWWnNXbUZqYkZweVZsaG9VMkY2VmxwVk1uaGhWRzFHY2xkc2JGZGlWRVV3Vm1wS1UxWXhTblZWYld4VFlYcFdXVlpHVWt0aU1VNUhWMWhvV0dKVldtOVVWVkpYVTBaYVNFNVZPVmRTTUZZMVdWVm9RMVpyTVVkV1dHaFhZa1p3YUZsNlJtdGpiVkpJWkVVMVYwMHlaekZXYlRCM1RWWlJlRlpZYUZoWFIxSlpXV3RrTkdGR1duTmFSemxvVW0xNFYxZHJWakJYUmtsNFYydHdXazFHY0ROWlZXUkdaV3hHV1dOR2FGZFNWWEI1Vmxod1IxUXhTbkpQVm1ScFVtczFjRlpxU205WFZscEhWV3QwYVdKV1dsaFhhMXByVjJzd2VXRklSbFZXTTA0MFZHeGFWbVZIUmtsVWJXaHBVbFJXU0ZaVVNURlJNVnAwVTI1V1VtSnVRbWhXYkZwM1pXeGFjVkp1WkZOV2JGb3dXa1ZrYzFZeFduUlBWRTVYVFZkUmQxbHFSbEpsVmtwelYyczFXRkpzY0ZSWFZ6QjRWVEZzVjJKR1ZsUmhlbFpQVm0weE1FNUdaSEpXYlhSWVVtdHNORll5ZEhkV01ERnhVbTVhV2xac2NHRmFWekZIVWxaa2MyRkdaRTVOUlhCT1ZqSjBVMU14VVhoVWEyUlZZbXR3YjFWdGRFdFhWbFp6VjI1a2EySkdjREJaTUZVMVlWVXhSVkp1Y0ZwaE1YQjJWa2Q0YTFKck5WbFNiRlpYVFRGS05sWkhlR0ZqYlZGNVVtdGFWV0pYYUZoWlZFazBaVlprV0dSSE9XbE5WMUo2VmpJMVUxWnNXa1pUYldoV1ltNUNTRlV3V25kU2JIQkdaRVpTVjJKRmIzZFhWM1JXVFZkR1dGSllaR2xOTTBKWVZGWmtVbVF4YkZoamVrWllVbXhLZWxsVldrOWhWa2w1WVVod1YxWXphSFpWVkVaaFVqRmFkVkpzVW1oaVJYQjZWMWQwWVZZd05VZFhibEpzVWxSc2IxbHJWbk5OTVd0M1ZtMTBXR0pWVmpSV01uaHZWMnhhVjJOSFJtRldla1pJVlcweFUxSXhaSFJoUlRWcFVsYzRlVlpxUm05a01VbDRWVmhvV0dKck5WaFpiWGhoVlRGc2MxcEVVbGRTYmtKWlZGWlNVMVJzV25OalJtUlhUVzVOTVZsVlpFdFdhelZXV2tkR1UxWnVRbGxYVmxKSFV6RlplRlJ1VGxWaVJscFlWRlJDUzA1c1dsaGtSMFphVmpBeE5Ga3dWbk5XVjBwSVZXeFNXbUV5YUVSVmVrWmhZMnh3UlZGck9WTmlSWEJKVmxSSk1WVXlTa2RUYkZacFVtMW9WMWxyV25kTk1XdDVaVWQwVjAxWVFrZGFSVnByWVVkV2NsZHNiRmRXZWtJMFdYcEdWbVZHWkhWVWJHaG9ZVE5DV0ZaR1l6RlJNVXBIWWtSYVVsWkZXbGhVVmxVeFpWWnNWbHBJVGxkU2EzQldWbTE0WVZZeVNsbGhSMmhXWld0d1UxcFZaRXRUVms1eldrZHNhR1ZzV2xaV2JURjNVVEZzVjFwR1pHcFNiSEJZV1cweFUxWXhVbGRXYms1UFZtNUNWMWxWYUd0V01rWTJVbXhvVjAxdWFGUldNbk40VTBaV2NtVkdXazVTYkZWNFZtcEdZVk15VWtoU2EyUmhVbFJXVDFsc1pGSk5WbHB4VW0xR2FHSldXa2xXUm1oelZsWmtTR1ZHVmxkTlIxRXdXVEZhVm1ReFduSmtSM0JUWWtadmVGZFVRbTlVTWtwSFUyNVNiRkp0YUZsWlZFWkxWa1pzVlZOcmRGZGlSMUo0VlZkNGQyRkZNWFJoUmtaWVZteHdWMXBWWkZOV01VcDFWbTFHVTJKclNuWldSbVI2WkRKV1IxcEdWbE5pV0ZKVVZGWmtVMU5XV25Sa1NFNVlVakJ3V1ZsVmFFTldNa1p5VGxoYVZXSllhSEpXTUdSUFVtMVNTR1JGTldobGJGcExWbXhTUzAxSFNYaFdhMlJoVWxad1dWbHNVbk5YUm14WVkzcEdhMkpHU2xsYVZXaFBWMFpLVlZKc2NGZFNla1l6VmtjeFJtVlhValpTYkdoWFVsVndNbFpXVWt0U01WbDRWRzVHV0dKWGVGVlZha3B2WVVaYWRFMUlhRlpoZWtaSVdUQldiMVJzV2xoVmJrcFdZV3RLTTFVeWVHRlRSVEZaVkd4V2FWWllRalZXVkVwM1ZERmtSMWRZY0ZaaWExcFdXV3RrVTFWR1dYZFhhM1JxVFd0YVNWcFZXbE5WTWtweVUycEtWMDFYVVRCWlZFRXhVMFphZFZSdGJGUlNWbkJXVjFjd2VGVXlUbGRXYmtaU1ltMVNWRlJXWkRSbFZscDBaVWQwYUZKcmNIcFphMUpoVjJ4YVYxZFlaRmRpVkVaSFdsWmFWMlJYVGtkalIzaG9UVmhDVWxadE1IaE9SbGw1Vld4a1UySnNTbkJWYlhNeFYwWlNWVk50T1ZSU2JHdzBWakl4UjJGRk1VVldhMmhYVW5wV1VGWnJaRVpsVjBaSlVXeGFUbEpzVmpSWFZFSmhWVEZrUmsxV1drOVdWR3hZV1Zod1ZtVkdaRmhrUnpsVVRXdGFlbFV5ZUZkaFJrcEdUbFpvVm1Gck5WUldhMXB6VmpGYVdXRkdUbWxXVkZaSlZqSjBZV1F4V1hsVGEyeFNZa1ZhV0Zsc2FHOWpiRnBJVFZaS2JGWnNTbHBaYTFwRFZqSktXR0ZHYkZkaVdGSllWMVphVW1WR1pIVlZiWEJUVmpGS2VWWkdaRFJUTVU1SFYyeG9iRkl6VWxkWmJGWjNaVlpTYzFkc1RsZE5WbkJIV1RCb1MxbFdTbk5qUm1SaFZsZFNTRlV4V2xOak1WSnpXa1UxVTJKclNtaFdha28wVmpGWmVWVllhRmRYUjJoVlZqQmtOR014VlhkaFJVNVhUVlpLV0ZZeU1VZFdNVXAwWkVST1dHRXhXWGRXVkVwTFZtMU9SbHBHWkdsV1JWb3lWbTF3UW1ReVZsaFNhMXBzVW0xU1dGUlVSa3RsVm1SWlkwVjBWV0pXV2xoV1IzaHpZVlpKZWxGc1ZsWmlSbG96V2tSR1lWZEZOVmxhUjNCT1lrWndTVmRYZEdGaE1XeFhVMnRrVkdKcmNHRlphMXBoWVVaU1ZsZHVUbXBpVlZwSFZERmtiMVl4V2taWFdHaFhWbTFOZUZsVVJtdGtSa3BaWWtaV1YxSldjR2hXUmxwclZURk9SMWRZWkdGU2JWSlZWbTB4VTAxR2JGWmFTRTVYVFVSQ05WZHVjRXRXTURGWVZXcE9WbVZyY0ZOYVZscFRZMjFHUjFWdGFFNWlWMmhUVm0xd1ExWXhiRmhUV0doWVltdGFWbGxzVW5OVU1XeHlXa1JTV0Zac1NsaFpWVlUxWVVkR05sSnViRnBoTVVwWVZqSnplRk5IUmtaVmJIQlhZa2hDVFZaSE1IaFRNVTVZVW10a2FsSnRVbkJXYlhSWFRURlplV1JIY0d4U2EydzFWbGQwYjFaSFJYbGxSbHBhWWtkUk1GWkVSbk5rUjFKR1pFVTFUbFl4U2xwWGExWnJaREZSZUZkWVpFOVdiWGhYV1d4b2IyUnNiSEpYYXpsVFRXczFTVlF4V25kaFZrbDRVbGhrV0dKSFVUQlpla3BQVmpGU2RWWnRSbE5OTUVwVlZrWldiMUV4VG5OWGExWlRZbFJzVkZSWGRHRlRSbGw0WVVoa2FGSnJjRWRaTUdSSFZqSktkVkZyYUdGV00yaDZWRzE0VDJOdFRraGxSazVwVW0wNU5GWnNXbXBsUjAxNFZsaHNWMkpzU25OVmJURlRWMVphZEdWSVpHcGlSa3A1VjJ0YVQyRnJNVmhWYm14YVZsZFNlbFpyV2t0V1ZscDFXa1prVTJKSVFtOVdXSEJMVlcxV1NGTnJiRlJpU0VKeldXdGFkMWRXV25SalJVNWFWbTFTV0Zrd1dtRmhSa2wzVjIxR1YyRnJXbWhhVlZwWFYwVTFWMXBHWkZOV1JWcFlWa2Q0YjJNeFdsaFNia3BZWVRKU2FGVnJWbUZXUm5CSFYyMTBhazFWTlRCWmExcFBZVlpPUmxKcVdsZGlWRVV3VmxSR1NtVkdXbGxpUm1ScFlYcFdWMWRXWkRSWlYwbDRWbTVTVDFaVk5WaFphMXAzWld4c1ZsbDZWbGhTYkhCNldXdFNWMVpXV2xoaFNGcFhZa2RTVEZWcVJtdGpiVXBJVW14a1YySklRblpXYlhSWFdWWktkRlpzWkZkaWEzQnlWV3BDWVZaV1ZuVmpTRXBzWWtad1JsVnRlR3RoTURGRlZteHNWbUpIYUROV1Z6RkxVbXhPY2s5V1dtbFNhM0JaVmxjeE5HRXhaRWhVYTFwVllrWktUMVp0TlVKa01WcFlUVlJTYUUxV2NGbFZNblJyVjBkS2NsZHNXbGRpUjFKMlZsVmFkMU5IVmtkalIzaFRZa2hDWVZkV1ZtRldNVmw1VTJ0b2EyVnJTbGxXYTFaTFpHeGFWVkp0UmxkTlYxSXhWVEo0VTJGWFNuSlRiR2hZVmpOU1YxUldaRk5XTWtwSlZXMTRVMVpIZUZwV2JYQkRaREZKZUZkdVVrNVdlbXhZVkZWU1EwNVdiRlpXYWxKWFRWWnNObFpYTlV0WGJWWnlZMFU1WVZaV2NGUlpla1pyWXpGa2RHSkhhRTVUUlVsNlZtMTRhMDVIUlhkT1ZXUlVZbXMxY0ZWdE1WTmhSbFp5VjJ0MFYxWnRlSGxXYlRWclZrWmFkR1ZJYkZwV1ZsVXhWbXBHUzJNeVRrZGhSbHBPWVd4YWVWWnFTWGhTYlZaSFdraFdhbEpzY0hCVmFrWkxVMVphY1ZGdGRGZE5WWEF3VmtkMGExWlhTa1pPVlRsYVlsUkdkVlJYZUdGak1WWnlXa1prVGxac1dURldhMlF3WWpGYVNGSllhR3BUUlVwWFdXdGFkMkZHYkhGU2JVWnFWbXhLTUZReFdsTlViRnB6WTBSV1YwMXVVblpXUkVwSFkyc3hWMWRyT1ZkaVZrcFpWbTAxZDFZeFNrZGlSbVJZWVROU1dWVnFSbUZTTVZsNVpVaGtWMDFyY0ZoVmJHaHJWakZhUm1KNlFsWmxhMXBRVlRCYVQyTnRTa2RXYld4WFRUSm9VVll4WTNoTlJrMTNUVWhvWVZKdGFISlZiVEZUWTFaU1YxWnVaRmhXYkZvd1dsVmpOV0ZXU25KalJuQldWak5vVkZadE1VZGpiVW8yVVcxR1YwMHlhRmhYYkZaaFdWZE5lRlZ1VW1wU2F6VlBWVEJXUzFOV1dYaGFSRUpYVFZac05WVnRkR3RYUm1SSlVXMDVWbUpIYUZSV2FrWnpWbFpPYzFSdGVHbFNNMk41VmxSS01HUXlTa2RYV0dSUFZsaENWMVp1Y0VkbGJGcFZVbXh3YkdKVldrZFhhMXB2VmpKS1NWRnViRmRTTTFKeVZsUktVMUl4VG5WV2JGcHBWak5vVmxaWGVGTldNVnB6VjI1U2JGSXdXbFZVVjNoSFRrWnNjbUZGZEZkTmEzQjVWR3hhVTFZeVJuSlRiV2hYVFZad00xWnRNVWRUUmtwMFlVWk9UbE5GU21GV01uaFhZakpSZUZkdVNrNVdiVkpaV1d0YVMxbFdVbFphUms1VlVteFdNMVpzVWxkWFJscHlZMFJDV2xaV2NISldSM040WkVkR1JrMVdaR2xTTVVZelYxWlNTMVJ0VmxkVmJHeG9VbXhhY0ZWdE5VTlhSbVJZVFZSQ1ZFMXJOVWhXYlRWUFdWWktSMU5zVWxwaE1sRXdWakJhYTJOc1ZuTlViV2hPWVROQ1MxWldXbE5UTVZwWFYyeG9WVmRIYUZoVmJGcDNWakZ3VjFwRk9VOWlSa3A2VmpKNGExVXhXbGxSYkVwWFRXNVNjbFJyV2twbFZsSlpZVVpvYVdKR2NGUlhWM1JoWkRGUmVGZHVVbXRUUm5CUFdXdGFkMVpzV2toT1ZUbG9WbFJHV1ZaWE5YZFdNVmw2WVVkb1dtRXhjRXhhUldSSFVqSktSMk5IYkZOaE0wSktWbTEwVTFJeGJGZFhiazVxVWxaYVYxbHJWVEZpTVZKVlVtdDBVMkpHYkRWYVJWcHJZVEF4Y21ORmFGZE5ibWh5Vm10a1MyUkdWblJTYkhCWFVsWndiMWRzWkRSV01rMTRZMFZhWVZKdGFGUlVWbHAzVTBaa1ZWRnRSbFZOVmxZelZGWm9WMkZHU2tkalJtaFhZVEZhYUZZd1dtRldWazV5VDFaU1UyRjZWalZXYWtsNFl6RlZlRmR1VG1wVFJuQllXV3hvUTFWR2JIRlNhelZzVW14d01WVXlNVWRXUmtwVlZtNW9WMUpzY0ZkVVZscGFaVVprYzJGRk9WZFdWRloyVm0weE1HUXhaRmRqUmxwWFlsVmFXVmxyV25kTlJscFhWV3RPVjJGNlJqRlpWVlkwVm1zeFNGVnJlRlpOVm5CVVdYcEdWMk14Y0VkYVIyaE9UVVZaTWxadGNFZGhNREZIVjFoc1ZWZEhhRlZaYTJSdlZrWnNjbHBIT1dwTlZscDZXVlZXVDFZeFNuTlhibWhXVFc1Q1ZGbHJaRXRTTVZweFZXeGthVmRIYUZGWFZtUTBVMjFSZVZScldtRlNia0p2VkZaYWQxZFdaRmRXYlVaWVlsWmFNRlZ0ZEZkV1IwcEpVV3hvWVZZelVtaFViWGhyVjFkT1JscEdWazVXYmtJMlZtMHdNVll4Vm5SVGJHaHNVbXhLV0ZsWGN6RmtiRlp4VW0xMFYwMVhVakJhUlZVMVZUSkdObFpxV2xkV1JXOTNXV3BLUjFZeFVuSlhhemxYWWtad1dWZFhkR0ZrTVZKSFkwVldVMkpyTlhGWmExcDNUVlphU0dWRk9WZE5SRVpJV1RCYWQxZEhTa2RYYmxwWVZtMVNTRlV3V2s5ak1rWklaVVpTVkZKVmNGbFdhMXBoV1Zac1YxZHJaR2hOTWxKb1ZXeG9VMVpXVm5OVmJrNVlZa1phTUZSV1l6VldNREZGVVdwV1dsWldXVEJXYWtaYVpXeFdkVk5zY0d4aE0wSlFWMnhXWVZVeVRYaGFTRTVZWWxkNGIxUlZhRU5OTVZweldYcEdhMDFyTVRWV2JYUnJZVlpLZEZWdGFGWmhNWEJNVm14YWMyTnNXblZhUmxKWFlsaG9OVmRXVmxaT1YwWkhWMnhXVTJFeWFGZFVWM0JYWTJ4WmVVMVZXbXhXYkVwV1ZXMTRkMVJzV1hoVGEyeFhZV3RLY2xacVJrdGtSbEp5V2taV2FWSlVWbEJYVnpCNFltc3hjMWRZYUdGVFIxSlZWRmQ0UjA1V1draGtSemxYVWpCV05WbFZXa2RXTWtwSFYycE9WMVl6YUdoV2JGcFBZMnM1V0dSRk5WZFdSVlYzVm0xNGEyUXhSWGhXV0doVVltdHdXRmxYZUdGV2JGSlhWMjFHVmxKc2NIaFZiWGgzWWtaWmVGZHJhRmRpV0doeVdWVlZlR1JIUmtkU2JHUm9UVlp3V1ZaR1ZtRlRiVlpYVkc1S1dHRjZiRmhaYTFwM1ZsWmtXR1ZIUmxSTmEydzBWMnRhYjJKR1NuTmpTRTVXWWxob2FGWXhXbFpsVjFKSVVteGtUbFp0T0hsWFYzUlhUa1phVjFkc2FGWlhTRUpXVm0xNGQxZEdhM2xsU0dSVVZteEtNRmt3VlRGV01WcEhWMnhzVjJKWWFIRlVWbHBHWlZaS2MxcEdVbWxTTW1oNlZsZDRZV1F4YkZkWGJsSk9WbXR3VDFWdGVGZE9WbkJXVm1wQ1YxSnJiRE5aTUZaM1ZqRkplbUZHVWxkaGExcG9XVEl4VDFKV1VuTmhSbVJPVFZWd1dsWXhhSGRTTVUxNFdrVmtWR0pyTlc5VmFrNXZWa1paZDFacmRGZFdiSEJaV1RCV01GUXhTWGhYYm5CWFlrZG9kbFpxU2t0U2F6VlpVbXhhYUdFd2IzcFdWM0JIWXpKT2MxZHVUbUZTTW1oVVdXdGtNMDFzWkZkV2JHUk9VbXh3TUZWc2FITldiVXAxVVcxR1lWWXpVbWhXVlZwaFpFZFdSMXBIZEZkaE1XOTNWMWQwWVZReFdYZE5TR3hvVWxkb1dGUldXbmRoUm14VlVWUkdVMDFXU2pGV1IzaFRZVVV4ZEdGSVpGZFdSVXBYVkZaYVlWWXhaSFZVYkdob1RURktlVlpHV210T1IxWlhXa1pzYWxKdFVtOVphMXB6VFRGWmVXVklUbHBXYkhCWVZqSndUMVl4V2taWGEzUmhWbTFTV0ZVeFpFOVNNazVJWVVkb1RsZEZTbGRXYWtaVFVUSkZlRlJZYUZWaE1YQlJWbTB4TkZaR2JITmFSemxZVW14S1ZsVXlNREZpUmxwelkwUkNZVkpYVVhkWlYzTjRZMnN4VlZWc1pGTk5NbWh2Vm0wd2VGTXlUbk5VYmxaU1lrWndjRmx0ZEV0T2JHUnpWbTFHYWsxV2JEUlpNRlpYVm0xS1IxTnVRbFppUjJoRVZUSjRhMWRIVWtoUFZsWk9ZVEZ3V0ZaR1dtOVdNVlowVTI1U1ZtSlZXbUZXYTFaM1ZERlNWMWRzWkdwTldFSkhWMnRhYjFVd01WZGpSWFJYWVd0dk1GWkVSbFprTURGWlZtMW9VMUp1UWxwV2JYQlBVVEZTUjJORlZsUmhlbXhWVlcxek1XVldXWGxOV0U1V1RWWndlbGt3YUdGV01rcFpVV3hDV21GcldrOWFWVnBoWkZaT2RGSnNVbE5XUmxvMFZtdGFhMDFIVFhkTlNHaFlZa2RvVUZac1ZURmlNVnAwWkVoYVRtSkhlSGxaVldNMVYwZEtSMk5FUWxkV2JFcEVWMVphU21WdFJrWmhSbVJwVW14Wk1GWlVRbFpOVmxwMFZtdGtXR0Y2Vm5CWldIQkdUV3hhZEdWSFJsWk5WVlkwVmxab2MxWnRTbkpPVmxKYVlsaE5lRll3V25Oa1IxSkdaRVprVGxacmNGbFdha293VFVaUmVWTnJaRmRoYkhCaFdWUktUazFXV1hkYVJYUlRUVlUxZWxkclpFZFdNVnAxVVdwS1YyRnJTbkpWZWtaaFZqRk9kVk5zUWxkaVZrcFpWbTF3UjFKdFVYaFhiR2hPVmtWS1QxVnRkSGRUUm10M1ZtMUdhR0pGYkRaWlZWcHZWakpLV1ZWcVRsVldSVnB5VmpCa1UxSXhjRWhqUlRWWFYwVktZVlpzWTNoT1IwbDVVMnRrVkdKSGVGTlphMXBMVmpGc1dHUklXazVTYmtKWldsVmFZV0pHU25OalNIQlhVbnBHTTFaVVFYaFRWa1p5WVVab1YwMHhTbGxXYlhCTFVqRkplRnBHYkdwU01taFVWakJhUzFkR1pGZFZhM1JXVFd4YWVsbHJVbUZWTWtZMllrWm9XbUV4Y0doVVZscFhWMFV4V1ZSc1drNVdiWGN5VjFaV1YyRXhaRWRYYms1cVUwVndWbGxVUm5kVlJtdzJVbXM1YW1KVldrbFphMXBUVlRGYVIxZHNaRmRpVkVVd1YxWmFUbVZXVmxsaFIyeFVVbGhDV1ZkWE1YcE5WbHBIVjI1R1VtSlZXbGxXYlRWRFZqRmFkRTVYZEZkaGVrWlhXV3RTVjFsV1dsaGhSRTVYWWxoT05GWnFSbXRqTVZaelkwVTFVMDFWY0U1V2JHTjNaVVpOZUZOdVRsaGliRXB2VlcweFUxUXhVbGhOVjNSUFZteHNORll5TVhkaVJrbDNUVlJXVjFKdGFIcFdhMXByVTBkV1NWSnNXazVTYkhCTlYxUkNZVll5VWxoVWEyeFZZa1UxY0ZWcVRtOVhWbGw1WkVaT1ZrMVdjRWxWTW5SaFlXeEtXR1ZIUmxwV1JYQjJWbFZhYzFZeFdsbGhSazVPVmxSVmVGWXlkR0ZrTWtaR1RWaEtUbE5IYUZsV2ExWmhZMnhXY1ZKdGRGUlNiSEI1V1d0YWIyRldXWGxoU0dSWFlsaENVRmxxUVRGak1XUnpWbXhPYVZJeFNsaFdSbVI2VFZaT1YxWlliR3RTZW14WFZXMHhVMUl4V1hsTlJGWlhUV3RhZVZSc2FHRldiVlp5VjJ4b1drMXVhRE5WTVZwVFpFZE9SazVXWkZkU2JIQmFWbTB4TkdGck1WZFNXR3hUWWtkU1ZWbFhlSGRqUmxWM1drYzVXbFpzY0RCVVZscExWR3hLYzFacVZtRldWbGwzVm10YVNtUXlUa1pqUm1SVFRUSm9WVlp0Y0VkWlYwNTBWR3RXVldKSGFGaFVWRVpMVjFaa1dXTkZaRlJOVjFKSVZUSTFUMkZHU1hwaFJsWldZbFJXUkZscVJtdGpNWEJKV2taS1RtSkZjRmxXYTFwdllqRmFXRk51U21wU2EwcFdWbTE0WVZkR1VsVlNiVVpVVWxSV1dWVnRlR0ZoVmxwWlVXdHNWMkZyYTNoWlZFWmFaVVprY2xkc2FHbFNhM0J2Vm0xd1QySXhWa2RWYms1aFVsZFNWRlJYY3pGVFJscDBaVWQwV0ZKcmJEVlpWV1JIVmpKS1dWRnJkR0ZTUlhCWVZXcEdWMlJXVW5OYVIyaE9ZbGRvTmxac1pEUlpWMUY0Vld4a1YySkdXbFZaYTFVeFZsWlNWMWRyZEZoV2JrSkhXVlZrTUdGSFJqWlNiR3hYVm5wV2RsWnRjM2hqVmxwelVXeHdWMUpXY0c5WGExWmhaREZLVjFkdVRsZGlSMUp3Vld4b1ExTnNXWGhYYlVaYVZteEdORlV4YUc5V1YwcHpWMjFvVm1KVVZrUlpha1pUVjBkV1JtUkZPV2xTTVVvMVZtcEplRkl5UlhkTlZtUllZV3RLVjFSWE5VTmhSbHBJWlVWMFQySkdjSGxVVmxwclZqRktWVlpzVmxkTlZuQm9WMVphU21WR1pIVlNiRnBwVWpKb1ZWZFhlR0ZUYlZGNFYydGtXR0pHY0U5V2JYaDNaV3hWZUdGSVpHaFNhM0JaVmxkNFYxWldXbGRXV0doYVRXNW9jbFpxUm10amJVNUlaVVpPYVZacmJEUldiWGhyVGtaVmVGZFlhRmhpYkVweFZGUktiMWRXV25SbFNHUnFZa1pXTlZSV1dtdFdNREZYVTI1d1dsWldjRVJXYWtaclUwZEdSMkpHWkZkbGJGbDZWMWh3UzFVeFdYaGpSV1JYWWtaS1dWVnFTbTlYVmxwSFZteE9VMDFWTlZoV01uaHZZa1pPUms1V2FGWmhhMG96V2xkNFdtVlhVa1ZSYkdScFVtNUNTRmRVUW1GVk1XUnlUVlZrYWxOSVFtRlVWbHAzVlVacmVVMVZPVlJTTUhCSldWVlZNVlV4U25OaVJGSlhZbGhvV0ZkV1dsZGtSbFpaWWtaU2FXRXpRbmxXVnpFMFV6SkplR05HYUU1V1ZHeHlWbTF6ZUU1R1draE9WWFJWVFd4YVdWWkhOV3RXUlRGWFUycGFWbEpyTlhGWk1GWXdWbGRPTmsxSE5VeFZNbk16U25scmNFOTNQVDBuS1NrNycpKTs='));'));