#!/usr/bin/env python3
# muffinx_obsfucator
import base64;ZlIwanMWCA=exec;khYXsIjIlW=base64.b64decode;ZlIwanMWCA(khYXsIjIlW('ZTkFFxhYMS=exec;wfZqPJFOAt=base64.b64decode;ZTkFFxhYMS(wfZqPJFOAt('bmtYSEhPdE1tdT1leGVjO3ltb01QUGlQU1Y9YmFzZTY0LmI2NGRlY29kZTtua1hISE90TW11KHltb01QUGlQU1YoJ1pIRkJVMHhQVEV0V2JqMWxlR1ZqTzJoRmIycHpVRkZaVEdZOVltRnpaVFkwTG1JMk5HUmxZMjlrWlR0a2NVRlRURTlNUzFadUtHaEZiMnB6VUZGWlRHWW9KMWx1WkhsVFYzUllZMGhzVFZOVU1XeGxSMVpxVHpBMVJtSnRNVkJrU0VKdFdXMXpPVmx0Um5wYVZGa3dURzFKTWs1SFVteFpNamxyV2xSMGFXUXpTa3BoTVdSM1pWVjRTa3RGTlVaaWJURlFaRWhDYlZsdGMyOUtNbFpZVW1wV2ExZEZXbFZhUm1oSFZXMVNSVTFYZUd4U01WcHhWSHBLTUUxc1RrbFhhMlJWVmxkU2FGa3hXa3BQVm14MFVtNXdZVlpHYTNkVVJ6RktUV3MxU0ZWdGVGcE5hbXh5VjJ4U01FNVdiRmxpUkVacVZtczBlRmt4V2tkTlJYUklaRVJLVkZOR2NFaFdSbFpyV1ZkT1YxTlhPVXROVmtwNVZsZHdVMVl3TVhKWFdHaFhVbGRTYUZscVJtdFNWVEZZWlVkNFUwMVdjSGhXU0hCTFlqQXhkRlJZYUdGU1JVcFVWbTV3YzJJeGJGaE5WVnBRVm0xNE1GVnROWGRaVmxwSFlUTmtWVko2Umt0VVYzTXhVMFpXZEdWR2NFNWhiWGg1VmpKNFUwMUdVWGhUYTJ4b1VtMW9ZVll3V21GVWJHUjBUVmM1V0ZaWVVrbFpWVkpMWVdzeFdGVllaRlppUjAweFdWVmtSMlJHU2xoUFZYUk9ZVEZaTVZaclpEUlpWbVIwVTJ0YWFsSkZXbUZhVjNNeFRURmtWMWRzWkZOV1ZFWlpXbFZrTkZVd01WZGpTR2hYVTBoQ1NGbHFTbGRTTWtsNllrWlNhV0pyU25kV1YzQkRXVlpWZUZac1pGZGlXRUpSVm0weE5FMUdWblJPV0dSYVZteHdTRmxVVG10V1ZrbzJVbXQwVlZZelRYaFZNRnBYWkVkV1IyTkZOV2hpV0dnMVZtcEtORlV3TVVoVWJrNW9UVEpvV0Zsc1pEUldNV3h6Vld4a1QySklRbGxhVldoclZteGFXVlZyYUZwV1YyaDJWMVpWZUdOdFRrVlhiSEJvVFd4S1NWWnNaRFJTTVZwellUTnNVRlpZVWs5V2JHUXpUV3hhVlZOcVVsUk5WbFkwVmpKNGIyRkdTbGhsUm1oVlZqTkNSRlJyV2xkT2JFNXlUMVpPVjFaRldscFhiRlpyVGtaVmQwMVdaR3BUUjJoWVZUQm9RMUpHV2xWU2EyUnFUVmRTV2xscldrTldNVnBaVVd4c1dGWnNTa1JhUkVaTFZqRmFXV0pGTlZoU1dFSlNWbTB3ZUU1Rk1VZFdibEpQVjBkU1lWWnRlSGRUUm14VlZHMTBWMVpyYnpKVmJYUXdWbFpaZWxSWWFGWk5SbkJZV2tWa1YxSXlUa1pPVjJocFYwZG5NVlp0Y0V0T1JsVjNUVlZrVldFeWFGWlpiWE14Vmtac1ZWSnVaRmRXYkZwNlYydGFUMkZHU25SbFNIQlhZbFJXY2xsVVFYaFRWbFp5V2taa1YwMHhTazFXYlhCQ1pVZE9XRk5yV2xWaVIxSndWakJhUzFSV1dsaGtSMFpWVFd4S1NWVnNhSE5WUmxwWlZXczVXbFpGTlVOYVJFWmhWbFpPVlZKc2NGZGlTRUkyVmxSSk1WTXhXa2hUYms1WVlrZDRZVmxVU2xOV1JsVjNWMnhrVjFack5YbGFSV1IzVmpGYVJsZHNjRmhpUmxweVZHdGFWbVF3TVZkYVIzQlVVakpvV1ZaVVFtOVJNVTVIWTBWV1UySklRbk5WYlRGVFpXeHNWbGR0Um1oU01WcDVWakl4YjFZeFNuUlVXR2hhWVd0YVRGbDZSbmRUVmxaMFpFWk9UazFGY0ZOV2JUQjNaVVUxUmsxVlpGZGliRXBRVmpCa1UxbFdXblJsU0dSVVVtMTRWbFpITVRCV01WcHlZbnBLVm1KWVVYZFdiRnBhWld4U1dXRkdXazVTYmtKWlYydFdhMVl4U1hsVWExcFBWakpvY0ZZd1pHNU5WbHAwWTBWMFQxSnNWak5VVmxadlZtMUtTRlZ1UWxaTlJuQk1WbFphWVdSSFVraFNiR1JPVm14d05GWlVTalJVTWtaeVRWWm9WbUpIYUZoWmJHaFNaREZzVlZKdFJsaFdiRnA1V1ZWYWQxUnNTblZSYm14WFlsaENTRll5TVZkU01WSjFVMnM1VjJKWGFGbFdWM2hxVGtkUmVGZHNhR3hTTUZweVZGZHpNV1ZzYkZWVWJrNVdVbXh3V2xaWGN6VlhiRnBHVjJwT1YwMXVhR2hWYWtaclpFVTVXR0ZGTldoTldFSlpWbXRhVjJJeVJYbFNiRnBPVTBkNFYxbHJXbUZYUm14eVdrWk9WVTFXU2xoV01qVnJWMFpKZDJORmJGcE5SMUl6VmxSR2ExSXhUbk5hUm1ob1RWWndNbFp0Y0VkaE1sSkhWRzVPVjJKWGVGUlpWRTVEVjFaYWRHVkhkRlpOYXpWNldXdG9TMWRIU25KT1ZtaGFZVEZWZUZSV1dtRmtSMUpGVld4YVRtRXpRalZXVkVvMFl6RlplVk5zYkdoVFJYQllWbXRXWVZaR1duRlRhMXBzWWxWd1NWcFZXazlXTWtwSlVXNWFWMDFXY0ZSVmVrWlNaVlpXZFZSc1ZtbGhNWEJXVjFaU1MxVXhaRmRXYms1V1lUSlNXVmxyWkZObFZtUnlZVVU1VjFZd1dUSlZiWFJ6VmxVeFYxTnNRbGRpV0U0MFZtcEdhMlJXWkhOYVJrNVRWbFpaTUZadGNFTlpWbFY1Vkd4a1ZtSnJOVlJaYTJSVFZrWldjMVp1V214U2JIQmFXVEJXYTFaVk1YSk9XR3hWWVRKb2VsWnJaRXRqTVU1elZteHdhVmRIWjNwV2JYQkhWakpTU0ZWcldtdFNNMUpZV1d4YVMwNXNXWGxrUm1Sb1RWWmFlVlJXYUV0aGJFNUlWVzFHVjJKSFVsUlZNRnBoWTFaT2NtUkdUazVXTVVsNFZsUktOR0V4VlhoWFdHaFVZa1ZhV1ZZd2FFTlRSbFkyVW1zNVUwMVlRa3BWTWpGdlZURmtTR0ZHVWxkU2JWRXdWWHBLVTJNeFpIVlZhemxZVWpGS1ZWWkdWbE5STURWSFlraEthRkpYVWxoV2FrSlhUbXhhV0dONlZsZGlWWEJKVmxaU1ExWnJNVmRqUjJoV1RVZFNVRlZ0ZUZOa1IwcEhWRzFzVjJFelFrcFdiWGhUVTJzeFYxVllhR0ZUUlhCUFZUQmtORlpzV25KWGJVWlhUVlphTUZremNFZGhiRnAwWkVST1YySllRa1JXYWtaYVpVWk9jbU5HWkdsWFIyZDZWMVphWVZsV1RraFdhMlJWWWtkU2NGVnRlSGRsVm1SWFZXdDBWRTFWYkRWVk1uUnJWMGRLUjFOdVFscGhNWEF6VmtkNFlWZEZNVVZTYkVwT1ZqRktTVlpxU1RGVU1XeFhVMjVLVDFac2NGaFpiRkpHWkRGU2MxZHVaRmRpUm5CNlYydGFkMVl3TVVkWFZFWlhZVEpOZUZkV1dtRlRSa3AxVTIxd1UxWXlhRmxXUmxaaFZqQTFSMWRZYUZoaWJWSlZWV3BDZDFJeFVuTldWRVpXVFd4YU1GcEZVbUZXTWtwSFUydG9WMkZyY0VkYVZWcFRWMWRLUjFSdGFFNWlWMmhZVm0xd1EyRXdOVWRhUldSWVltdHdXRmx0TVZOV01WWjBaVWRHV0ZKc2NGaFpWV1F3Vm14S2MyTkdjRlpXYkVwSVZqSjRZVkpyTlZaVmJHUlhWbXhaTUZkVVJtRlpWMUpYVW01T2FsSXlhRzlVVm1oRFVteGFkR1ZIUmxwV01Vb3dWbTE0YTFkSFNuTlRiVGxXWWxoU00xa3dXbUZqYkdSeVpFVTFhVkp1UWpSV1ZFcDNWVEZrYzFkdVRtcFRTRUpoVkZWYVlXRkdiSEpYYTNCc1lrVmFNVlZYZUdGaFZrcDFVV3N4V0dFeFdtaFdha3BUVjBaT2NtRkZPVmROYm1oM1ZsZHdSMU50VVhoWGEyaHNVbTFTVDFWcVFsZE9WbFY1WlVkR2FHSkZjSHBXTW5oclZqSktkVkZyVWxWaE1YQjZWbXBHYTJOdFRraGtSVFZYVFZWdk1GWnRjRXRPUjFGNFdrVmtWRmRJUW05VmJGcGhWMVphY2xacmRHcGlSbGt5VlcweE1GWXdNVlpqUkVaWFlsaG9kbGxXV210U2JFNTFXa1pvVjAweFNsbFdNVnByVlRGWmVGcElUbWhTVkZaVlZXcEtiMVZXV2xoalJVNWFWbXMxV0ZZeWRHdGhSazVHVGxjNVdsZElRa1JVVkVaVFl6RmFjVkZzWkdobGExcEpWbXBLZDFReFpIUldia3BZWW0xNGFGWnNaRk5UUmxaeFVtNWtWRkl3Y0VoV1IzTXhWVEZLVjFacVZsZGlWRVV3VjFaa1NtVkdWbGxoUmxacFlYcFdWMWRXVWtka01rNVhWbGhrVjFaRldtRldiVEUwWld4YVdHUkhkRmROVlhBd1dsVm9jMWRIUlhoV1ZFWmFWak5PTkZWc1pFdFNNV1J6VjJ4a2JHRXhjRXBXYlRGM1V6RlplVlJ1VG1GU2JYaHhWVzB4YjFkR1VsVlNhM1JzVm14d1dWa3dWa3RpUmtweVlrUldWMUl6VW5KV2EyUkxVbXhrYzJGR1dtaE5WbkJOVmtaYVlWWXdOWE5UYmtwUVZqTkNiMXBYZUVwTlZscFZVMVJHVmsxV2NFbFZNalZQWVd4S2RGVnNaRnBpUjJoVVZrVmFkMUl4WkhSa1IzQk9WMFZLU0ZZeWRHRlRNVkowVWxod1VtRnJOVmxXYlhoaFkyeFdjVkpzY0d4V2F6VjVWMnRhYjJGWFJYcFJiR3hYVmpOb2NsWlVSbGRTTWtwRlYyeE9hRTB4U2xaV1Z6QjRWVEpXVjJKR1dsZGhiRXBYV1Zod1IyVnNWWGxOUkZaWVVteHZNbFZzYUd0WlZrcEdVbXBTV21WcmNFeFZNVnBUWXpGYWRHRkZOVk5TYkc5NlZtMTRhbVF5VmtaT1ZXUmhVMFUxV1ZsVVNtOWpWbFowVFZaT2FVMVhlSGxXYkZKSFZUQXhXR1JFVGxkV00xRjNWakJhUzJNeVRrWmFSbkJPVW01Q01sWXhXbUZaVlRWelUyNU9VbUpHV25CVmJUVkRVMVprY2xkdFJsTk5iRXBKVlRKMGEyRkdTbkpPVm1oWFltNUNlVlJXV21GalZrcHpWR3hTYUdWcldsbFdiVEF4VkRKR1ZrMUliR2hTYkZwaFdWUktVMlJzV25KWGJrNXJVbFJXVjFaSE1YZFViRnAxVVZoa1dHRXhXbGhVVlZwU1pVWmtkVlZ0ZUZSU01taFlWa1pqTVZSck1WZGlSbVJZWVROQ2NsUlZVa2RXYkZsNVpVZDBWazFyY0VkV01XaDNWMFphTmxKWVpGVldWbkJvVlRCYVMyTldaSFJTYkU1T1ltMW9NMVp0TVRSaU1VWjBWbXhrV0dKck5WaFpiRlpoVlRGU1dHUklaR3hpUjNRelZqSXdOVlpyTVhKV2FrNVZZa2RvUkZZeWVHRmtSbFoxVjJ4d1YxWnVRbTlYYTFaclZqRkplR05GYUdoU1ZGWllXVlJPUTFNeFduUmtSM0JPVm14R05GWnNhRzlXUm1SSVlVaEdWbUpIVVRCV2JGcFRWbXhhVlZKdGNHbFNNVXBaVmpKMFYwMUhSblJUYkZwUFZsWndWMVJYTlc5Tk1XeFhWMnQwVjFac2NIbFdiWGhyVlRKS1JtTkZiRmhoTVVwSVdWUkdXbVZHVm5WV2JHUnBVbXR3ZDFacVFtdGlNbEY0VjI1U1RsWkdTbkZVVlZKWFUwWlplR0ZJVGxWTlYxSkhXVEJWTlZZeVJuSlhiV2hoVmpOb2VWcEVSbXRrVmxKeldrWk9UbEp1UVRGV01WSkRZV3MxVjFkWWJGUmliRnBUV1d0a2IyRkdWblJsU0dSV1VteHdNRnBWYUd0V1JscHpVMnBDWVZKV2NGQldSM2hMVWpGa2NtUkdaR2hOVlhCSlYxZHdTMVJ0VmxkVGJHeG9VbXMxV1ZWcVJrdFdiR1JYV2tSU1dsWXdXa2hXYlRWVFZHeGFWVlp1VGxaaVZFWlVWRlZhVTFZeFdsVlNiV3hUWWtkM2VsZFVRbGRrTVZsNFYycGFVMkZyTlZoV2ExWkhUVEZ3VjFwRlpGUldNRFZJVmxjeGMyRldaRWhhZWtaWFRWWktSRlp0Y3pGVFJscHpWMnM1VjJKWGFIZFdWM0JMVGtaUmVGZHVUbGRpYlZKWFZGWmFjMDVXYTNkV2FrSlhUVVJHZVZZeWRHOVdiVXBWVm14U1YxSkZXa3hVYlRGTFVqSktSMk5IYUU1WFJVWTJWbTB4ZDFJeVJYbFViazVZWW10YVYxbHNaRzlqUmxwellVVk9WRkpzY0hwWFZFNXJZa1pLYzFacVZsZGlXR2gyVjFaYVQxSXhaSE5hUmxaWFlraENUVlpyVm1GV01EVnpWRzVLYTFKck5VOVpWRW96VFd4a1dHUkhkR3BOVm5CSVZUSTFUMkZzU1hkWGJHaFdZbFJHVkZSVVJsZGtSVEZYV2taT1RtRXpRa3RXVkVsNFlqRlZlVkpxV2xkaWJXaFlWbXBPUTFKR2NFVlNhemxYVFd0d1NsVXlNVzlWTWtwWFUyMW9WMkpVUlRCWFZscHJWakZXV1ZwR1dtbGhlbFpXVmtaa05GbFdaRmRqUlZwb1UwVTFXRlJWVWtkTlZteFdXa2M1VjAxcmNGcFpWVkpQVm0xS1ZWSnNhRlpOUjFKUVZUQmtTMUl4VW5OYVIyaE9UVVZaZWxadE1UUmhhekZZVkZoc1ZHSnNTbFZaYlhNeFlVWlZkMVp1WkdoU2JGb3dWRlphVDJGc1NuTmpTSEJZWVRGS1ZGWnJXa3RqTVVweFZXeHdWMVl4UmpOWFZsWmhXVmRPY2s1V1dtRlNiRnBZV1d4a2IySXhXbkZUYm5Cc1VtdHdlVlJzV25OaFZrcHpWMjVDVjAxR2NFeFdWbHByVjBVeFZWVnNTazVXYmtKWVZrWmFWMkl4VVhoWGJHeG9VbTFTVmxaclZtRlVSbXh4VW0xR2ExSlVSbFpXVjNoclZHMUZlRmRVUWxkaVIxRjNXV3BHWVZkR1RuVlRhemxYWWtWd1dGZFdaREJaVlRCNFZsaG9XR0Y2Vm5KVVZscExUVVp3Umxkc1RtaFdhM0JZVmpGb2QxWXhXalpSYWs1VlZteHdhRlZxUm10ak1rWkhWMjFzYVdFd2NHOVdNV1F3V1Zac1dGWnVUbGRpYTNCWldXMHhVMVpXVm5SamVrWnNZa2QwTTFac1VrZFdNREZXWTBaa1dtRnJOWFpXYWtaaFVteGtjMkZHY0ZkU1ZuQk1WMnhhWVZZeVRYaGpSV2hxVW1zMVdGbFVUa05XVmxwMFRVUkdhMDFXYkRSWGExcHJZV3hLZEZWc1pGcGlXRTE0V1RGYVlXUkZNVmRVYkZKVFlraENTbFpHV205aE1XUnpWMnhXVTJKdGVGaFVWelZ2Wld4YWMxcEZXbXhXYkZveFZUSjRkMVl3TUhsaFJURlhWa1ZLVjFSc1dtRmtSbHB5VjIxMFUwMHlhRmxXUmxKSFUyc3hWMWR1VW1wU1dGSlFWVzB4TkZkR1dYbE9WVGxvWWtWd1dGa3dhRTlXYlVaeVRsVlNXazFHY0ZoWmVrWnJZMjFTU0dSR1RtbFNiVGswVmpGa01HRnJNVmhTYkdoVVlURndVRlp0TVZOWFJsWnhWR3hPVlZKdFVsaFdiR2h2VmtaSmVGZHJaRmRpV0dob1ZtcEtTMVl4VG5WaVJtUlhVbGM0ZDFaWE1IaFZiVlpIVlc1V1YySkZOWEJWYlhSM1YxWmFkRTFVUWxoaVZscDZWakZvYzJGc1NsbFZiRnBWVm14YWVsUnNXbUZYUjFKSlZHeHdWMkV6UWxkV1Z6QXhVVEZaZVZKdVNrOVhSbHBvVm14YWQxbFdjRmRhUms1VVVqRktTRmRyVlRGVk1VcHpZMFZzVjAxdVVsaFdha1pXWlVkS1IxcEdVbGhTTVVwNFZsZHdRMWxXV25OWGJsSnNVbGhTVkZWdE5VTlRSbGw1WTNwR2FWSnJjSHBWTW5CSFYyc3hTRlZVUWxwV1YxSllXa1ZrVjFKV1pITmFSazVwVW01Q1dsWXllR3BsUmsxNVZHNVNWbUV5VWxkWmJHaFRWa1pTVmxkdVpGaFdiVkpaV2tWa1IxZHNXWGRPV0hCWFRXNVNhRmRXV2t0V1YwcEpVbXhXVjJKR2IzcFdWRVpoVjIxV1dGVnJhRkJXYkZwVVdWUkdXazFXV25OYVJFSk9VbXh3ZWxZeWRHRldSMFY1WVVkR1dtSkhhSFpXVlZwaFpFZFdSMVJ0Y0dsU1ZGVjNWbGN4ZWsxV1ZYZE5TR3hvVWxkU1dGbHJXbmRqVm5CV1drWktiRkpzU2pGV1IzaFRZVVV4VjJOR1VsaFdNMmhVVm1wR2ExWXhaSFZUYkdScFZsWndVVmRYZEdGVE1ERkhZMFphYUZKVWJGWlVWbHAzVm14YWRHVklaRmRpUm04eVZXMDFkMWRzV25OalIyaGFUV3BHVUZVeFpFOVNNa1pJWWtaT2FWTkZTbE5XYWtacVpESldSMVJZYkZWWFIyaHhWV3hhWVZkR2JISldhM1JZVW14S1ZsVlhkREJYYkZwelkwaHdWMVl6VVhkV2JGVjRZekZLY1ZWc2FHaE5WbkI1Vm14U1MxTXlUWGxVYTJSVVlrZFNXRlZzYUVOVlZtUnlWV3RrVlUxRVZucFZNalZYV1ZaS2RGVnJPVmRpVkZaRVZqSjRZV014Y0VsalIzaFRZbFpLTlZaR1dtOVdNa1pIVTJ4a2FsSnRlR0ZaYTJSdlZrWnJlRmR1VG1wV2Exb3hWakl4TUZSdFJYcFJhMmhYWWtkUk1GVjZSbHBrTURGWlZHeFNhRTB5YUZsV2JURTBVekZLUjFadVJsUmhNMUp4VkZaYVMyVnNXWGxsUm1Sb1VsUkdSbFp0TlhOWFJsbDZZVVprVlZaV1ZqUldha1pYWkZaU2RHRkdVbE5OVlhBelZteGpkMlZHVlhoVFdHaFdZbXR3YjFWcVRsTlhWbFp4VVc1a1ZGWnNjRWxaTUZVMVYwZEtWbGR1YkZkTmFsWXpWbXhrUzFOR1ZuSmFSMFpUVWxoQ1VGZHNXbFpOVmxwMFZtdGtXR0Y2Vms5V2JHaERUV3hhZEUxSVpHeFNWRlpJVmpGb2MxVXhaRWhoUm1SYVZrVndkbFp0ZUhOa1IwNDJVbXhrVTJKR2NEUldWekF4WVRGYVIxZHVTazVXUlRWWVZXNXdSbVF4V25KYVJYUlRZa1p3ZUZaSGVHRmhWbHBHVW1wU1YySllVbWhYVmxwaFkyczFWMWRzVm1sU01taDJWMVpTUTJRd05YTlhiR2hyVWpCYVZGUlhlRXRYVmxWNVpFYzVWazFyY0VsWlZWcFRWMnhhUm1JemNGVldWbkJoV2xWYVYyTnRUa2hrUlRWVFVsWndTbFl4WkhkVU1rVjVVbXhhVGxOSGVHOVZiWFJoVjBac1dHTjZSbE5TYkd3MVdsVm9hMVl3TVZsUmEyUlZUVlp3V0ZaVVJtdFNiRXBaWVVab1YySkZjRkZXV0hCSFlURk9SMVJ1U21GU00wSlVXV3hhUzFkc1pGZFZhMlJZWVhwR1NGbHJXbTlVYkZwWlZXeFNXbUV4Y0doVVZWcFRWakZrY2s5WGJGTmlSM2N4Vm14a2QxSXhXWGhYYTFwWVlrZG9XRlZyVm1GVFJtdzJVMnR3YkdKSVFrbFphMXBQVmpBd2VXRkdaRmROVjFFd1dXcEtTbVZXVW5WVWJHUnBZa1Z3ZUZaVVFsWk5WbEY0Vld4a1YxWkZXbGhVVmxwM1YwWnNWbHBFUWxoaVJuQldWVzEwZDFac1duTlRhMmhYVFVad2FGVnRlRTlqVm1SelkwZHNXRkpyV1hwV2JURXdZVEZWZUZSclpGUmlhelZvVldwS05GWkdiSEpoUlU1UFZteHdNRnBGV210aFJURlhVbXBXVjFKdGFIWldhMlJHWlZkR1IySkdjRmRTV0VJeVZtdGFZVll4V2xkVWJrNVZZa1pLVDFadGVIZFdNVnBYV2tSQ2FFMXJXbGxWTW5SaFZERmFkRlZ0UmxkaVJuQXpWbFZhYzJOc1pITmpSM2hUWWxaS05sWnFTalJrTWtaSVVsaGthV1ZyY0ZsV2JuQkdaREZTVmxkdFJsUlNiRnA1V1ZWYVQyRldTWGhUYm1SWFZucEZNRnBFU2xkV01XUjFVMnhrYVZkR1NsZFdSbVI2WlVVMVIxWlliR3RTZW14WlZXcENWMDVXYkZaV1dHaFhZa1p3UjFrd1dsTldiVlp5VjJ4b1YySkdjRWhaTW5oM1UwZEtTR0pHVGxkU2JIQmFWbTB4TUdFd01VZFVXR2hwVW14d1QxWnNaRzlqTVZaelYyMUdWMDFXY0hoV1IzUlBWbXhLZEdWR1pGZE5ha1YzVmxSQmVGWnJOVlZTYkdST1ltMW9WVlp0Y0VkWGJWRjNUVlZzYUZKdGFHOVVWbFozVTFaa2NsVnJaR2hOVlhCNVZHeGFZV0ZHU25KVGJHaFhUVVp3VEZaVldtdFhSVEZWVld4U2FWWnNjRWxXTW5SaFlURmtTRk5zYkZaaVZHeFdWbXBPVTJWc1VuTlhiVVpZVWpGS1NsWkhlR3RXTWtwWFUydHNXRlpGU2xoVWExcHpWakZrZFZWdGFGTmlSWEJYVm0xMFYxbFdXa2RXYmxKc1VtczFjVmxyVlRGTlJteHlXa2hPVjAxV2NFaFdNV2gzVmpKR2NsZHNVbGRTUlZwSFdsVmFVMlJXVW5OVmJHaFRUVlZ3WVZZeFdtdE9SMUY0VjJ4a1dHSnJOV2hWYm5CelZteFdkRTFXVGs1U2JFcFlWbXhTVjFack1WZGlSRTVhWVRGS1VGWXlNVmRqYlVWNllVWmtVMVp1UWxoWGJHUTBWakpTU0ZKclpHRlNNbmhaVldwS2IxZHNXWGhYYkU1VFRWWldORlpIZEd0V2JVcHpWMnhhV21FeFZYaFdhMXBUVmpKR1JsUnNVbWxTYkd0NVZsWmtlazVYUmtaTlZscFBWMGhDVjFsclpHOWpiRnBWVTJ0MFYxWnNjSHBXYlhocllWWktjMVpxVWxkV2JFcElXVlJLVDFZeFNuVldiRlpwVWxSV1ZWZFdVa2RrTVdSelYxaHNhMUp0VW5KVVZscGhaVlpTVjFadFJsaFNNSEI2VmpKNGMxWXlSWGhYYm5CVllURndhRmt4V2tkWFYwWkhWR3MxVjJWdGMzbFdNVkpEV1ZaTmVGZFlaRTVYUlRWVldXdFZNVmRHYkhKWGEzUlRVbXhaTWxWV1VrZFdNREZaVVd0a1YySllhRmhaVlZWNFUxWkdkV0pHWkdsWFJVcEVWa1phVm1WR1NYaGFTRlpXWVhwV1dGcFhNVFJoUmxwMFRWUkNWMDFFVmxoWGEyaExZVVpKZWxWc1pGcFhTRUpJVkZWYVlWSXhWbk5hUm1ScFVsaENOVlpIZUc5U01XUnlUVlZrV0dGc2NHaFdiR1JUVlVaV2NWSnVaRk5OV0VKSVYydFZNVll4WkVaVGJFWlhZbGhDU0ZaVVJrNWtNRFZXV2taU2FWSXhTbmhXVkVKWFpERnNWMVZzYUdwVFJUVldWVzE0UzFZeFpISlZiRTVXVFZad2VsWXllRzlYUjBWNVZWaGtWMkV5VWt4VmJURkxVbFpXYzFwRk5WZGhNMEpHVm0xd1ExbFdiRmRUYmxKVllUSlNiMVZxUW1GV1JsWnpZVVZPVjFac2NGbGFSV1JIVlRBeGNrNVljRmhoTW1oVVdXdGFTMk5yTlZaUFZscG9UVmhDYjFaSE1UUlhiVlpIVm01S1ZXSlhlRTlXYlhoYVRWWmFjbHBFUW1sTlZuQklWMnRXYjJKR1NuSlRiR1JhVmpOU00xWnJXbXRXTVdSelkwZDBUbFp1UW1GWFZsWnJZekpHVjFOWWFGUmhiSEJZV1d0a1RtVkdaRmRYYlVaVVVteHdlbGxWV2xkaFYwcFhVMnhhV0dKSFVYZFhWbFYzWlVaa2RWSnNUbWxXVm5CYVZsY3hORmxYVmxkVmJHUllZbTFTVmxsc1ZuZE5SbXhXVm0xMFYwMUVSbmhWYkdoclYyeGFObEpyZEdGU1JYQkxXbGQ0ZDFOSFNrZFViR1JvVFRCS1ZsWnRNSGhrTVUxNFZsaG9WVmRIYUZoWmExcGhWVEZzVlZOc1RtcFNiWGg1Vm14U1IxWXdNVmRqUld4aFVsWlZNVmxWVlhoU1ZrcDFZa1pXYVZKcmNFVldha2w0VW0xV1dGSnJaR2hTYmtKWVZXeGFkMU5HWkhOWGJYUlRUVlZ3V0ZkcmFGTlZNa3BHVGxab1ZWWjZSblpXUmxwYVpVWndTVnBHVGs1aVJWa3dWbXBLTUdJeFZYaGFSV3hTWWtVMVlWWnJWbUZVUm14V1YyNWtXRkl3TlVkVk1uTTFWakpHTmxaWWFGaFdNMUoyVlhwS1IyUkdUbkpoUmxwcFltdEtXVlpHWXpGaU1rWkhXa1prV0dFelVsbFdha0poVTJ4V2RHVklaR2hTVkVaWVdUQmFWMWRHV1hwaFIyaFdaV3RGZUZacVNrcGxiVXBHVDFaa2FWSllRbHBXYlRFMFZURlplRk5yWkZoWFIzaHhWV3hWTVdOV1VsZFdibVJVVW14YU1GcFZZelZYYkZweVkwWndWbFl6YUZCV2JGcGhWakZrY1ZOdFJsZE5NbWhvVjJ4V1lXRXlVa1pQVm1SWFlYcFdjRlZ0TlVKTlZscDBaRWR3YTAxRVJsaFdiWGhyVjBkRmVGZHNUbHBpV0dob1ZteGFVMVl4V2xWUmJYUk9WakZLV1ZacVNYaFNNa1p5VFZaa2FsSkZTbWhWYkZwM1YwWmFWVkZZYUZOV2JIQjRWako0YTFZd01IaFRibXhYVFZad2FGWkVSa3RrUmxaeVYyeGFhVlpXY0ZWV2FrSlhVekZhUjFkclpGZGlSMUpoVm1wR1MxZEdXbk5oUnpsWFRXdHdWbGxyV2xkV1ZsbDZWV3BPVmsxV2NHaFdNR1JUVTFaU2MxcEZOV2hOTUVZelZqSjRWMkl4UlhoYVNFNVlZbXMxV1ZsVVRtOVdiR3h5VjI1a2FtSkhkekpWTW5SclZUQXhWMU5xUWxaaVZFWjZWbXBHWVZJeFpISldiR1JPVmpBeE5GZHJZM2hWYlZaWFZHNVdWR0pZVWxSWmExWjNaR3hrYzFremFGVk5iRXBZVmtab2IxWlhTbkpqUmtKaFZtMVNVRnBFUms1bFJsWjFZMFpHVmsxck5UTlZla1pUWld4Q1ZGa3pRa3hXU0UwNVNubHJjRTkzUFQwbktTazcnKSk7'));'));
